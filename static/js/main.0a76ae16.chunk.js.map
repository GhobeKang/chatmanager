{"version":3,"sources":["img/AQOOM_logo.png","img/AQOOM_whitelogo.svg","img/Hand.svg","img/messagebubbles.svg","img/memberprofile.svg","img/spam.svg","components/Register_chat.js","components/Signin.js","components/LeftNav.js","components/Header_main.js","components/Section_title.js","components/WordManager.js","components/Whitelist_URL.js","components/Log.js","components/QnA_List_Component.js","components/FAQ_register.js","components/StartMenu.js","components/UserManager.js","components/module_item.js","components/Dashboard.js","components/Modules.js","components/Settings.js","components/Question_reply.js","components/Questions.js","components/Interests.js","components/Interest_words.js","components/FAQ_stats.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","RegisterChat","props","state","isActive","className","src","AQ_LOGO","href","INTRO_IMG_HAND","id","FEATURES_IMG_MESSAGES","FEATURES_IMG_PROFILE","FEATURES_IMG_SPAM","AQ_LOGO_W","target","React","Component","Signin","t","Axios","post","withCredentials","then","response","status","data","window","localStorage","setItem","JSON","stringify","expire_time","getUTCExpiredTime","document","cookie","setValid","alert","now","Date","expireTime","getTime","setTime","toUTCString","user","this","checkValidation","dataOnauth","onTelegramAuth","botName","LeftNav","num","isExist","querySelector","classList","remove","add","to","onClick","ev","activeNav","Header_main","default_info","chat_photo","isOpen","chat_id","getItem","botId","res","setState","result","photo","get","small_file_id","res_photo","undefined","file_path","removeItem","location","toggleDropbox","title","style","color","logout","getHeaderPhoto","Section_title","WordManager","wordlist","value","getWordData","event","length","val","word","is_active","content","type","dataset","map","index","key","word_name","created_time","e","deleteWord","htmlFor","onChange","changeStateWordlist","idx","defaultChecked","confirm","changeValues","onKeyUp","which","submit_blacklist","width","colSpan","Whitelist_URL","whitelist","pattern","getWhitelist","test","url","listup","item","push","url_pattern","created_date","deleteWhitelist","changeStateWhitelist","submit_whitelist","Log","loglist","getContent","del_date","render_resend_icon","msg","photo_base64","img_sr","alt","text","msg_from","parse_mode","restoreMsg","QnA_List_Component","isEditable","isImage","question","faq_content","faq_response","uploadImage","imageType","getFaqList","form_data","FormData","append","file","files","size","makePreview","split","fr","FileReader","onload","img_el","createElement","setAttribute","target_el","firstChild","removeChild","appendChild","readAsDataURL","changeQuestion","changeResponse","toggleRespType","name","uploadedImage","response_type","faq_response_img","confirmEdit","changeToEdit","deleteFaqList","FAQ_register","faqlist","removeImagePreview","clearTexts","img","targetid","blob","Blob","reader","submit_faqlist","preview_img","preview_txt","getStartMenu","submit_startmenu","UserManager","members","userid","user_id","setTimeout","reload","permissions","can_send_messages","can_send_media_messages","can_send_polls","can_send_other_messages","can_pin_messages","can_change_info","until_date","currentTarget","catch","err","is_bot","username","score","act_txt_cnt","act_photo_cnt","act_url_cnt","kickMember","interestMember","scoreUpByBounus","console","log","Module_item","checked","target_id","list_id","link","changeModules","Dashboard","itemlist","list","all_modules","Object","entries","target_pos","getEntireModules","Modules","is_editable","Settings","options","img_filter","block_bot","order_del","is_img_filter","is_block_bot","is_ordering_comeout","save_options","Question_reply","modal","modal_content","reply_to_message_id","mid","close_modal","replied_date","data-mid","open_modal","getModalClass","updateContent","placeholder","send_reply_message","convertDateFormat","Questions","messages","first_name","last_name","date","day","toDateString","toTimeString","Interests","interests","interest_member","serve_interests","active_popup","changeContentbox","entities","parse","registered_time","onclick","closeContentbox","removeEventListener","Interest_words","word_id","FAQ_stats","faq_stats","helpful","notenough","wrong_answer","defaults","baseURL","App","useState","isValid","setIsValid","statusNav","setStatusNav","setChatInfo","cookies","trim","getCookie","basename","setStatus","path","exact","render","Boolean","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"sHAAAA,EAAOC,QAAU,IAA0B,wC,8BCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,kC,4nBCmI5BC,G,kBAxHb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACXC,UAAW,GAHI,E,sEASjB,OACE,yBAAKC,UAAU,OACb,yBAAKA,UAAU,iBACb,4BAAQA,UAAU,cAChB,yBAAKA,UAAU,cACb,yBAAKC,IAAKC,OAEZ,yBAAKF,UAAU,aACb,uBAAGG,KAAK,kBAAR,YAGA,uBAAGH,UAAU,aAAaG,KAAK,WAA/B,aAKJ,yBAAKH,UAAU,iBACb,6BAASA,UAAU,cACjB,yBAAKA,UAAU,cACb,oEAGA,8LAGA,uBAAGG,KAAK,KAAR,cAIF,yBAAKH,UAAU,aACb,yBAAKC,IAAKG,QAGd,6BAASJ,UAAU,gBAAgBK,GAAG,iBACpC,yBAAKL,UAAU,iBACb,yBAAKA,UAAU,eACb,yBAAKC,IAAKK,OAEZ,yBAAKN,UAAU,gBACb,sCACO,6BADP,cAGA,+QAKJ,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,gBACb,uDAGA,qNAIF,yBAAKA,UAAU,eACb,yBAAKC,IAAKM,QAGd,yBAAKP,UAAU,iBACb,yBAAKA,UAAU,eACb,yBAAKC,IAAKO,OAEZ,yBAAKR,UAAU,gBACb,0CACW,6BADX,kBAGA,qOAMN,6BAASA,UAAU,eACjB,yBAAKA,UAAU,eACb,uEAC2C,6BAD3C,kCAIF,uBAAGG,KAAK,KAAR,gBAMN,yBAAKH,UAAU,UACX,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,cACb,yBAAKC,IAAKQ,OAEZ,yBAAKT,UAAU,eAAf,wCAIF,yBAAKA,UAAU,gBACb,uBAAGG,KAAK,qBAAqBO,OAAO,UAApC,YAGA,uBAAGP,KAAK,6BAAR,sB,GA/GWQ,IAAMC,Y,iCCwElBC,G,kBA1Eb,WAAYhB,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACXC,UAAU,GAHK,E,6EAOHe,GAAI,IAAD,OACjBC,IAAMC,KACJ,kBACA,CACEX,GAAIS,GAEN,CAAEG,iBAAiB,IACnBC,MAAK,SAAAC,GACL,GAAwB,MAApBA,EAASC,OACX,IAAsB,IAAlBD,EAASE,KAAgB,CAC3BC,OAAOC,aAAaC,QAClB,eACAC,KAAKC,UAAUP,EAASE,KAAKhB,KAE/BiB,OAAOC,aAAaC,QAAQ,UAAWL,EAASE,KAAKhB,GAAG,IACxD,IAAMsB,EAAc,EAAKC,oBACzBC,SAASC,OAAS,wBAA0BH,EAC5C,EAAK9B,MAAMkC,UAAS,QAEpBC,MACE,2F,0CAQR,IAAIC,EAAM,IAAIC,KAEVC,EADOF,EAAIG,UACS,KAGxB,OAFAH,EAAII,QAAQF,GAELF,EAAIK,gB,qCAGEC,GACbC,KAAKC,gBAAgBF,EAAKlC,M,+BAGlB,IAAD,OACP,OACE,yBAAKL,UAAU,oBACb,yBAAKA,UAAU,cACb,yBAAKC,IAAKC,OAEZ,yBAAKF,UAAU,aACb,uBAAGA,UAAU,cAAb,mCACkC,6BADlC,iCAIA,kBAAC,IAAD,CACE0C,WAAY,SAAAH,GAAI,OAAI,EAAKI,eAAeJ,IACxCK,QAAQ,mBAEV,uBAAG5C,UAAU,cAAb,2JAGsB,uBAAGG,KAAK,IAAR,QAHtB,KAG2C,6BAAK,6BAHhD,4CAIE,uBAAGA,KAAK,0BAAR,0B,GAnESQ,IAAMC,YCuBZiC,G,kBAxBb,WAAYhD,GAAQ,qEACZA,I,uEAEEiD,GACR,IAAMC,EAAUlB,SAASmB,cAAc,4BAKvC,OAJID,GACFA,EAAQE,UAAUC,OAAO,UAE3BrB,SAASmB,cAAT,sCAAsDF,EAAtD,MAA8DG,UAAUE,IAAI,WACrE,I,+BAEC,IAAD,OACP,OACE,6BAASnD,UAAU,YACjB,yBAAKA,UAAU,gBACb,kBAAC,IAAD,CAAMoD,GAAG,aAAaC,QAAS,SAACC,GAAD,OAAQ,EAAKC,UAAU,KAAI,uBAAGvD,UAAU,wBAAvE,cACA,kBAAC,IAAD,CAAMoD,GAAG,WAAWC,QAAS,SAACC,GAAD,OAAQ,EAAKC,UAAU,KAAI,uBAAGvD,UAAU,sBAArE,YACA,kBAAC,IAAD,CAAMoD,GAAG,YAAYC,QAAS,SAACC,GAAD,OAAQ,EAAKC,UAAU,KAAI,uBAAGvD,UAAU,sBAAtE,mB,GAlBYW,IAAMC,YCyEb4C,E,YAzEX,WAAY3D,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACT2D,aAAc,GACdC,WAAY,GACZC,QAAQ,GALG,E,kFASG,IAAD,OACXC,EAAUtC,OAAOC,aAAasC,QAAQ,WAE5C9C,IAAMC,KAAN,sCAA0CwB,KAAK3C,MAAMiE,MAArD,YAAsE,CAACF,QAAUA,IAC5E1C,MAAK,SAAC6C,GACH,EAAKC,SAAS,CAACP,aAAcM,EAAI1C,KAAK4C,SAClCF,EAAI1C,KAAK4C,OAAOC,OAChBnD,IAAMoD,IAAI,sCAA+B,EAAKtE,MAAMiE,MAA1C,qBAAmEC,EAAI1C,KAAK4C,OAAOC,MAAME,eAClGlD,MAAK,SAACmD,GACH,EAAKL,SAAS,CAACN,WAAYW,EAAUhD,KAAK4C,iB,uCAO1D,YAAwCK,IAApC9B,KAAK1C,MAAM4D,WAAWa,UAElB,yBAAKtE,IAAK,2CAAoCuC,KAAK3C,MAAMiE,MAA/C,KAA0DtB,KAAK1C,MAAM4D,WAAWa,YAGvF,K,sCAKP/B,KAAK1C,MAAM6D,OACXnB,KAAKwB,SAAS,CAACL,QAAQ,IAEvBnB,KAAKwB,SAAS,CAACL,QAAQ,M,+BAM3BrC,OAAOC,aAAaiD,WAAW,WAC/B3C,SAASC,OAAS,0DAClBR,OAAOmD,SAAStE,KAAO,M,+BAGjB,IAAD,OACL,OACI,yBAAKH,UAAU,kBACX,yBAAKA,UAAU,gBAGf,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,cAAcqD,QAAS,kBAAM,EAAKqB,kBAC7C,8BAAOlC,KAAK1C,MAAM2D,aAAakB,OAC/B,0BAAM3E,UAAU,oBAEpB,wBAAIA,UAAWwC,KAAK1C,MAAM6D,OAAS,mBAAqB,eACpD,4BAAKnB,KAAK1C,MAAM2D,aAAakB,OAC7B,wBAAIC,MAAO,CAACC,MAAM,WAAYxB,QAAS,kBAAM,EAAKyB,WAAlD,YAEJ,yBAAK9E,UAAU,gBACVwC,KAAKuC,wB,GAlEJpE,IAAMC,WCUjBoE,MAXf,SAAwBnF,GAEpB,OACI,yBAAKG,UAAU,iBACX,wBAAIA,UAAU,SACTH,EAAM8E,SCyJRM,G,kBA1JX,WAAYpF,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACXoF,SAAU,GACVC,MAAO,IAJM,E,iFASf3C,KAAK4C,gB,mCAGKC,GACV7C,KAAKwB,SAAS,CAACmB,MAAOE,EAAM3E,OAAOyE,U,uCAGrB7B,GAAK,IAAD,OAClB,GAAgC,IAA5Bd,KAAK1C,MAAMqF,MAAMG,OAAc,CAC/B,IAAMC,EAAM/C,KAAK1C,MAAMqF,MAEjBvB,EAAUtC,OAAOC,aAAasC,QAAQ,WAC5C,GAAuB,IAAnBD,EAAQ0B,OAUR,OADAtD,MAAM,mDACC,EATPjB,IAAMC,KAAK,eAAgB,CAACwE,KAAMD,EAAK3B,QAASA,IAC/C1C,MAAK,SAAC6C,GACCA,EAAI1C,OACJ,EAAK+D,cACL,EAAKpB,SAAS,CAACmB,MAAO,Y,0CAWtBM,EAAWpF,GAiB3B,OAhBIoF,EACA1E,IAAMC,KAAK,eAAgB,CACvB4C,QAAStC,OAAOC,aAAasC,QAAQ,WACrC6B,QAAS,EACTC,KAAM,SACNtF,GAAIA,IAGRU,IAAMC,KAAK,eAAgB,CACvB4C,QAAStC,OAAOC,aAAasC,QAAQ,WACrC6B,QAAS,EACTC,KAAM,SACNtF,GAAIA,KAIL,I,oCAGI,IAAD,OACVU,IAAMC,KAAK,cAAe,CAAC4C,QAAStC,OAAOC,aAAasC,QAAQ,aAC/D3C,MAAK,SAAC6C,GACH,GAAIA,EAAI1C,MAAuB,MAAf0C,EAAI3C,OAAgB,CAChC,IAAIwE,EAAU7B,EAAI1C,KAElB,EAAK2C,SAAS,CAACkB,SAAUU,EAAQC,KAAI,SAACxE,EAAMyE,GAAP,OACjC,wBAAIC,IAAKD,GACL,4BACKzE,EAAK2E,WAEV,4BACK3E,EAAK4E,cAEV,4BACI,0BAAMjG,UAAU,mBAAmBqD,QAAS,SAAC6C,GAAD,OAAO,EAAKC,WAAW9E,EAAK2E,cACxE,0CAEJ,4BACA,yBAAKhG,UAAU,oBACP,2BAAOA,UAAU,eAAeoG,QAASN,EAAQ,cAC7C,2BACAH,KAAK,WACL3F,UAAU,cACVK,GAAIyF,EAAQ,aACZO,SAAU,SAAC/C,GAAD,OAAQ,EAAKgD,oBAAoBjF,EAAKoE,UAAWpE,EAAKkF,MAChEC,iBAAgBnF,EAAKoE,YAErB,0BAAMzF,UAAU,iBAChB,0BAAMA,UAAU,iC,iCAUrCwF,GAAO,IAAD,OACDlE,OAAOmF,QAAQ,sCAEvB1F,IAAMC,KAAK,cAAe,CACtBwE,KAAMA,EACN5B,QAAStC,OAAOC,aAAasC,QAAQ,aACtC3C,MAAK,SAAC6C,GACc,MAAfA,EAAI3C,SAA+B,IAAb2C,EAAI1C,OAC1BW,MAAM,WAAD,OAAYwD,EAAZ,oBACL,EAAKJ,oB,+BAOX,IAAD,OACL,OACI,yBAAKpF,UAAU,uBACX,yBAAKA,UAAU,eACX,2BAAG,8CAAH,cAEJ,kBAAC,EAAD,CAAO2E,MAAO,qBACd,yBAAK3E,UAAU,wBACX,2BAAOoG,QAAQ,kBAAkBpG,UAAU,mBAA3C,+BACA,yBAAKA,UAAU,cACX,2BAAOK,GAAG,kBAAkBL,UAAU,kBAAkBqG,SAAU,SAAC/C,GAAD,OAAQ,EAAKoD,aAAapD,IAAKqD,QAAS,SAACrD,GAAuB,KAAbA,EAAGsD,OAAe,EAAKC,iBAAiBvD,IAAO6B,MAAO3C,KAAK1C,MAAMqF,QACtL,4BAAQQ,KAAK,SAAS3F,UAAU,qBAAqBqD,QAAS,SAACC,GAAD,OAAQ,EAAKuD,iBAAiBvD,KAA5F,SAIR,uBAAGtD,UAAU,eAAb,aAGA,2BAAOA,UAAU,gBACb,+BACI,4BACI,wBAAI8G,MAAM,OAAV,SACA,wBAAIA,MAAM,OAAV,cACA,wBAAIA,MAAM,OAAV,UACA,wBAAIA,MAAM,OAAV,YAGR,+BACoC,IAA/BtE,KAAK1C,MAAMoF,SAASI,OAEjB,4BAAI,wBAAIyB,QAAQ,IAAI/G,UAAU,cAA1B,aAEJwC,KAAK1C,MAAMoF,gB,GAjJbvE,IAAMC,YCkLjBoG,G,kBAjLX,WAAanH,GAAQ,IAAD,8BAChB,4CAAMA,KACDC,MAAQ,CACTmH,UAAW,GACX9B,MAAO,IAJK,E,8EAQF7B,GAAK,IAAD,OAClB,GAAgC,IAA5Bd,KAAK1C,MAAMqF,MAAMG,OAAc,CAC/B,IAAMC,EAAM/C,KAAK1C,MAAMqF,MAEvB,GADmB3C,KAAKC,gBAAgB8C,GACxB,CACZ,IAAM3B,EAAUtC,OAAOC,aAAasC,QAAQ,WAC5C,GAAuB,IAAnBD,EAAQ0B,OAUR,OADAtD,MAAM,mDACC,EATPjB,IAAMC,KAAK,gBAAiB,CAACkG,QAAS3B,EAAK3B,QAASA,IACnD1C,MAAK,SAAC6C,GACCA,EAAI1C,OACJ,EAAK8F,eACL,EAAKnD,SAAS,CAACmB,MAAO,cAQlCnD,MAAM,iD,sCAKDuD,GACb,GAAmB,kBAARA,EAAkB,CAGzB,SADa,4OACJ6B,KAAK7B,KAFI,gBAEc6B,KAAK7B,O,mCAQ/BF,GACV7C,KAAKwB,SAAS,CAACmB,MAAOE,EAAM3E,OAAOyE,U,sCAGvBkC,GAAM,IAAD,OACL/F,OAAOmF,QAAQ,sCAEvB1F,IAAMC,KAAK,eAAgB,CACvBqG,IAAKA,EACLzD,QAAStC,OAAOC,aAAasC,QAAQ,aACtC3C,MAAK,SAAC6C,GACc,MAAfA,EAAI3C,SAA+B,IAAb2C,EAAI1C,OAC1BW,MAAM,WAAD,OAAYqF,EAAZ,oBACL,EAAKF,qB,2CAOA1B,EAAWpF,GAiB5B,OAhBIoF,EACA1E,IAAMC,KAAK,kBAAmB,CAC1B4C,QAAStC,OAAOC,aAAasC,QAAQ,WACrC6B,QAAS,EACTC,KAAM,SACNtF,GAAIA,IAGRU,IAAMC,KAAK,kBAAmB,CAC1B4C,QAAStC,OAAOC,aAAasC,QAAQ,WACrC6B,QAAS,EACTC,KAAM,SACNtF,GAAIA,KAIL,I,qCAGM,IAAD,OACNuD,EAAUtC,OAAOC,aAAasC,QAAQ,WAErB,IAAnBD,EAAQ0B,QACRvE,IAAMC,KAAK,eAAgB,CAAC4C,QAASA,IACpC1C,MAAK,SAAC6C,GACH,IAAMuD,EAASvD,EAAI1C,KACf4C,EAAS,GAFF,uBAIX,YAAiBqD,EAAjB,+CAAyB,CAAC,IAAjBC,EAAgB,QACrBtD,EAAOuD,KAAKD,IALL,kFAQX,EAAKvD,SAAS,CAACiD,UAAWhD,EAAO4B,KAAI,SAACxE,EAAMyE,GAAP,OACjC,wBAAIC,IAAKD,GACL,4BACKzE,EAAKoG,aAEV,4BACK,IAAIvF,KAAKb,EAAKqG,cAAcpF,eAEjC,4BACI,0BAAMtC,UAAU,mBAAmBqD,QAAS,SAAC6C,GAAD,OAAO,EAAKyB,gBAAgBtG,EAAKoG,gBAC7E,0CAEJ,4BACI,yBAAKzH,UAAU,oBACX,2BAAOA,UAAU,eAAeoG,QAASN,EAAQ,cAC7C,2BACAH,KAAK,WACL3F,UAAU,cACVK,GAAIyF,EAAQ,aACZO,SAAU,SAAC/C,GAAD,OAAQ,EAAKsE,qBAAqBvG,EAAKoE,UAAWpE,EAAKhB,KACjEmG,iBAAgBnF,EAAKoE,YAErB,0BAAMzF,UAAU,iBAChB,0BAAMA,UAAU,gC,0CAa5CwC,KAAK2E,iB,+BAGE,IAAD,OACN,OACI,yBAAKnH,UAAU,qBACX,yBAAKA,UAAU,eACX,2BAAG,8CAAH,cAEJ,kBAAC,EAAD,CAAO2E,MAAO,qBACd,yBAAK3E,UAAU,wBACX,2BAAOoG,QAAQ,kBAAkBpG,UAAU,mBAA3C,6BACA,yBAAKA,UAAU,cACX,2BAAOK,GAAG,kBAAkBL,UAAU,kBAAkBqG,SAAU,SAAC/C,GAAD,OAAQ,EAAKoD,aAAapD,IAAKqD,QAAS,SAACrD,GAAuB,KAAbA,EAAGsD,OAAe,EAAKiB,iBAAiBvE,IAAO6B,MAAO3C,KAAK1C,MAAMqF,QACtL,4BAAQQ,KAAK,SAAS3F,UAAU,qBAAqBqD,QAAS,SAACC,GAAD,OAAQ,EAAKuE,iBAAiBvE,KAA5F,SAIR,uBAAGtD,UAAU,eAAb,aAGA,2BAAOA,UAAU,gBACb,+BACI,4BACI,wBAAI8G,MAAM,OAAV,OACA,wBAAIA,MAAM,OAAV,cACA,wBAAIA,MAAM,OAAV,UACA,wBAAIA,MAAM,OAAV,YAGR,+BACqC,IAAhCtE,KAAK1C,MAAMmH,UAAU3B,OAElB,4BAAI,wBAAIyB,QAAQ,IAAI/G,UAAU,cAA1B,aAEJwC,KAAK1C,MAAMmH,iB,GAzKXtG,IAAMC,YCmHnBkH,G,kBAlHX,WAAajI,GAAQ,IAAD,8BAChB,4CAAMA,KACDC,MAAQ,CACTiI,QAAS,IAHG,E,iFAOC,IAAD,OAChBhH,IAAMC,KAAK,UAAW,CAAC,QAAYM,OAAOC,aAAasC,QAAQ,aAC1D3C,MAAK,SAAC6C,GACH,IAAMuD,EAASvD,EAAI1C,KACf4C,EAAS,GAFF,uBAIX,YAAiBqD,EAAjB,+CAAyB,CAAC,IAAjBC,EAAgB,QACrBtD,EAAOuD,KAAKD,IALL,kFAQX,EAAKvD,SAAS,CAAC+D,QAAS9D,EAAO4B,KAAI,SAACxE,EAAMyE,GAAP,OAC/B,wBAAIC,IAAKD,GACL,4BACKA,GAEL,4BACK,EAAKkC,WAAW3G,IAErB,4BACKA,EAAKsE,MAEV,4BACK,IAAIzD,KAAKb,EAAK4G,UAAU3F,eAE7B,4BACK,EAAK4F,mBAAmB7G,e,iCAStCA,GACP,GAAkB,UAAdA,EAAKsE,KACL,OAAOtE,EAAK8G,IAEZ,GAAI9G,EAAK+G,aAAc,CACnB,IAAMC,EAAS,yBAA2BhH,EAAK+G,aAE/C,OACI,yBAAKnI,IAAKoI,EAAQC,IAAI,qB,iCAM3BjH,GACP,IAAMuE,EAAU,CACZhC,QAAStC,OAAOC,aAAasC,QAAQ,WACrC0E,KAAK,UAAD,OAAYlH,EAAKmH,SAAjB,2DAEcnH,EAAK8G,IAFnB,QAGJM,WAAY,QAEhB1H,IAAMC,KAAN,sCAA0CwB,KAAK3C,MAAMiE,MAArD,gBAA0E8B,K,yCAG3DvE,GAAO,IAAD,OACrB,MAAkB,SAAdA,EAAKsE,KAED,0BAAM3F,UAAU,mBAAmBqD,QAAS,SAACC,GAAD,OAAQ,EAAKoF,WAAWrH,MAGjE,K,+BAKX,OACI,yBAAKrB,UAAU,eACV,yBAAKA,UAAU,eAChB,2BACI,4CADJ,SAIA,kBAAC,EAAD,CAAO2E,MAAO,yCACd,2BAAO3E,UAAU,UACb,+BACI,4BACI,iCAGA,uCAGA,wBAAI8G,MAAM,MAAV,QAGA,wBAAIA,MAAM,OAAV,QAGA,wBAAIA,MAAM,MAAV,aAKR,+BACKtE,KAAK1C,MAAMiI,e,GA3GlBpH,IAAMC,YC+LT+H,E,YAhMb,WAAY9I,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACX8I,YAAY,EACZC,SAAS,EACTC,SAAU,EAAKjJ,MAAMwB,KAAK0H,YAC1B5H,SAAU,EAAKtB,MAAMwB,KAAK2H,aAC1BC,YAAa,GACbC,UAAW,IARI,E,2EAWLxD,GAAU,IAAD,OAErB,GADYpE,OAAOmF,QAAQ,qCAChB,CACT,IAAMpF,EAAO,CACXqE,QAASA,EACT9B,QAAStC,OAAOC,aAAasC,QAAQ,YAGvC9C,IAAMC,KAAK,aAAcK,GAAMH,MAAK,SAAA6C,GAC9BA,EAAI1C,MACJ,EAAKxB,MAAMsJ,mB,qCAMnB3G,KAAKwB,SAAS,CAAE4E,YAAY,M,qCAEfvD,GACb,OAAO7C,KAAKwB,SAAS,CAAE8E,SAAUzD,EAAM3E,OAAOyE,U,qCAEjCE,GACb,OAAO7C,KAAKwB,SAAS,CAAE7C,SAAUkE,EAAM3E,OAAOyE,U,qCAEjCQ,GACA,SAATA,EACFnD,KAAKwB,SAAS,CAAE6E,SAAS,IACP,QAATlD,GACTnD,KAAKwB,SAAS,CAAE6E,SAAS,M,oCAGd,IAAD,OACRO,EAAY,IAAIC,SAEpBD,EAAUE,OAAO,UAAWhI,OAAOC,aAAasC,QAAQ,YACxDuF,EAAUE,OAAO,WAAY9G,KAAK1C,MAAMgJ,UACxCM,EAAUE,OAAO,WAAY9G,KAAK1C,MAAMqB,UACxCiI,EAAUE,OAAO,eAAgB9G,KAAK1C,MAAMmJ,aAC5CG,EAAUE,OAAO,gBAAiB9G,KAAK1C,MAAM+I,QAAU,MAAQ,OAC/DO,EAAUE,OAAO,WAAY9G,KAAK1C,MAAMoJ,WACxCE,EAAUE,OAAO,KAAM9G,KAAK3C,MAAMwB,KAAKhB,IAEnC+I,EAAUjF,IAAI,YAA4C,KAA9BiF,EAAUjF,IAAI,aAC5CpD,IAAMC,KAAK,gBAAiBoI,GAAWlI,MAAK,SAAA6C,GACtCA,EAAI1C,OACN,EAAKxB,MAAMsJ,aACX,EAAKnF,SAAS,CAAC4E,YAAY,U,oCAKrBvD,GACZ,IAAMkE,EAAOlE,EAAM3E,OAAO8I,MAAM,GAChC,GAAID,EAAKE,KAAO,QAEd,OADAzH,MAAM,sCACC,EAETQ,KAAKkH,YAAYH,GACjB/G,KAAKwB,SAAS,CAAEkF,UAAWK,EAAK5D,KAAKgE,MAAM,KAAK,GAAIV,YAAaM,M,kCAGvDA,GACV,IAAMK,EAAK,IAAIC,WACT/D,EAAQtD,KAAK3C,MAAMiG,MAEzB8D,EAAGE,OAAS,SAAS5D,GACnB,IAAM6D,EAASlI,SAASmI,cAAc,OACtCD,EAAOE,aAAa,MAAO/D,EAAExF,OAAOuD,QAGpC,IADA,IAAMiG,EAAYrI,SAASmB,cAAc,uBAAyB8C,GAC3DoE,EAAUC,YACfD,EAAUE,YAAYF,EAAUC,YAGlCD,EAAUG,YAAYN,IAGxBH,EAAGU,cAAcf,K,+BAET,IAAD,OACP,OACE,4BACE,4BACG/G,KAAK1C,MAAM8I,WACV,8BACE5I,UAAU,eACVmF,MAAO3C,KAAK1C,MAAMgJ,SAClBzC,SAAU,SAAA/C,GAAE,OAAI,EAAKiH,eAAejH,MAGtC,yBAAKtD,UAAU,gBAAgBwC,KAAK3C,MAAMwB,KAAK0H,cAGnD,4BACGvG,KAAK1C,MAAM8I,WACV,yBAAK5I,UAAU,oBACZwC,KAAK1C,MAAM+I,QACV,yBAAKxI,GAAI,sBAAwBmC,KAAK3C,MAAMiG,QAE5C,8BACEX,MAAO3C,KAAK1C,MAAMqB,SAClBkF,SAAU,SAAA/C,GAAE,OAAI,EAAKkH,eAAelH,MAGxC,yBAAKtD,UAAU,2BACZwC,KAAK1C,MAAM+I,QACV,0BACE7I,UAAU,0BACVqD,QAAS,SAAAC,GAAE,OAAI,EAAKmH,eAAe,WAGrC,0BACEzK,UAAU,wBACVqD,QAAS,SAAAC,GAAE,OAAI,EAAKmH,eAAe,WAGvC,qCACA,+BACE,2BACE9E,KAAK,OACL+E,KAAK,UACLrE,SAAU,SAAA/C,GAAE,OAAI,EAAKqH,cAAcrH,MAEpCd,KAAK1C,MAAM+I,QACV,0BACE7I,UAAU,uBACVqD,QAAS,kBAAM,EAAKoH,eAAe,UAGrC,0BACEzK,UAAU,yBACVqD,QAAS,kBAAM,EAAKoH,eAAe,aAO7C,yBAAKzK,UAAU,iBACsB,QAAlCwC,KAAK3C,MAAMwB,KAAKuJ,cACfpI,KAAK3C,MAAMwB,KAAK2H,aAEhB,yBACE3I,GAAI,UAAYmC,KAAK3C,MAAMiG,MAC3B7F,IAAKuC,KAAK3C,MAAMwB,KAAKwJ,iBACrBvC,IAAI,wBAMd,4BACG9F,KAAK1C,MAAM8I,WACV,yBAAK5I,UAAU,kBACb,0BACEA,UAAU,iBACVqD,QAAS,SAAA6C,GAAC,OAAI,EAAK4E,iBAErB,0BACE9K,UAAU,mBACVqD,QAAS,SAAA6C,GAAC,OAAI,EAAKlC,SAAS,CAAE4E,YAAY,QAI9C,yBAAK5I,UAAU,kBACb,0BACEA,UAAU,iBACVqD,QAAS,SAAA6C,GAAC,OAAI,EAAK6E,aAAa,EAAKlL,MAAMiG,UAE7C,0BACE9F,UAAU,mBACVqD,QAAS,SAAA6C,GAAC,OAAI,EAAK8E,cAAc,EAAKnL,MAAMwB,KAAK0H,uB,GAvLhCpI,IAAMC,WCwLxBqK,G,kBApLX,WAAYpL,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTyF,IAAK,GACLpE,SAAU,GACV+J,QAAS,GACTrC,SAAS,EACTI,YAAa,GACbC,UAAY,IARD,E,0EAYN7D,GACT,OAAO7C,KAAKwB,SAAS,CAACuB,IAAKF,EAAM3E,OAAOyE,U,qCAG7BE,GACX,OAAO7C,KAAKwB,SAAS,CAAC7C,SAAUkE,EAAM3E,OAAOyE,U,qCAGlCQ,GACE,SAATA,EACAnD,KAAKwB,SAAS,CAAC6E,SAAS,IACR,QAATlD,GACPnD,KAAKwB,SAAS,CAAC6E,SAAS,M,oCAIlBxD,GACV,IAAMkE,EAAOlE,EAAM3E,OAAO8I,MAAM,GAChC,GAAID,EAAKE,KAAO,QAEZ,OADAzH,MAAM,sCACC,EAEXQ,KAAKkH,YAAYH,GACjB/G,KAAKwB,SAAS,CAACkF,UAAWK,EAAK5D,KAAKgE,MAAM,KAAK,GAAIV,YAAaM,M,kCAGxDA,GACR,IAAMK,EAAK,IAAIC,WAEfD,EAAGE,OAAS,SAAS5D,GACjB,IAAM6D,EAASlI,SAASmI,cAAc,OACtCD,EAAOE,aAAa,MAAO/D,EAAExF,OAAOuD,QAGpC,IADA,IAAMiG,EAAYrI,SAASmB,cAAc,uBAClCkH,EAAUC,YACbD,EAAUE,YAAYF,EAAUC,YAGpCtI,SAASmB,cAAc,uBAAuBqH,YAAYN,IAG9DH,EAAGU,cAAcf,K,2CAKjB,IADA,IAAMW,EAAYrI,SAASmB,cAAc,uBAClCkH,EAAUC,YACbD,EAAUE,YAAYF,EAAUC,c,mCAYpC,OAPAtI,SAASmB,cAAc,sBAAsBmC,MAAQ,GAChD3C,KAAK1C,MAAM+I,QAGZrG,KAAK2I,qBAFLtJ,SAASmB,cAAc,+BAA+BmC,MAAQ,IAK3D,I,qCAGIE,GAAQ,IAAD,OACd+D,EAAY,IAAIC,SAEpBD,EAAUE,OAAO,UAAWhI,OAAOC,aAAasC,QAAQ,YACxDuF,EAAUE,OAAO,UAAW9G,KAAK1C,MAAMyF,KACvC6D,EAAUE,OAAO,WAAY9G,KAAK1C,MAAMqB,UACxCiI,EAAUE,OAAO,eAAgB9G,KAAK1C,MAAMmJ,aAC5CG,EAAUE,OAAO,gBAAiB9G,KAAK1C,MAAM+I,QAAU,MAAQ,OAC/DO,EAAUE,OAAO,WAAY9G,KAAK1C,MAAMoJ,WAEpCE,EAAUjF,IAAI,YAA2C,KAA7BiF,EAAUjF,IAAI,YAC1CpD,IAAMC,KAAK,cAAeoI,GACrBlI,MAAK,SAAC6C,GACCA,EAAI1C,OACJ,EAAK8H,aACL,EAAKiC,mB,sCAMPC,EAAK1F,EAAM2F,GACzB,GAAY,OAARD,EAAc,CACd,IAAIE,EAAO,IAAIC,KAAM,CAAEH,GAAO,CAAE1F,KAAM,SAAWA,IAC7C8F,EAAS,IAAI5B,WAEjB4B,EAAO3B,OAAS,SAAUP,GACR1H,SAASmB,cAAc,IAAMsI,GACnCrL,IAAMsJ,EAAK7I,OAAOuD,QAE9BwH,EAAOnB,cAAciB,M,mCAId,IAAD,OACJ3H,EAAUtC,OAAOC,aAAasC,QAAQ,WAErB,IAAnBD,EAAQ0B,QACRvE,IAAMC,KAAK,aAAc,CAAC4C,QAASA,IAClC1C,MAAK,SAAC6C,GACH,IAAMuD,EAASvD,EAAI1C,KACf4C,EAAS,GAFF,uBAIX,YAAiBqD,EAAjB,+CAAyB,CAAC,IAAjBC,EAAgB,QACrBtD,EAAOuD,KAAKD,IALL,kFAQX,EAAKvD,SAAS,CAACkH,QAASjH,EAAO4B,KAAI,SAACxE,EAAMyE,GAAP,OAC/B,kBAAC,EAAD,CAAUzE,KAAMA,EAAMyE,MAAOA,EAAOqD,WAAY,kBAAM,EAAKA,cAAcpD,IAAKD,c,0CAS1FtD,KAAK2G,e,+BAGE,IAAD,OACN,OACI,yBAAKnJ,UAAU,eACX,yBAAKA,UAAU,eACX,2BAAG,8CAAH,kBAEJ,kBAAC,EAAD,CAAO2E,MAAO,sCACd,yBAAK3E,UAAU,kBACX,yBAAKA,UAAU,oBACX,2BAAOoG,QAAQ,aAAf,yCACA,8BAAU/F,GAAG,YAAYL,UAAU,YAAYqG,SAAU,SAAC/C,GAAD,OAAQ,EAAKoD,aAAapD,OAEvF,yBAAKtD,UAAU,oBACX,2BAAOoG,QAAQ,sBAAf,sBACC5D,KAAK1C,MAAM+I,QAAU,yBAAK7I,UAAU,uBAA8B,8BAAUK,GAAG,qBAAqBgG,SAAU,SAAC/C,GAAD,OAAQ,EAAKkH,eAAelH,MAC3I,yBAAKtD,UAAU,2BACVwC,KAAK1C,MAAM+I,QAAU,0BAAM7I,UAAU,0BAA0BqD,QAAS,SAACC,GAAD,OAAQ,EAAKmH,eAAe,WAAmB,0BAAMzK,UAAU,wBAAwBqD,QAAS,SAACC,GAAD,OAAQ,EAAKmH,eAAe,WACrM,qCACA,+BACI,2BAAO9E,KAAK,OAAO+E,KAAK,UAAUrE,SAAU,SAAC/C,GAAD,OAAQ,EAAKqH,cAAcrH,MACtEd,KAAK1C,MAAM+I,QAAU,0BAAM7I,UAAU,uBAAuBqD,QAAS,kBAAM,EAAKoH,eAAe,UAAkB,0BAAMzK,UAAU,yBAAyBqD,QAAS,kBAAM,EAAKoH,eAAe,cAM9M,4BAAQ9E,KAAK,SAAS3F,UAAU,eAAeqD,QAAS,SAACC,GAAD,OAAQ,EAAKoI,eAAepI,KAApF,OAEA,uBAAGtD,UAAU,eAAb,YAGA,2BAAOA,UAAU,UACb,+BACmC,IAA9BwC,KAAK1C,MAAMoL,QAAQ5F,OAEhB,4BAAI,wBAAIyB,QAAQ,IAAI/G,UAAU,cAA1B,aAEJwC,KAAK1C,MAAMoL,e,GA5KZvK,IAAMC,YC4NlBqK,G,kBA5Nb,WAAYpL,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACXqB,SAAU,GACV+J,QAAS,GACTrC,SAAS,EACTI,YAAa,GACbC,UAAW,GACXyC,YAAa,GACbC,YAAa,GACbhD,YAAY,GAVG,E,4EAcJvD,GACb,OAAO7C,KAAKwB,SAAS,CAAE7C,SAAUkE,EAAM3E,OAAOyE,U,qCAI9C3C,KAAKwB,SAAS,CAAE4E,YAAY,M,qCAEfjD,GACA,SAATA,EACFnD,KAAKwB,SAAS,CAAE6E,SAAS,IACP,QAATlD,GACTnD,KAAKwB,SAAS,CAAE6E,SAAS,M,oCAIfxD,GACZ,IAAMkE,EAAOlE,EAAM3E,OAAO8I,MAAM,GAChC,GAAID,EAAKE,KAAO,QAEd,OADAzH,MAAM,sCACC,EAETQ,KAAKkH,YAAYH,GACjB/G,KAAKwB,SAAS,CAAEkF,UAAWK,EAAK5D,KAAKgE,MAAM,KAAK,GAAIV,YAAaM,M,kCAGvDA,GACV,IAAMK,EAAK,IAAIC,WAEfD,EAAGE,OAAS,SAAS5D,GACnB,IAAM6D,EAASlI,SAASmI,cAAc,OACtCD,EAAOE,aAAa,MAAO/D,EAAExF,OAAOuD,QAGpC,IADA,IAAMiG,EAAYrI,SAASmB,cAAc,uBAClCkH,EAAUC,YACfD,EAAUE,YAAYF,EAAUC,YAGlCtI,SAASmB,cAAc,uBAAuBqH,YAAYN,IAG5DH,EAAGU,cAAcf,K,2CAKjB,IADA,IAAMW,EAAYrI,SAASmB,cAAc,uBAClCkH,EAAUC,YACfD,EAAUE,YAAYF,EAAUC,c,mCAWlC,OANK3H,KAAK1C,MAAM+I,QAGdrG,KAAK2I,qBAFLtJ,SAASmB,cAAc,iCAAiCmC,MAAQ,IAK3D,I,uCAGQE,GAAQ,IAAD,OAClB+D,EAAY,IAAIC,SAEpBD,EAAUE,OAAO,UAAWhI,OAAOC,aAAasC,QAAQ,YACxDuF,EAAUE,OAAO,eAAgB9G,KAAK1C,MAAMqB,UAC5CiI,EAAUE,OAAO,cAAe9G,KAAK1C,MAAMmJ,aAC3CG,EAAUE,OAAO,eAAgB9G,KAAK1C,MAAM+I,QAAU,MAAQ,OAC9DO,EAAUE,OAAO,WAAY9G,KAAK1C,MAAMoJ,WAEpCE,EAAUjF,IAAI,YAChBpD,IAAMC,KAAK,gBAAiBoI,GAAWlI,MAAK,SAAA6C,GACtCA,EAAI1C,OACN,EAAKwK,eACL,EAAKT,mB,wCAMM,IAAD,OAEhB,GADY9J,OAAOmF,QAAQ,qCAChB,CACT,IAAMpF,EAAO,CACXuC,QAAStC,OAAOC,aAAasC,QAAQ,YAGvC9C,IAAMC,KAAK,eAAgBK,GAAMH,MAAK,SAAA6C,GAChCA,EAAI1C,MACN,EAAKwK,qB,sCAMGR,EAAK1F,EAAM2F,GACzB,GAAY,OAARD,EAAc,CAChB,IAAIE,EAAO,IAAIC,KAAK,CAACH,GAAM,CAAE1F,KAAM,SAAWA,IAC1C8F,EAAS,IAAI5B,WAEjB4B,EAAO3B,OAAS,SAASP,GACT1H,SAASmB,cAAc,IAAMsI,GACnCrL,IAAMsJ,EAAK7I,OAAOuD,QAE5BwH,EAAOnB,cAAciB,M,qCAIT,IAAD,OACbxK,IAAMC,KAAK,eAAgB,CACzB4C,QAAStC,OAAOC,aAAasC,QAAQ,aACpC3C,MAAK,SAAA6C,GACN,EAAKC,SAAS,CACZ2H,YAAa5H,EAAI1C,KAAK,GAAT,YACbuK,YAAa7H,EAAI1C,KAAK,GAAT,mB,0CAMjBmB,KAAKqJ,iB,+BAGG,IAAD,OACP,OACE,yBAAK7L,UAAU,qBACb,yBAAKA,UAAU,eACb,2BACE,4CADF,4BAIF,kBAAC,EAAD,CAAO2E,MAAO,iDACd,yBAAK3E,UAAU,oBACb,yBAAKA,UAAU,sBACb,2BAAOoG,QAAQ,wBAAf,4BAGC5D,KAAK1C,MAAM+I,QACV,yBAAK7I,UAAU,uBAEf,8BACEK,GAAG,uBACHgG,SAAU,SAAA/C,GAAE,OAAI,EAAKkH,eAAelH,MAGxC,yBAAKtD,UAAU,2BACZwC,KAAK1C,MAAM+I,QACV,0BACE7I,UAAU,0BACVqD,QAAS,SAAAC,GAAE,OAAI,EAAKmH,eAAe,WAGrC,0BACEzK,UAAU,wBACVqD,QAAS,SAAAC,GAAE,OAAI,EAAKmH,eAAe,WAGvC,qCACA,+BACE,2BACE9E,KAAK,OACL+E,KAAK,UACLrE,SAAU,SAAA/C,GAAE,OAAI,EAAKqH,cAAcrH,MAEpCd,KAAK1C,MAAM+I,QACV,0BACE7I,UAAU,uBACVqD,QAAS,kBAAM,EAAKoH,eAAe,UAGrC,0BACEzK,UAAU,yBACVqD,QAAS,kBAAM,EAAKoH,eAAe,cAO/C,4BACE9E,KAAK,SACL3F,UAAU,iBACVqD,QAAS,SAAAC,GAAE,OAAI,EAAKwI,iBAAiBxI,KAHvC,OAQA,uBAAGtD,UAAU,eAAb,YACA,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,oBACe,cAA3BwC,KAAK1C,MAAM6L,YACV,yBAAK3L,UAAU,eACb,yBACEC,IAAKuC,KAAK1C,MAAM6L,YAChBrD,IAAI,2BAIR,yBAAKtI,UAAU,eAAewC,KAAK1C,MAAM8L,oB,GApN5BjL,IAAMC,YCoJlBmL,G,kBAnJX,WAAYlM,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTkM,QAAS,IAHE,E,wEAORC,GAEP,GADe3K,OAAOmF,QAAQ,mCAClB,CACR,IAAMb,EAAU,CACZhC,QAAStC,OAAOC,aAAasC,QAAQ,WACrCqI,QAASD,GAGblL,IAAMC,KAAN,sCAA0CwB,KAAK3C,MAAMiE,MAArD,mBAA6E8B,GACxE1E,MAAK,SAAC6C,GACHoI,YAAW,WACPpL,IAAMC,KAAK,aAAc4E,GACzBtE,OAAOmD,SAAS2H,WACjB,W,qCAKJ/G,EAAO4G,GAElB,GADe3K,OAAOmF,QAAQ,kCAClB,CACR,IAAMb,EAAU,CACZhC,QAAStC,OAAOC,aAAasC,QAAQ,WACrCqI,QAASD,EACTI,YAAa,CACTC,mBAAmB,EACnBC,yBAA0B,EAC1BC,gBAAgB,EAChBC,yBAAyB,EACzBC,kBAAkB,EAClBC,iBAAiB,GAErBC,WAAY,KAGhB7L,IAAMC,KAAN,sCAA0CwB,KAAK3C,MAAMiE,MAArD,uBAAiF8B,GAC5E1E,MAAK,SAAC6C,GACHsB,EAAMwH,cAAcjI,MAAQ,eAC7BkI,OAAM,SAACC,GAEN,OADA/K,MAAM+K,IACC,Q,qCAKRb,GACX,IAAMtG,EAAU,CACZsG,QAASA,EACTtI,QAAStC,OAAOC,aAAasC,QAAQ,YAGzC9C,IAAMC,KAAK,eAAgB4E,GACtB1E,MAAK,WACFc,MAAM,sF,sCAIFkK,GACZ,IAAMtG,EAAU,CACZsG,QAASA,EACTtI,QAAStC,OAAOC,aAAasC,QAAQ,YAGzC9C,IAAMC,KAAK,WAAY4E,GAClB1E,MAAK,WACFc,MAAM,6D,0CAIG,IAAD,OAChBjB,IAAMC,KAAK,kBAAmB,CAAC4C,QAAStC,OAAOC,aAAasC,QAAQ,aAC/D3C,MAAK,SAAC6C,GACH,IAAI6B,EAAU,GADH,uBAGX,YAAiB7B,EAAI1C,KAArB,+CAA2B,CAAC,IAAnBA,EAAkB,QAClBA,EAAK2L,QACNpH,EAAQ4B,KAAKnG,IALV,kFASX,EAAK2C,SAAS,CAACgI,QAASpG,EAAQC,KAAI,SAACxE,EAAMyE,GAAP,OAChC,wBAAIC,IAAKD,GACL,4BACKA,EAAQ,GAEb,4BACKzE,EAAK4L,UAEV,4BACK5L,EAAK6L,OAEV,4BACK7L,EAAK8L,YAAc9L,EAAK+L,cAAgB/L,EAAKgM,aAElD,4BACI,0BAAMrN,UAAU,iBAAiBqD,QAAS,kBAAM,EAAKiK,WAAWjM,EAAKhB,QAEzE,4BACI,0BAAML,UAAU,qBAAqBqD,QAAS,kBAAM,EAAKkK,eAAelM,EAAKhB,QAEjF,4BACI,0BAAML,UAAU,kBAAkBqD,QAAS,kBAAM,EAAKmK,gBAAgBnM,EAAKhB,iBAIxFyM,OAAM,SAASC,GACdU,QAAQC,IAAIX,Q,+BAKpB,OACI,yBAAK/M,UAAU,uBACX,yBAAKA,UAAU,eACX,2BAAG,8CAAH,UAEJ,kBAAC,EAAD,CAAO2E,MAAO,0BACd,2BAAO3E,UAAU,kBACb,+BACI,4BACI,wBAAI8G,MAAM,MAAV,QACA,wCACA,wBAAIA,MAAM,OAAV,UACA,wBAAIA,MAAM,OAAV,WACA,wBAAIA,MAAM,OAAV,QACA,wBAAIA,MAAM,OAAV,cACA,wBAAIA,MAAM,OAAV,YAGR,+BACmC,IAA9BtE,KAAK1C,MAAMkM,QAAQ1G,OAChB,4BAAI,wBAAIyB,QAAQ,IAAI/G,UAAU,cAA1B,aACFwC,KAAK1C,MAAMkM,e,GA5IfrL,IAAMC,YC2CjB+M,E,YA3CX,WAAY9N,GAAQ,qEACVA,I,2EAGIwF,GAOV,OANIA,EAAMwH,cAAce,QACpB7M,IAAMC,KAAK,kBAAmB,CAAC4C,QAAStC,OAAOC,aAAasC,QAAQ,WAAYgK,UAAWrL,KAAK3C,MAAMiO,QAAS1M,OAAQ,IAEvHL,IAAMC,KAAK,kBAAmB,CAAC4C,QAAStC,OAAOC,aAAasC,QAAQ,WAAYgK,UAAWrL,KAAK3C,MAAMiO,QAAS1M,OAAQ,KAGpH,I,+BAGD,IAAD,OACL,OACI,yBAAKpB,UAAU,eACX,yBAAKA,UAAU,gBACX,2BAAIwC,KAAK3C,MAAM8E,QAEnB,yBAAK3E,UAAU,kBACX,2BAAIwC,KAAK3C,MAAM6F,UAEnB,kBAAC,IAAD,CAAMtC,GAAIZ,KAAK3C,MAAMkO,MAArB,WACCvL,KAAK3C,MAAM+I,WACR,yBAAK5I,UAAU,oBACX,2BAAOA,UAAU,eAAeoG,QAAS5D,KAAK3C,MAAMiO,QAAU,WAC1D,2BACAnI,KAAK,WACL3F,UAAU,cACVK,GAAImC,KAAK3C,MAAMiO,QAAU,UACzBzH,SAAU,SAAC/C,GAAD,OAAQ,EAAK0K,cAAc1K,IACrCkD,iBAAgBhE,KAAK3C,MAAM4F,YAE3B,0BAAMzF,UAAU,iBAChB,0BAAMA,UAAU,oBAEf,Q,GAtCHW,IAAMC,WCgFjBqN,G,kBA7EX,WAAYpO,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACToO,SAAU,IAHC,E,8EAOF9M,GAkCb,IAjCA,IAAI+M,EAAO,GACLC,EAAc,CAAC,CACjB/N,GAAI,EACJsE,MAAO,YACPe,QAAS,gCACTqI,KAAM,cACR,CACE1N,GAAI,EACJsE,MAAO,YACPe,QAAS,2BACTqI,KAAM,cACR,CACE1N,GAAI,EACJsE,MAAO,MACPe,QAAS,wDACTqI,KAAM,QACR,CACE1N,GAAI,EACJsE,MAAO,uBACPe,QAAS,8CACTqI,KAAM,cACR,CACE1N,GAAI,EACJsE,MAAO,QACPe,QAAS,4BACTqI,KAAM,UACR,CACE1N,GAAI,EACJsE,MAAO,OACPe,QAAS,YACTqI,KAAM,UAGV,MAAyBM,OAAOC,QAAQlN,GAAxC,eAAiD,CAAC,IAAD,0BAArC2E,EAAqC,KAAhCR,EAAgC,KACvCgJ,EAAaxI,EAAI4D,MAAM,KAAK,GAC9BpE,GACA4I,EAAK3G,KAAK4G,EAAYG,EAAa,IAG3C,OAAOJ,I,0CAGU,IAAD,OAChBpN,IAAMC,KAAK,kBAAmB,CAAC4C,QAAStC,OAAOC,aAAasC,QAAQ,aAC/D3C,MAAK,SAAC6C,GACH,IAAM3C,EAAS2C,EAAI1C,KAAK,GAGlB8M,EAFQ,EAAKK,iBAAiBpN,GAEfyE,KAAI,SAAC0B,EAAMzB,GAAP,OACrB,kBAAC,EAAD,CAAanB,MAAO4C,EAAK5C,MAAOe,QAAS6B,EAAK7B,QAASqI,KAAMxG,EAAKwG,KAAMhI,IAAKD,EAAO8C,YAAY,OAGpG,EAAK5E,SAAS,CAACkK,SAAUC,S,+BAMjC,OACI,yBAAKnO,UAAU,qBACX,kBAAC,EAAD,CAAO2E,MAAM,mBACb,yBAAK3E,UAAU,uBACVwC,KAAK1C,MAAMoO,e,GAvERvN,IAAMC,YC4Gf6N,G,kBA3GX,WAAY5O,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACToO,SAAU,IAHC,E,8EAOF9M,GA+Db,IA9DA,IAAMgN,EAAc,CAAC,CACjB/N,GAAI,EACJsE,MAAO,YACPe,QAAS,gCACTqI,KAAM,aACNW,aAAa,GACf,CACErO,GAAI,EACJsE,MAAO,YACPe,QAAS,2BACTqI,KAAM,aACNW,aAAa,GACf,CACErO,GAAI,EACJsE,MAAO,MACPe,QAAS,wDACTqI,KAAM,OACNW,aAAa,GACf,CACErO,GAAI,EACJsE,MAAO,uBACPe,QAAS,8CACTqI,KAAM,aACNW,aAAa,GACf,CACErO,GAAI,EACJsE,MAAO,QACPe,QAAS,4BACTqI,KAAM,SACNW,aAAa,GACf,CACErO,GAAI,EACJsE,MAAO,OACPe,QAAS,YACTqI,KAAM,QACNW,aAAa,GACf,CACErO,GAAI,EACJsE,MAAO,oBACPe,QAAS,8CACTqI,KAAM,aACNW,aAAa,GACf,CACErO,GAAI,EACJsE,MAAO,mBACPe,QAAS,0CACTqI,KAAM,YACNW,aAAa,GACf,CACErO,GAAI,EACJsE,MAAO,mBACPe,QAAS,yCACTqI,KAAM,YACNW,aAAa,GACf,CACErO,GAAI,GACJsE,MAAO,YACPe,QAAS,+CACTqI,KAAM,YACNW,aAAa,IAGjB,MAAyBL,OAAOC,QAAQlN,GAAxC,eAAiD,CAAC,IAAD,0BAArC2E,EAAqC,KAAhCR,EAAgC,KACvCgJ,EAAaxI,EAAI4D,MAAM,KAAK,GAE9ByE,EAAYG,EAAa,GAAzB,UADAhJ,EAC2C,EAEA,EAGnD,OAAO6I,I,0CAGU,IAAD,OAChBrN,IAAMC,KAAK,kBAAmB,CAAC4C,QAAStC,OAAOC,aAAasC,QAAQ,aAC/D3C,MAAK,SAAC6C,GACH,IAAM3C,EAAS2C,EAAI1C,KAAK,GAGlB8M,EAFQ,EAAKK,iBAAiBpN,GAEfyE,KAAI,SAAC0B,EAAMzB,GAAP,OACrB,kBAAC,EAAD,CAAanB,MAAO4C,EAAK5C,MAAOe,QAAS6B,EAAK7B,QAASqI,KAAMxG,EAAKwG,KAAMnF,WAAYrB,EAAKmH,YAAa3I,IAAKD,EAAOgI,QAASvG,EAAKlH,GAAIoF,UAAW8B,EAAK9B,eAGxJ,EAAKzB,SAAS,CAACkK,SAAUC,S,+BAKjC,OACI,yBAAKnO,UAAU,mBACX,kBAAC,EAAD,CAAO2E,MAAM,YACb,yBAAK3E,UAAU,qBACVwC,KAAK1C,MAAMoO,e,GArGVvN,IAAMC,YC8Eb+N,G,kBA9Eb,WAAY9O,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACX8O,QAAS,IAHM,E,iFAOE,IAAD,OAClB7N,IAAMC,KAAK,aAAc,CACvB4C,QAAStC,OAAOC,aAAasC,QAAQ,aACpC3C,MAAK,SAAA6C,GACN,EAAKC,SAAS,CAAE4K,QAAS7K,EAAI1C,KAAK,U,qCAKpC,IAAMuE,EAAU,CACdhC,QAAStC,OAAOC,aAAasC,QAAQ,WACrCgL,WAAYhN,SAASmB,cAAc,kBAAkB4K,QACrDkB,UAAWjN,SAASmB,cAAc,cAAc4K,QAChDmB,UAAWlN,SAASmB,cAAc,cAAc4K,SAElD7M,IAAMC,KAAK,aAAc4E,GAAS1E,MAAK,SAAS6C,GAC3B,MAAfA,EAAI3C,OACNY,MAAM,uBAENA,MAAM,yC,+BAKF,IAAD,OACP,OACE,yBAAKhC,UAAU,eACb,yBAAKA,UAAU,eACb,wCAIF,kBAAC,EAAD,CAAO2E,MAAO,aACd,2BAAO3E,UAAU,eAAeoG,QAAQ,iBAAxC,iBAEE,2BACET,KAAK,WACL3F,UAAU,cACVK,GAAG,gBACHmG,eAAgBhE,KAAK1C,MAAM8O,QAAQI,gBAErC,0BAAMhP,UAAU,kBAElB,2BAAOA,UAAU,eAAeoG,QAAQ,aAAxC,aAEE,2BACET,KAAK,WACL3F,UAAU,cACVK,GAAG,YACHmG,eAAgBhE,KAAK1C,MAAM8O,QAAQK,eAErC,0BAAMjP,UAAU,kBAElB,2BAAOA,UAAU,eAAeoG,QAAQ,aAAxC,yBAEE,2BACET,KAAK,WACL3F,UAAU,cACVK,GAAG,YACHmG,eAAgBhE,KAAK1C,MAAM8O,QAAQM,sBAErC,0BAAMlP,UAAU,kBAElB,4BAAQA,UAAU,WAAWqD,QAAS,kBAAM,EAAK8L,iBAAjD,a,GAvEexO,IAAMC,YCoFdwO,E,YArFX,WAAYvP,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTuP,OAAO,EACPC,cAAe,IAJJ,E,gFAQAjK,GAAQ,IAAD,OAChBO,EAAU,CACZhC,QAAStC,OAAOC,aAAasC,QAAQ,WACrC0L,oBAAqBlK,EAAMwH,cAAcjH,QAAQ4J,IACjDjH,KAAM/F,KAAK1C,MAAMwP,eAGrBvO,IAAMC,KAAN,sCAA0CwB,KAAK3C,MAAMiE,MAArD,gBAA0E8B,GAAS1E,MAAK,WACpFc,MAAM,uCACN,EAAKyN,cACL1O,IAAMC,KAAK,mBAAoB4E,Q,oCAIzBP,GACV7C,KAAKwB,SAAS,CACVsL,cAAejK,EAAM3E,OAAOyE,U,mCAKhC3C,KAAKwB,SAAS,CAACqL,OAAO,M,oCAItB7M,KAAKwB,SAAS,CAACqL,OAAO,M,sCAItB,IAAMhP,EAAKmC,KAAK3C,MAAMwB,KAAKhB,GAS3B,OANImC,KAAK1C,MAAMuP,MACD,sBAAkBhP,EAAlB,iBAEA,sBAAkBA,K,+BAM1B,IAAD,OACL,OACI,yBAAKL,UAAU,mBACuB,OAAjCwC,KAAK3C,MAAMwB,KAAKqO,aAEjB,yBAAK1P,UAAU,iBACX,uBAAGA,UAAU,YAAY2P,WAAUnN,KAAK3C,MAAMwB,KAAKhB,GAAIgD,QAAS,SAACC,GAAD,OAAQ,EAAKsM,eAA7E,SAGA,yBAAK5P,UAAWwC,KAAKqN,iBACjB,yBAAK7P,UAAU,eACX,6CAEJ,8BAAUA,UAAU,gBAAgBqG,SAAU,SAAC/C,GAAD,OAAQ,EAAKwM,cAAcxM,IAAKyM,YAAY,eAC1F,yBAAK/P,UAAU,kBACX,uBAAGA,UAAU,aAAaqD,QAAS,kBAAM,EAAKoM,gBAA9C,UAGA,uBAAGzP,UAAU,aAAa2P,WAAUnN,KAAK3C,MAAMwB,KAAKhB,GAAIgD,QAAS,SAACC,GAAD,OAAQ,EAAK0M,mBAAmB1M,KAAjG,aAOX,yBAAKtD,UAAU,gBACZ,2CACA,2BACKwC,KAAK3C,MAAMoQ,kBAAkBzN,KAAK3C,MAAMwB,KAAKqO,qB,GA9EzC/O,IAAMC,WCgEpBsP,G,kBA5DX,WAAYrQ,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTqQ,SAAU,IAHC,E,iFAOE,IAAD,OAChBpP,IAAMC,KAAK,eAAgB,CAAC4C,QAAStC,OAAOC,aAAasC,QAAQ,aAC5D3C,MAAK,SAAC6C,GACH,IAAI6B,EAAU,GADH,uBAGX,YAAiB7B,EAAI1C,KAArB,+CAA2B,CAAC,IAAnBA,EAAkB,QAClBA,EAAK2L,QACNpH,EAAQ4B,KAAKnG,IALV,kFASX,EAAK2C,SAAS,CAACmM,SAAUvK,EAAQC,KAAI,SAACxE,EAAMyE,GAAP,OACjC,yBAAK9F,UAAU,yBAAyB+F,IAAKD,GACzC,yBAAK9F,UAAU,qBACX,2BAAIqB,EAAKkH,OAEb,yBAAKvI,UAAU,sBAAf,UACQqB,EAAK+O,WADb,YAC2B/O,EAAKgP,YAEhC,yBAAKrQ,UAAU,kBACX,yBAAKA,UAAU,2BACX,2BAAI,EAAKiQ,kBAAkB5O,EAAKiP,QAEpC,kBAAC,EAAD,CAAgBjP,KAAMA,EAAMyC,MAAO,EAAKjE,MAAMiE,MAAOmM,kBAAmB,EAAKA,8BAK1FnD,OAAM,SAASC,GACdU,QAAQC,IAAIX,Q,wCAINuD,GACd,IAAMC,EAAM,IAAIrO,KAAKoO,GACrB,OAAOC,EAAIC,eAAiB,IAAMD,EAAIE,eAAe9G,MAAM,KAAK,K,+BAIhE,OACI,yBAAK3J,UAAU,qBACX,yBAAKA,UAAU,eACX,2BAAG,8CAAH,sBAEJ,kBAAC,EAAD,CAAO2E,MAAO,4BACkB,IAA/BnC,KAAK1C,MAAMqQ,SAAS7K,OACT,yBAAKtF,UAAU,cAAf,6BACEwC,KAAK1C,MAAMqQ,c,GAvDjBxP,IAAMC,YC2Gf8P,G,kBA3GX,WAAa7Q,GAAQ,IAAD,8BAChB,4CAAMA,KACDC,MAAQ,CACT6Q,UAAW,GACXC,gBAAiB,GACjBC,gBAAiB,GACjBC,cAAc,GANF,E,iFAUC,IAAD,OAChB/P,IAAMC,KAAK,eAAgB,CAAC4C,QAAStC,OAAOC,aAAasC,QAAQ,aAC5D3C,MAAK,SAAC6C,GACH,IAAM6B,EAAU,GADL,uBAGX,YAAiB7B,EAAI1C,KAArB,+CAA2B,CAAC,IAAnBA,EAAkB,QACvBuE,EAAQ4B,KAAKnG,IAJN,kFAOX,EAAK2C,SAAS,CAAC2M,UAAW/K,OAElC7E,IAAMC,KAAK,sBAAuB,CAAC4C,QAAStC,OAAOC,aAAasC,QAAQ,aACnE3C,MAAK,SAAC6C,GACH,IAAM6B,EAAU7B,EAAI1C,KAEpB,EAAK2C,SAAS,CAAC4M,gBAAiBhL,EAAQC,KAAI,SAACxE,EAAMyE,GAAP,OACxC,wBAAI9F,UAAU,kBAAkB+F,IAAKD,GACjC,4BACKzE,EAAK+O,WAAa,IAAM/O,EAAKgP,WAElC,wBAAIhN,QAAS,kBAAM,EAAK0N,iBAAiB1P,EAAK6K,WAC1C,oCAEJ,4BACI,uBAAGlM,UAAU,mC,uCAOpBkM,GAAU,IAAD,OACtB1J,KAAKwB,SAAS,CAAC6M,gBAAiBrO,KAAK1C,MAAM6Q,UAAU9K,KAAI,SAACxE,EAAMyE,GAC5D,IAAMkL,EAAWvP,KAAKwP,MAAM5P,EAAK2P,UAEjC,GAAI3P,EAAK6K,UAAYA,GAAW7K,EAAKkH,KAAM,CACvC,GAAIyI,GAC4B,gBAAxBA,EAAS,GAAT,KACA,OAGR,OACI,yBAAKhR,UAAU,oBAAoB+F,IAAKD,GACpC,2BACKzE,EAAKkH,MAEV,2BACK,EAAK0H,kBAAkB5O,EAAK6P,uBAK7CJ,cAAc,IAElBjP,SAASmB,cAAc,QAAQmO,QAAU,SAAC7N,GACtC,EAAK8N,qB,wCAKT5O,KAAKwB,SAAS,CAAC8M,cAAc,IAC7BjP,SAASmB,cAAc,QAAQqO,oBAAoB,QAAS7O,Q,wCAG9C8N,GACd,IAAMC,EAAM,IAAIrO,KAAKoO,GACrB,OAAOC,EAAIC,eAAiB,IAAMD,EAAIE,eAAe9G,MAAM,KAAK,K,+BAIhE,OACI,yBAAK3J,UAAU,qBACX,yBAAKA,UAAU,eACX,2BAAG,8CAAH,mBAEJ,kBAAC,EAAD,CAAO2E,MAAO,4CACd,2BAAO3E,UAAU,kBACb,+BACI,4BACI,wCACA,oCACA,wCAGR,+BACKwC,KAAK1C,MAAM8Q,kBAGpB,yBAAK5Q,UAAWwC,KAAK1C,MAAMgR,aAAe,4BAA8B,sBACpE,kBAAC,EAAD,CAAOnM,MAAO,2BACbnC,KAAK1C,MAAM+Q,sB,GArGRlQ,IAAMC,YC0Jf0Q,G,kBAzJX,WAAYzR,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACXoF,SAAU,GACVC,MAAO,IAJM,E,iFASf3C,KAAK4C,gB,mCAGKC,GACV7C,KAAKwB,SAAS,CAACmB,MAAOE,EAAM3E,OAAOyE,U,uCAGrB7B,GAAK,IAAD,OAClB,GAAgC,IAA5Bd,KAAK1C,MAAMqF,MAAMG,OAAc,CAC/B,IAAMC,EAAM/C,KAAK1C,MAAMqF,MAEjBvB,EAAUtC,OAAOC,aAAasC,QAAQ,WAC5C,GAAuB,IAAnBD,EAAQ0B,OAUR,OADAtD,MAAM,mDACC,EATPjB,IAAMC,KAAK,iBAAkB,CAACwE,KAAMD,EAAK3B,QAASA,IACjD1C,MAAK,SAAC6C,GACCA,EAAI1C,OACJ,EAAK+D,cACL,EAAKpB,SAAS,CAACmB,MAAO,Y,0CAWtBM,EAAWpF,GAiB3B,OAhBIoF,EACA1E,IAAMC,KAAK,mBAAoB,CAC3B4C,QAAStC,OAAOC,aAAasC,QAAQ,WACrC6B,QAAS,EACTC,KAAM,SACNtF,GAAIA,IAGRU,IAAMC,KAAK,mBAAoB,CAC3B4C,QAAStC,OAAOC,aAAasC,QAAQ,WACrC6B,QAAS,EACTC,KAAM,SACNtF,GAAIA,KAIL,I,oCAGI,IAAD,OACVU,IAAMC,KAAK,mBAAoB,CAAC4C,QAAStC,OAAOC,aAAasC,QAAQ,aACpE3C,MAAK,SAAC6C,GACH,GAAIA,EAAI1C,MAAuB,MAAf0C,EAAI3C,OAAgB,CAChC,IAAIwE,EAAU7B,EAAI1C,KAElB,EAAK2C,SAAS,CAACkB,SAAUU,EAAQC,KAAI,SAACxE,EAAMyE,GAAP,OACjC,wBAAIC,IAAKD,GACL,4BACKzE,EAAK2E,WAEV,4BACK3E,EAAK4E,cAEV,4BACI,0BAAMjG,UAAU,mBAAmBqD,QAAS,SAAC6C,GAAD,OAAO,EAAKC,WAAW9E,EAAKkF,QACxE,0CAEJ,4BACA,yBAAKvG,UAAU,oBACP,2BAAOA,UAAU,eAAeoG,QAASN,EAAQ,cAC7C,2BACAH,KAAK,WACL3F,UAAU,cACVK,GAAIyF,EAAQ,aACZO,SAAU,SAAC/C,GAAD,OAAQ,EAAKgD,oBAAoBjF,EAAKoE,UAAWpE,EAAKkF,MAChEC,iBAAgBnF,EAAKoE,YAErB,0BAAMzF,UAAU,iBAChB,0BAAMA,UAAU,iC,iCAUrCuR,GAAU,IAAD,OACJjQ,OAAOmF,QAAQ,sCAEvB1F,IAAMC,KAAK,kBAAmB,CAC1BuQ,QAASA,EACT3N,QAAStC,OAAOC,aAAasC,QAAQ,aACtC3C,MAAK,SAAC6C,GACc,MAAfA,EAAI3C,SAA+B,IAAb2C,EAAI1C,MAC1B,EAAK+D,mB,+BAOX,IAAD,OACL,OACI,yBAAKpF,UAAU,wBACX,yBAAKA,UAAU,eACX,2BAAG,8CAAH,mBAEJ,kBAAC,EAAD,CAAO2E,MAAO,2CACd,yBAAK3E,UAAU,2BACX,2BAAOoG,QAAQ,qBAAqBpG,UAAU,sBAA9C,iCACA,yBAAKA,UAAU,cACX,2BAAOK,GAAG,qBAAqBL,UAAU,qBAAqBqG,SAAU,SAAC/C,GAAD,OAAQ,EAAKoD,aAAapD,IAAKqD,QAAS,SAACrD,GAAuB,KAAbA,EAAGsD,OAAe,EAAKC,iBAAiBvD,IAAO6B,MAAO3C,KAAK1C,MAAMqF,QAC5L,4BAAQQ,KAAK,SAAS3F,UAAU,wBAAwBqD,QAAS,SAACC,GAAD,OAAQ,EAAKuD,iBAAiBvD,KAA/F,SAIR,uBAAGtD,UAAU,eAAb,kBAGA,2BAAOA,UAAU,mBACb,+BACI,4BACI,wBAAI8G,MAAM,OAAV,SACA,wBAAIA,MAAM,OAAV,cACA,wBAAIA,MAAM,OAAV,UACA,wBAAIA,MAAM,OAAV,YAGR,+BACoC,IAA/BtE,KAAK1C,MAAMoF,SAASI,OAEjB,4BAAI,wBAAIyB,QAAQ,IAAI/G,UAAU,cAA1B,aAEJwC,KAAK1C,MAAMoF,gB,GAhJVvE,IAAMC,YC8DpB4Q,G,kBA7DX,WAAa3R,GAAQ,IAAD,8BAChB,4CAAMA,KACDC,MAAQ,CACT2R,UAAW,IAHC,E,iFAOC,IAAD,OAChB1Q,IAAMC,KAAK,cAAe,CAAC4C,QAAStC,OAAOC,aAAasC,QAAQ,aAC3D3C,MAAK,SAAC6C,GACH,IAAM6B,EAAU7B,EAAI1C,KAEpB,EAAK2C,SAAS,CAACyN,UAAW7L,EAAQC,KAAI,SAACxE,EAAMyE,GAAP,OAClC,wBAAI9F,UAAU,kBAAkB+F,IAAKD,GACjC,4BACKzE,EAAK2H,cAEV,4BACK3H,EAAKqQ,QAAU,UAEpB,4BACKrQ,EAAKsQ,UAAY,UAEtB,4BACKtQ,EAAKuQ,aAAe,qB,wCAO3BtB,GACd,IAAMC,EAAM,IAAIrO,KAAKoO,GACrB,OAAOC,EAAIC,eAAiB,IAAMD,EAAIE,eAAe9G,MAAM,KAAK,K,+BAIhE,OACI,yBAAK3J,UAAU,oBACX,yBAAKA,UAAU,eACX,2BAAG,8CAAH,cAEJ,kBAAC,EAAD,CAAO2E,MAAO,iDACd,2BAAO3E,UAAU,iBACb,+BACI,4BACI,mCACA,wBAAI8G,MAAM,OAAV,UACA,wBAAIA,MAAM,OAAV,mBACA,wBAAIA,MAAM,OAAV,gBAGR,+BACKtE,KAAK1C,MAAM2R,iB,GAtDZ9Q,IAAMC,YCmB9BG,IAAM8Q,SAASC,QAAU,0CA+DVC,MA5Df,WAAgB,IAAD,EACiBC,oBAAS,GAD1B,mBACNC,EADM,KACGC,EADH,OAEqBF,mBAAS,QAF9B,mBAENG,EAFM,KAEKC,EAFL,OAGmBJ,mBAAS,IAH5B,mBAGIK,GAHJ,aAIaL,mBAAS,iDAJtB,mBAINlO,EAJM,KAoBb,OApBa,KASb,SAAmBzD,GACjB,IAAMiS,EAAUzQ,SAASC,OAAO6H,MAAM,KADjB,uBAGrB,YAAmB2I,EAAnB,+CAA4B,CAAC,IACvBrB,EADsB,QACPtH,MAAM,KACzB,GAAIsH,EAAM,GAAGsB,SAAWlS,EACtB,OAAO4Q,EAAM,IANI,mFAFNuB,CAAU,WAaXP,EAEZ,kBAAC,IAAD,CAAQQ,SAAS,gBACf,kBAAC,EAAD,CAAQ3O,MAAOA,IACf,yBAAK9D,UAAU,kBACb,kBAAC,EAAD,CAAS0S,UAAWN,EAAcD,UAAWA,EAAWE,YAAaA,EAAavO,MAAOA,IACzF,6BAAS9D,UAAU,mBACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO2S,KAAK,IAAIC,OAAK,EAACC,OAAQ,kBAAM,kBAAC,EAAD,CAAW/O,MAAOA,OACtD,kBAAC,IAAD,CAAO6O,KAAK,aAAaE,OAAQ,kBAAM,kBAAC,EAAD,CAAW/O,MAAOA,OACzD,kBAAC,IAAD,CAAO6O,KAAK,WAAWE,OAAQ,kBAAM,kBAAC,EAAD,CAAS/O,MAAOA,OACrD,kBAAC,IAAD,CAAO6O,KAAK,aAAaE,OAAQ,kBAAM,kBAAC,EAAD,CAAW/O,MAAOA,OACzD,kBAAC,IAAD,CAAO6O,KAAK,aAAaE,OAAQ,kBAAM,kBAAC,EAAD,CAAa/O,MAAOA,OAC3D,kBAAC,IAAD,CAAO6O,KAAK,OAAOE,OAAQ,kBAAM,kBAAC,EAAD,CAAK/O,MAAOA,OAC7C,kBAAC,IAAD,CAAO6O,KAAK,aAAaE,OAAQ,kBAAM,kBAAC,EAAD,CAAO/O,MAAOA,OACrD,kBAAC,IAAD,CAAO6O,KAAK,QAAQE,OAAQ,kBAAM,kBAAC,EAAD,CAAK/O,MAAOA,OAC9C,kBAAC,IAAD,CAAO6O,KAAK,SAASE,OAAQ,kBAAM,kBAAC,EAAD,CAAO/O,MAAOA,OACjD,kBAAC,IAAD,CAAO6O,KAAK,YAAYE,OAAQ,kBAAM,kBAAC,EAAD,CAAU/O,MAAOA,OACvD,kBAAC,IAAD,CAAO6O,KAAK,aAAaE,OAAQ,kBAAM,kBAAC,EAAD,CAAW/O,MAAOA,OACzD,kBAAC,IAAD,CAAO6O,KAAK,YAAYE,OAAQ,kBAAM,kBAAC,EAAD,CAAW/O,MAAOA,OACxD,kBAAC,IAAD,CAAO6O,KAAK,YAAYE,OAAQ,kBAAM,kBAAC,EAAD,CAAU/O,MAAOA,OACvD,kBAAC,IAAD,CAAO6O,KAAK,YAAYE,OAAQ,kBAAM,kBAAC,EAAD,CAAU/O,MAAOA,SAG3D,yBAAK9D,UAAU,UAMnB,kBAAC,IAAD,CAAQyS,SAAS,KACf,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOE,KAAK,IAAIC,OAAK,EAACC,OAAQ,kBAAM,kBAAC,EAAD,CAAc9Q,SAAUmQ,OAC5D,kBAAC,IAAD,CAAOS,KAAK,UAAUE,OAAQ,kBAAM,kBAAC,EAAD,CAAQ9Q,SAAUmQ,UCpE5CY,QACW,cAA7BxR,OAAOmD,SAASsO,UAEe,UAA7BzR,OAAOmD,SAASsO,UAEhBzR,OAAOmD,SAASsO,SAASC,MACvB,2DCZNC,IAASJ,OAAO,kBAAC,EAAD,MAAShR,SAASqR,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMnS,MAAK,SAAAoS,GACjCA,EAAaC,kB","file":"static/js/main.0a76ae16.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/AQOOM_logo.2ada93ac.png\";","module.exports = __webpack_public_path__ + \"static/media/AQOOM_whitelogo.311ee2ce.svg\";","module.exports = __webpack_public_path__ + \"static/media/Hand.33162f95.svg\";","module.exports = __webpack_public_path__ + \"static/media/messagebubbles.3acd4b55.svg\";","module.exports = __webpack_public_path__ + \"static/media/memberprofile.9eb76938.svg\";","module.exports = __webpack_public_path__ + \"static/media/spam.6e0657fa.svg\";","import React from 'react';\nimport AQ_LOGO from '../img/AQOOM_logo.png';\nimport AQ_LOGO_W from '../img/AQOOM_whitelogo.svg';\nimport INTRO_IMG_HAND from '../img/Hand.svg';\nimport FEATURES_IMG_MESSAGES from '../img/messagebubbles.svg';\nimport FEATURES_IMG_PROFILE from '../img/memberprofile.svg';\nimport FEATURES_IMG_SPAM from '../img/spam.svg';\nimport '../css/Register_chat.css';\n\nclass RegisterChat extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      isActive : false\n    }\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"app_container\">\n          <header className=\"App-header\">\n            <div className=\"aqoom_logo\">\n              <img src={AQ_LOGO}></img>\n            </div>\n            <div className=\"nav_menus\">\n              <a href=\"#main_features\">\n                Features\n              </a>\n              <a className=\"signin_btn\" href=\"/signin\">\n                Sign in\n              </a>\n            </div>\n          </header>\n          <div className=\"main_contents\">\n            <section className=\"main_intro\">\n              <div className=\"intro_desc\">\n                <h2>\n                managing Telegram groups made easier\n                </h2>\n                <p>\n                Creating solutions for Community Managers to have a easy and deep interaction with users while having the right data that can help further grow your community!\n                </p>\n                <a href=\"#\">\n                  Try AQOOM\n                </a>\n              </div>\n              <div className=\"intro_img\">\n                <img src={INTRO_IMG_HAND}></img>\n              </div>\n            </section>\n            <section className=\"main_features\" id=\"main_features\">\n              <div className=\"features_item\">\n                <div className=\"feature_img\">\n                  <img src={FEATURES_IMG_MESSAGES}></img>\n                </div>\n                <div className=\"feature_desc\">\n                  <h2>\n                  listen <br/>& interact\n                  </h2>\n                  <p>\n                  With an all-in-one interface, you know you can listen and interact with your users effectively. There’s a dedicated space for questions and messages directed for admins, so you’ll never miss an opportunity to reply and interact.\n                  </p>\n                </div>\n              </div>\n              <div className=\"features_item\">\n                <div className=\"feature_desc\">\n                  <h2>\n                  growth and user focused\n                  </h2>\n                  <p>\n                  All the information you know you need to know about your community and users are all included. With these data, you can strategize, plan ahead for your future events and promotions.\n                  </p>\n                </div>\n                <div className=\"feature_img\">\n                  <img src={FEATURES_IMG_PROFILE}></img>\n                </div>\n              </div>\n              <div className=\"features_item\">\n                <div className=\"feature_img\">\n                  <img src={FEATURES_IMG_SPAM}></img>\n                </div>\n                <div className=\"feature_desc\">\n                  <h2>\n                  protecting <br/>your community\n                  </h2>\n                  <p>\n                  We are sure that your community will be protected in any form of spam. With basic to advanced filters, you have a full control over your community. These can protect and improve your brand image.\n                  </p>\n                </div>\n              </div>\n            </section>\n            <section className=\"main_footer\">\n              <div className=\"footer_desc\">\n                <p>\n                  Start and grow your community with ease! <br/> Manage it like never before.\n                </p>\n              </div>\n              <a href=\"#\">\n                Try AQOOM\n              </a>\n            </section>\n          </div>\n        </div>\n        <div className=\"footer\">\n            <div className=\"app_container\">\n              <div className=\"footer_left\">\n                <div className=\"aqoom_logo\">\n                  <img src={AQ_LOGO_W}></img>\n                </div>\n                <div className=\"aqoom_right\">\n                  All rights reserved 2020 © AQOOM\n                </div>\n              </div>\n              <div className=\"footer_right\">\n                <a href=\"http://aqoom.info/\" target=\"_blank\">\n                  ABOUT US\n                </a>\n                <a href=\"mailto::contact@aqoom.com\">\n                  CONTACT US\n                </a>\n              </div>\n            </div>\n          </div>\n      </div>\n    )\n  }\n}\n\nexport default RegisterChat;","import React from \"react\";\nimport Axios from \"axios\";\nimport AQ_LOGO from \"../img/AQOOM_logo.png\";\nimport TelegramLoginButton from \"react-telegram-login\";\nimport \"../css/Signin.css\";\n\nclass Signin extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isActive: false\n    };\n  }\n\n  checkValidation(t) {\n    Axios.post(\n      \"checkValidation\",\n      {\n        id: t\n      },\n      { withCredentials: true }\n    ).then(response => {\n      if (response.status === 200) {\n        if (response.data !== false) {\n          window.localStorage.setItem(\n            \"chat_id_list\",\n            JSON.stringify(response.data.id)\n          );\n          window.localStorage.setItem(\"chat_id\", response.data.id[0]);\n          const expire_time = this.getUTCExpiredTime();\n          document.cookie = \"living=true; expires=\" + expire_time;\n          this.props.setValid(true);\n        } else {\n          alert(\n            \"it's not valid input. check again if chat Room's name or activation code is valid.\"\n          );\n        }\n      }\n    });\n  }\n\n  getUTCExpiredTime() {\n    var now = new Date();\n    var time = now.getTime();\n    var expireTime = time + 2 * 360000;\n    now.setTime(expireTime);\n\n    return now.toUTCString();\n  }\n\n  onTelegramAuth(user) {\n    this.checkValidation(user.id);\n  }\n\n  render() {\n    return (\n      <div className=\"signin_container\">\n        <div className=\"aqoom_logo\">\n          <img src={AQ_LOGO}></img>\n        </div>\n        <div className=\"login_box\">\n          <p className=\"login_info\">\n            Please login with your Telegram <br />\n            to proceed to your dashboard.\n          </p>\n          <TelegramLoginButton\n            dataOnauth={user => this.onTelegramAuth(user)}\n            botName=\"aqoom_test_bot\"\n          />\n          <p className=\"login_help\">\n            AQOOM uses Telegram Secure ID to provide seamless automation of\n            group management services. To learn more about Telegram Login works\n            for websites, click <a href=\"\">here</a>. <br/><br/> Having trouble logging in? Contact us at \n            <a href=\"mailto::info@aqoom.com\"> info@aqoom.com</a>\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Signin;\n","import React from \"react\";\nimport {Link} from 'react-router-dom';\nimport \"../css/LeftNav.css\";\n\nclass LeftNav extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  activeNav(num) {\n    const isExist = document.querySelector('.nav_contents > a.active');\n    if (isExist) {\n      isExist.classList.remove('active');\n    }\n    document.querySelector(`.nav_contents > a:nth-child(${num})`).classList.add('active');\n    return false;\n  }\n  render() {\n    return (\n      <section className=\"left_nav\">\n        <div className=\"nav_contents\">\n          <Link to=\"/dashboard\" onClick={(ev) => this.activeNav(1)}><i className=\"icon icon-dashboard\"></i> Dashboard</Link>\n          <Link to=\"/modules\" onClick={(ev) => this.activeNav(2)}><i className=\"icon icon-modules\"></i> Modules</Link>\n          <Link to=\"/settings\" onClick={(ev) => this.activeNav(3)}><i className=\"icon icon-setting\"></i> Settings</Link>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default LeftNav;\n","import React from 'react';\nimport Axios from 'axios';\n\nclass Header_main extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            default_info: [],\n            chat_photo: [],\n            isOpen: false\n        }\n    }\n\n    componentWillMount() {\n        const chat_id = window.localStorage.getItem('chat_id');\n        \n        Axios.post(`https://api.telegram.org/bot${this.props.botId}/getChat`, {chat_id : chat_id})\n            .then((res) => {\n                this.setState({default_info: res.data.result})\n                if (res.data.result.photo) {\n                    Axios.get(`https://api.telegram.org/bot${this.props.botId}/getFile?file_id=`+res.data.result.photo.small_file_id)\n                    .then((res_photo) => {\n                        this.setState({chat_photo: res_photo.data.result})\n                    })\n                }\n            })\n    }\n    \n    getHeaderPhoto() {\n        if (this.state.chat_photo.file_path !== undefined) {\n            return (\n                <img src={`https://api.telegram.org/file/bot${this.props.botId}/` + this.state.chat_photo.file_path}></img>\n            )\n        } else {\n            return ''\n        }\n    }\n\n    toggleDropbox() {\n        if (this.state.isOpen) {\n            this.setState({isOpen: false})\n        } else {\n            this.setState({isOpen: true})\n        }\n    }\n\n    logout() {\n        // 스토리지 chat_id, cookie living delete\n        window.localStorage.removeItem('chat_id')\n        document.cookie = \"living=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\n        window.location.href = '/';\n    }\n\n    render() {\n        return (\n            <div className=\"section_header\">\n                <div className=\"header_logo\">\n                    \n                </div>\n                <div className=\"header_infos\">\n                    <div className=\"header_name\" onClick={() => this.toggleDropbox()}>\n                        <span>{this.state.default_info.title}</span>\n                        <span className=\"icon icon-down\"></span>\n                    </div>\n                    <ul className={this.state.isOpen ? 'header_drop open' : 'header_drop'}>\n                        <li>{this.state.default_info.title}</li>\n                        <li style={{color:'#2F2F2F'}} onClick={() => this.logout()}>LOG OUT</li>\n                    </ul>\n                    <div className=\"header_photo\">\n                        {this.getHeaderPhoto()}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Header_main;","import React from 'react';\n\nfunction Section_title (props) {\n    \n    return (\n        <div className=\"section_title\">\n            <h2 className=\"title\">\n                {props.title}\n            </h2>\n        </div>\n    )\n}\n\nexport default Section_title;","import React from 'react';\nimport Axios from 'axios';\nimport Title from './Section_title';\nimport '../css/WordManager.css';\n\nclass WordManager extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          wordlist: [],\n          value: ''\n        };\n    }\n\n    componentDidMount() {\n        this.getWordData();\n    }\n\n    changeValues (event) {\n        this.setState({value: event.target.value})\n    }\n\n    submit_blacklist (ev) {\n        if (this.state.value.length !== 0) {\n            const val = this.state.value\n            \n            const chat_id = window.localStorage.getItem('chat_id')\n            if (chat_id.length !== 0) {\n                Axios.post('pushWordData', {word: val, chat_id: chat_id})\n                .then((res) => {\n                    if (res.data) {\n                        this.getWordData()\n                        this.setState({value: ''})\n                    }\n                })\n            } else {\n                alert('There is any valid key of chatting information')\n                return false\n            }\n        \n        }\n    }\n    \n    changeStateWordlist(is_active, id) {\n        if (is_active) {\n            Axios.post('editWordData', {\n                chat_id: window.localStorage.getItem('chat_id'),\n                content: 0,\n                type: 'status',\n                id: id\n            })\n        } else {\n            Axios.post('editWordData', {\n                chat_id: window.localStorage.getItem('chat_id'),\n                content: 1,\n                type: 'status',\n                id: id\n            })\n        }\n\n        return false;\n    }\n\n    getWordData() {\n        Axios.post('getWordData', {chat_id: window.localStorage.getItem('chat_id')})\n        .then((res) => {\n            if (res.data && res.status === 200) {\n                let dataset = res.data;\n                \n                this.setState({wordlist: dataset.map((data, index) => \n                    <tr key={index}>\n                        <td>\n                            {data.word_name}\n                        </td>\n                        <td>\n                            {data.created_time}\n                        </td>\n                        <td>\n                            <span className=\"delete_icon icon\" onClick={(e) => this.deleteWord(data.word_name)}></span>\n                            <span> Delete</span>\n                        </td>\n                        <td>\n                        <div className=\"disable_btn_wrap\">\n                                <label className=\"filter_group\" htmlFor={index + '_whitelist'}>\n                                    <input\n                                    type=\"checkbox\"\n                                    className=\"option_item\"\n                                    id={index + '_whitelist'}\n                                    onChange={(ev) => this.changeStateWordlist(data.is_active, data.idx)}\n                                    defaultChecked={data.is_active ? true : false}\n                                    ></input>\n                                    <span className=\"filter_label\"></span>\n                                    <span className=\"filter_circle\"></span>\n                                </label>\n                            </div>\n                        </td>\n                    </tr> \n                )})\n            }\n        })\n    }\n\n    deleteWord(word) {\n        var check = window.confirm('Are you sure to Delete this Item?')\n        if (check) {\n            Axios.post('delWordData', {\n                word: word,\n                chat_id: window.localStorage.getItem('chat_id')\n            }).then((res) => {\n                if (res.status === 200 && res.data === true) {\n                    alert(`delete '${word}' successfully `)\n                    this.getWordData()\n                }\n            })\n        }\n        \n    }\n\n    render() {\n        return (\n            <div className=\"section_wordmanager\">\n                <div className=\"module_path\">\n                    <p><span>Modules  /  </span>Blacklist</p>\n                </div>\n                <Title title={'Manage Blacklist'}></Title>\n                <div className=\"blacklist_input_wrap\">\n                    <label htmlFor=\"blacklist_input\" className=\"blacklist_label\">Enter words you want to ban</label>\n                    <div className=\"input_wrap\">\n                        <input id=\"blacklist_input\" className=\"blacklist_input\" onChange={(ev) => this.changeValues(ev)} onKeyUp={(ev)=> {if(ev.which === 13) {this.submit_blacklist(ev)}}} value={this.state.value}></input>\n                        <button type=\"button\" className=\"blacklist_register\" onClick={(ev) => this.submit_blacklist(ev)}>ADD</button>\n                    </div>\n                </div>\n                \n                <p className=\"table_title\">\n                    Blacklist\n                </p>\n                <table className=\"blacklist_tb\">\n                    <thead>\n                        <tr>\n                            <th width=\"35%\">Words</th>\n                            <th width=\"45%\">Date Added</th>\n                            <th width=\"10%\">Action</th>\n                            <th width=\"10%\">Status</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.wordlist.length === 0 \n                        ?\n                            <tr><td colSpan=\"3\" className=\"empty_item\">No Items</td></tr>\n                        :\n                            this.state.wordlist\n                        }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\n\nexport default WordManager;","import React from 'react';\nimport Axios from 'axios';\nimport Title from './Section_title';\nimport '../css/Whitelist_URL.css';\n\nclass Whitelist_URL extends React.Component{\n    constructor (props) {\n        super(props)\n        this.state = {\n            whitelist: [],\n            value: ''\n        }\n    }\n\n    submit_whitelist (ev) {\n        if (this.state.value.length !== 0) {\n            const val = this.state.value\n            const validation = this.checkValidation(val)\n            if (validation) {\n                const chat_id = window.localStorage.getItem('chat_id')\n                if (chat_id.length !== 0) {\n                    Axios.post('pushWhitelist', {pattern: val, chat_id: chat_id})\n                    .then((res) => {\n                        if (res.data) {\n                            this.getWhitelist()\n                            this.setState({value: ''})\n                        }\n                    })\n                } else {\n                    alert('There is any valid key of chatting information')\n                    return false\n                }\n            } else {\n                alert('Invalid URL address, please check it again')\n            }\n        }\n    }\n    \n    checkValidation (val) {\n        if (typeof val === 'string') {\n            const regx_test = /^\\/[\\s\\S]*\\/$/\n            const regx = /(https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|www\\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9]+\\.[^\\s]{2,}|www\\.[a-zA-Z0-9]+\\.[^\\s]{2,}|[a-zA-Z0-9]+\\.[^\\s]{2,})/\n            if (regx.test(val) || regx_test.test(val)) {\n                return true\n            } else {\n                return false\n            }\n        }    \n    }\n\n    changeValues (event) {\n        this.setState({value: event.target.value})\n    }\n\n    deleteWhitelist(url) {\n        var check = window.confirm('Are you sure to Delete this Item?')\n        if (check) {\n            Axios.post('delWhitelist', {\n                url: url,\n                chat_id: window.localStorage.getItem('chat_id')\n            }).then((res) => {\n                if (res.status === 200 && res.data === true) {\n                    alert(`delete '${url}' successfully `)\n                    this.getWhitelist()\n                }\n            })\n        }\n        \n    }\n\n    changeStateWhitelist(is_active, id) {\n        if (is_active) {\n            Axios.post('updateWhitelist', {\n                chat_id: window.localStorage.getItem('chat_id'),\n                content: 0,\n                type: 'status',\n                id: id\n            })\n        } else {\n            Axios.post('updateWhitelist', {\n                chat_id: window.localStorage.getItem('chat_id'),\n                content: 1,\n                type: 'status',\n                id: id\n            })\n        }\n\n        return false;\n    }\n\n    getWhitelist () {\n        const chat_id = window.localStorage.getItem('chat_id')\n\n        if (chat_id.length !== 0) {\n            Axios.post('getWhitelist', {chat_id: chat_id})\n            .then((res) => {\n                const listup = res.data;\n                let result = [];\n                \n                for (var item of listup) {\n                    result.push(item)\n                }\n                \n                this.setState({whitelist: result.map((data, index) => \n                    <tr key={index}>\n                        <td>\n                            {data.url_pattern}\n                        </td>\n                        <td>\n                            {new Date(data.created_date).toUTCString()}\n                        </td>\n                        <td>\n                            <span className=\"delete_icon icon\" onClick={(e) => this.deleteWhitelist(data.url_pattern)}></span>\n                            <span> Delete</span>\n                        </td>\n                        <td>\n                            <div className=\"disable_btn_wrap\">\n                                <label className=\"filter_group\" htmlFor={index + '_whitelist'}>\n                                    <input\n                                    type=\"checkbox\"\n                                    className=\"option_item\"\n                                    id={index + '_whitelist'}\n                                    onChange={(ev) => this.changeStateWhitelist(data.is_active, data.id)}\n                                    defaultChecked={data.is_active ? true : false}\n                                    ></input>\n                                    <span className=\"filter_label\"></span>\n                                    <span className=\"filter_circle\"></span>\n                                </label>\n                            </div>\n                        </td>\n                    </tr> \n                )})\n\n                return\n            })\n        }\n    }\n\n    componentDidMount () {\n        this.getWhitelist();\n    }\n\n    render () {\n        return (\n            <div className=\"section_whitelist\">\n                <div className=\"module_path\">\n                    <p><span>Modules  /  </span>Whitelist</p>\n                </div>\n                <Title title={'Manage Whitelist'}></Title>\n                <div className=\"whitelist_input_wrap\">\n                    <label htmlFor=\"whitelist_input\" className=\"whitelist_label\">Enter URL you want to ban</label>\n                    <div className=\"input_wrap\">\n                        <input id=\"whitelist_input\" className=\"whitelist_input\" onChange={(ev) => this.changeValues(ev)} onKeyUp={(ev)=> {if(ev.which === 13) {this.submit_whitelist(ev)}}} value={this.state.value}></input>\n                        <button type=\"button\" className=\"whitelist_register\" onClick={(ev) => this.submit_whitelist(ev)}>ADD</button>\n                    </div>\n                </div>\n                \n                <p className=\"table_title\">\n                    Whitelist\n                </p>\n                <table className=\"whitelist_tb\">\n                    <thead>\n                        <tr>\n                            <th width=\"35%\">URL</th>\n                            <th width=\"45%\">Date Added</th>\n                            <th width=\"10%\">Action</th>\n                            <th width=\"10%\">Status</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.whitelist.length === 0 \n                        ?\n                            <tr><td colSpan=\"3\" className=\"empty_item\">No Items</td></tr>\n                        :\n                            this.state.whitelist\n                        }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nexport default Whitelist_URL;","import React from 'react';\nimport Title from './Section_title';\nimport '../css/Log.css';\nimport Axios from 'axios';\n\nclass Log extends React.Component{\n    constructor (props) {\n        super(props)\n        this.state = {\n            loglist: []\n        }\n    }\n\n    componentDidMount() {\n        Axios.post('getLogs', {'chat_id' : window.localStorage.getItem('chat_id')})\n            .then((res) => {\n                const listup = res.data;\n                let result = [];\n                \n                for (var item of listup) {\n                    result.push(item)\n                }\n                \n                this.setState({loglist: result.map((data, index) => \n                    <tr key={index}>\n                        <td>\n                            {index}\n                        </td>\n                        <td>\n                            {this.getContent(data)}\n                        </td>\n                        <td>\n                            {data.type}\n                        </td>\n                        <td>\n                            {new Date(data.del_date).toUTCString()}\n                        </td>\n                        <td>\n                            {this.render_resend_icon(data)}\n                        </td>\n                    </tr>\n                )})\n\n                return\n            })\n    }\n\n    getContent(data) {\n        if (data.type !== 'photo') {\n            return data.msg;\n        } else {\n            if (data.photo_base64) {\n                const img_sr = \"data:image/jpg;base64,\" + data.photo_base64;\n            \n                return (\n                    <img src={img_sr} alt=\"result of log\" ></img>\n                )\n            }\n        }\n    }\n\n    restoreMsg(data) {\n        const dataset = {\n            chat_id: window.localStorage.getItem('chat_id'),\n            text: `<i> -> ${data.msg_from}</i>\n            \n            origin msg : <b>${data.msg}</b>`,\n            parse_mode: 'html'\n        }\n        Axios.post(`https://api.telegram.org/bot${this.props.botId}/sendMessage`, dataset)\n    }\n\n    render_resend_icon(data) {\n        if (data.type === 'text') {\n            return (\n                <span className=\"icon resend_icon\" onClick={(ev) => this.restoreMsg(data)}></span>\n            )\n        } else {\n            return ''\n        }\n    }\n\n    render () {\n        return (\n            <div className=\"section_log\">\n                 <div className=\"module_path\">\n                <p>\n                    <span>Modules / </span>Logs\n                </p>\n                </div>\n                <Title title={'Logs about blocked words or pictures'}></Title>\n                <table className=\"log_tb\">\n                    <thead>\n                        <tr>\n                            <th>\n                                #\n                            </th>\n                            <th>\n                                content\n                            </th>\n                            <th width=\"5%\">\n                                type\n                            </th>\n                            <th width=\"20%\">\n                                date\n                            </th>\n                            <th width=\"8%\">\n                                re-send\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.loglist}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nexport default Log;","import React from \"react\";\nimport Axios from \"axios\";\n\nclass QnA_List_Component extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEditable: false,\n      isImage: false,\n      question: this.props.data.faq_content,\n      response: this.props.data.faq_response,\n      uploadImage: \"\",\n      imageType: \"\"\n    };\n  }\n  deleteFaqList(content) {\n    var check = window.confirm(\"Are you sure to Delete this Item?\");\n    if (check) {\n      const data = {\n        content: content,\n        chat_id: window.localStorage.getItem(\"chat_id\")\n      };\n\n      Axios.post(\"delFaqlist\", data).then(res => {\n        if (res.data) {\n            this.props.getFaqList();\n        }\n      });\n    }\n  }\n  changeToEdit() {\n    this.setState({ isEditable: true });\n  }\n  changeQuestion(event) {\n    return this.setState({ question: event.target.value });\n  }\n  changeResponse(event) {\n    return this.setState({ response: event.target.value });\n  }\n  toggleRespType(type) {\n    if (type === \"text\") {\n      this.setState({ isImage: false });\n    } else if (type === \"pic\") {\n      this.setState({ isImage: true });\n    }\n  }\n  confirmEdit() {\n    var form_data = new FormData();\n\n    form_data.append(\"chat_id\", window.localStorage.getItem(\"chat_id\"));\n    form_data.append(\"question\", this.state.question);\n    form_data.append(\"response\", this.state.response);\n    form_data.append(\"response_img\", this.state.uploadImage);\n    form_data.append(\"response_type\", this.state.isImage ? \"img\" : \"txt\");\n    form_data.append(\"img_type\", this.state.imageType);\n    form_data.append(\"id\", this.props.data.id);\n\n    if (form_data.get(\"chat_id\") && form_data.get(\"question\") !== \"\") {\n      Axios.post(\"updateFaqlist\", form_data).then(res => {\n        if (res.data) {\n          this.props.getFaqList();\n          this.setState({isEditable: false})\n        }\n      });\n    }\n  }\n  uploadedImage(event) {\n    const file = event.target.files[0];\n    if (file.size > 2 * 1024 * 1024) {\n      alert(\"File size should be less than 2MB\");\n      return false;\n    }\n    this.makePreview(file);\n    this.setState({ imageType: file.type.split(\"/\")[1], uploadImage: file });\n  }\n\n  makePreview(file) {\n    const fr = new FileReader();\n    const index = this.props.index;\n\n    fr.onload = function(e) {\n      const img_el = document.createElement(\"img\");\n      img_el.setAttribute(\"src\", e.target.result);\n\n      const target_el = document.querySelector(\"#input_file_preview_\" + index);\n      while (target_el.firstChild) {\n        target_el.removeChild(target_el.firstChild);\n      }\n\n      target_el.appendChild(img_el);\n    };\n\n    fr.readAsDataURL(file);\n  }\n  render() {\n    return (\n      <tr>\n        <td>\n          {this.state.isEditable ? (\n            <textarea\n              className=\"list_content\"\n              value={this.state.question}\n              onChange={ev => this.changeQuestion(ev)}\n            ></textarea>\n          ) : (\n            <div className=\"list_content\">{this.props.data.faq_content}</div>\n          )}\n        </td>\n        <td>\n          {this.state.isEditable ? (\n            <div className=\"faq_content_wrap\">\n              {this.state.isImage ? (\n                <div id={'input_file_preview_' + this.props.index}></div>\n              ) : (\n                <textarea\n                  value={this.state.response}\n                  onChange={ev => this.changeResponse(ev)}\n                ></textarea>\n              )}\n              <div className=\"response_type_btns_wrap\">\n                {this.state.isImage ? (\n                  <span\n                    className=\"icon text-icon-disabled\"\n                    onClick={ev => this.toggleRespType(\"text\")}\n                  ></span>\n                ) : (\n                  <span\n                    className=\"icon text-icon-active\"\n                    onClick={ev => this.toggleRespType(\"text\")}\n                  ></span>\n                )}\n                <span> | </span>\n                <label>\n                  <input\n                    type=\"file\"\n                    name=\"faq_img\"\n                    onChange={ev => this.uploadedImage(ev)}\n                  ></input>\n                  {this.state.isImage ? (\n                    <span\n                      className=\"icon pic-icon-active\"\n                      onClick={() => this.toggleRespType(\"pic\")}\n                    ></span>\n                  ) : (\n                    <span\n                      className=\"icon pic-icon-disabled\"\n                      onClick={() => this.toggleRespType(\"pic\")}\n                    ></span>\n                  )}\n                </label>\n              </div>\n            </div>\n          ) : (\n            <div className=\"list_response\">\n              {this.props.data.response_type === \"txt\" ? (\n                this.props.data.faq_response\n              ) : (\n                <img\n                  id={\"faq_img\" + this.props.index}\n                  src={this.props.data.faq_response_img}\n                  alt=\"registerd for FAQ\"\n                ></img>\n              )}\n            </div>\n          )}\n        </td>\n        <td>\n          {this.state.isEditable ? (\n            <div className=\"edit_btns_wrap\">\n              <span\n                className=\"save_icon icon\"\n                onClick={e => this.confirmEdit()}\n              ></span>\n              <span\n                className=\"cancle_icon icon\"\n                onClick={e => this.setState({ isEditable: false })}\n              ></span>\n            </div>\n          ) : (\n            <div className=\"edit_btns_wrap\">\n              <span\n                className=\"edit_icon icon\"\n                onClick={e => this.changeToEdit(this.props.index)}\n              ></span>\n              <span\n                className=\"delete_icon icon\"\n                onClick={e => this.deleteFaqList(this.props.data.faq_content)}\n              ></span>\n            </div>\n          )}\n        </td>\n      </tr>\n    );\n  }\n}\n\nexport default QnA_List_Component;\n","import React from 'react';\nimport Axios from 'axios';\nimport Title from './Section_title';\nimport QnA_List from './QnA_List_Component';\nimport '../css/FAQ_register.css'\n\nclass FAQ_register extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            val: '',\n            response: '',\n            faqlist: [],\n            isImage: false,\n            uploadImage: '',\n            imageType : ''\n        }\n    }\n    \n    changeValues(event) {\n        return this.setState({val: event.target.value})\n    }\n\n    changeResponse(event) {\n        return this.setState({response: event.target.value})\n    }\n\n    toggleRespType(type) {\n        if (type === 'text') {\n            this.setState({isImage: false})\n        } else if (type === 'pic') {\n            this.setState({isImage: true})\n        }\n    }\n\n    uploadedImage(event) {\n        const file = event.target.files[0];\n        if (file.size > 5 * 1024 * 1024) {\n            alert('File size should be less than 5MB')\n            return false\n        }\n        this.makePreview(file);\n        this.setState({imageType: file.type.split('/')[1], uploadImage: file})\n    }\n\n    makePreview(file) {\n        const fr = new FileReader();\n        \n        fr.onload = function(e) {\n            const img_el = document.createElement('img');\n            img_el.setAttribute('src', e.target.result);\n            \n            const target_el = document.querySelector('.input_file_preview');\n            while (target_el.firstChild) {\n                target_el.removeChild(target_el.firstChild);\n            }\n\n            document.querySelector('.input_file_preview').appendChild(img_el)\n        }\n\n        fr.readAsDataURL(file)\n    }\n\n    removeImagePreview() {\n        const target_el = document.querySelector('.input_file_preview');\n        while (target_el.firstChild) {\n            target_el.removeChild(target_el.firstChild);\n        }\n    }\n\n    clearTexts() {\n        document.querySelector('textarea.faq_input').value = '';\n        if (!this.state.isImage) {\n            document.querySelector('textarea#faq_response_input').value = '';\n        } else {\n            this.removeImagePreview()\n        }\n\n        return true;\n    }\n\n    submit_faqlist(event) {\n        var form_data = new FormData();\n        \n        form_data.append('chat_id', window.localStorage.getItem('chat_id'))\n        form_data.append('content', this.state.val)\n        form_data.append('response', this.state.response)\n        form_data.append('response_img', this.state.uploadImage)\n        form_data.append('response_type', this.state.isImage ? 'img' : 'txt')\n        form_data.append('img_type', this.state.imageType)\n\n        if (form_data.get('chat_id') && form_data.get('content') !== '') {\n            Axios.post('pushFaqlist', form_data)\n                .then((res) => {\n                    if (res.data) {\n                        this.getFaqList();\n                        this.clearTexts();\n                    }\n                })\n        } \n    }\n\n    convertToBase64 ( img, type, targetid ) {\n        if (img !== null) {\n            var blob = new Blob( [ img ], { type: \"image/\" + type } );\n            var reader = new FileReader()\n            \n            reader.onload = function (file) {\n                var img_tag = document.querySelector('#' + targetid)\n                img_tag.src = file.target.result;\n            }\n            reader.readAsDataURL(blob);\n        }\n    }\n\n    getFaqList () {\n        const chat_id = window.localStorage.getItem('chat_id')\n\n        if (chat_id.length !== 0) {\n            Axios.post('getFaqlist', {chat_id: chat_id})\n            .then((res) => {\n                const listup = res.data;\n                let result = [];\n                \n                for (var item of listup) {\n                    result.push(item)\n                }\n                \n                this.setState({faqlist: result.map((data, index) => \n                    <QnA_List data={data} index={index} getFaqList={() => this.getFaqList()} key={index}></QnA_List>\n                )})\n\n                return\n            })\n        }\n    }\n\n    componentDidMount () {\n        this.getFaqList();\n    }\n\n    render () {\n        return (\n            <div className=\"faq_section\">\n                <div className=\"module_path\">\n                    <p><span>Modules  /  </span>FAQ Responder</p>\n                </div>\n                <Title title={'Manage automatic response for FAQ'}></Title>\n                <div className=\"faq_input_wrap\">\n                    <div className=\"faq_content_wrap\">\n                        <label htmlFor=\"faq_input\">If the user says something similar to</label>\n                        <textarea id=\"faq_input\" className=\"faq_input\" onChange={(ev) => this.changeValues(ev)}></textarea>\n                    </div>\n                    <div className=\"faq_content_wrap\">\n                        <label htmlFor=\"faq_response_input\">The bot will reply</label>\n                        {this.state.isImage ? <div className=\"input_file_preview\"></div> : <textarea id=\"faq_response_input\" onChange={(ev) => this.changeResponse(ev)}></textarea>}\n                        <div className=\"response_type_btns_wrap\">\n                            {this.state.isImage ? <span className=\"icon text-icon-disabled\" onClick={(ev) => this.toggleRespType('text')}></span> : <span className=\"icon text-icon-active\" onClick={(ev) => this.toggleRespType('text')}></span>}\n                            <span> | </span>\n                            <label>\n                                <input type=\"file\" name=\"faq_img\" onChange={(ev) => this.uploadedImage(ev)}></input>\n                                {this.state.isImage ? <span className=\"icon pic-icon-active\" onClick={() => this.toggleRespType('pic')}></span> : <span className=\"icon pic-icon-disabled\" onClick={() => this.toggleRespType('pic')}></span>}\n                            </label>\n                            \n                        </div>\n                    </div>\n                </div>\n                <button type=\"button\" className=\"faq_register\" onClick={(ev) => this.submit_faqlist(ev)}>ADD</button>\n                \n                <p className=\"table_title\">\n                    Responds\n                </p>\n                <table className=\"faq_tb\">\n                    <tbody>\n                        {this.state.faqlist.length === 0 \n                        ? \n                            <tr><td colSpan=\"3\" className=\"empty_item\">No Items</td></tr>\n                        :\n                            this.state.faqlist\n                        }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nexport default FAQ_register;","import React from \"react\";\nimport Axios from \"axios\";\nimport Title from \"./Section_title\";\nimport \"../css/StartMenu_reg.css\";\n\nclass FAQ_register extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      response: \"\",\n      faqlist: [],\n      isImage: false,\n      uploadImage: \"\",\n      imageType: \"\",\n      preview_img: \"\",\n      preview_txt: \"\",\n      isEditable: false\n    };\n  }\n\n  changeResponse(event) {\n    return this.setState({ response: event.target.value });\n  }\n\n  changeToEdit() {\n    this.setState({ isEditable: true });\n  }\n  toggleRespType(type) {\n    if (type === \"text\") {\n      this.setState({ isImage: false });\n    } else if (type === \"pic\") {\n      this.setState({ isImage: true });\n    }\n  }\n\n  uploadedImage(event) {\n    const file = event.target.files[0];\n    if (file.size > 5 * 1024 * 1024) {\n      alert(\"File size should be less than 5MB\");\n      return false;\n    }\n    this.makePreview(file);\n    this.setState({ imageType: file.type.split(\"/\")[1], uploadImage: file });\n  }\n\n  makePreview(file) {\n    const fr = new FileReader();\n\n    fr.onload = function(e) {\n      const img_el = document.createElement(\"img\");\n      img_el.setAttribute(\"src\", e.target.result);\n\n      const target_el = document.querySelector(\".input_file_preview\");\n      while (target_el.firstChild) {\n        target_el.removeChild(target_el.firstChild);\n      }\n\n      document.querySelector(\".input_file_preview\").appendChild(img_el);\n    };\n\n    fr.readAsDataURL(file);\n  }\n\n  removeImagePreview() {\n    const target_el = document.querySelector(\".input_file_preview\");\n    while (target_el.firstChild) {\n      target_el.removeChild(target_el.firstChild);\n    }\n  }\n\n  clearTexts() {\n    if (!this.state.isImage) {\n      document.querySelector(\"textarea#start_response_input\").value = \"\";\n    } else {\n      this.removeImagePreview();\n    }\n\n    return true;\n  }\n\n  submit_startmenu(event) {\n    var form_data = new FormData();\n\n    form_data.append(\"chat_id\", window.localStorage.getItem(\"chat_id\"));\n    form_data.append(\"content_text\", this.state.response);\n    form_data.append(\"content_img\", this.state.uploadImage);\n    form_data.append(\"content_type\", this.state.isImage ? \"img\" : \"txt\");\n    form_data.append(\"img_type\", this.state.imageType);\n\n    if (form_data.get(\"chat_id\")) {\n      Axios.post(\"pushStartMenu\", form_data).then(res => {\n        if (res.data) {\n          this.getStartMenu();\n          this.clearTexts();\n        }\n      });\n    }\n  }\n\n  deleteStartMenu() {\n    var check = window.confirm(\"Are you sure to Delete this Item?\");\n    if (check) {\n      const data = {\n        chat_id: window.localStorage.getItem(\"chat_id\")\n      };\n\n      Axios.post(\"delStartMenu\", data).then(res => {\n        if (res.data) {\n          this.getStartMenu();\n        }\n      });\n    }\n  }\n\n  convertToBase64(img, type, targetid) {\n    if (img !== null) {\n      var blob = new Blob([img], { type: \"image/\" + type });\n      var reader = new FileReader();\n\n      reader.onload = function(file) {\n        var img_tag = document.querySelector(\"#\" + targetid);\n        img_tag.src = file.target.result;\n      };\n      reader.readAsDataURL(blob);\n    }\n  }\n\n  getStartMenu() {\n    Axios.post(\"getStartMenu\", {\n      chat_id: window.localStorage.getItem(\"chat_id\")\n    }).then(res => {\n      this.setState({\n        preview_img: res.data[0][\"content_img\"],\n        preview_txt: res.data[0][\"content_txt\"]\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.getStartMenu();\n  }\n\n  render() {\n    return (\n      <div className=\"startmenu_section\">\n        <div className=\"module_path\">\n          <p>\n            <span>Modules / </span>start command responder\n          </p>\n        </div>\n        <Title title={\"Manage automatic response for /start command\"}></Title>\n        <div className=\"start_input_wrap\">\n          <div className=\"start_content_wrap\">\n            <label htmlFor=\"start_response_input\">\n              If the user types /start\n            </label>\n            {this.state.isImage ? (\n              <div className=\"input_file_preview\"></div>\n            ) : (\n              <textarea\n                id=\"start_response_input\"\n                onChange={ev => this.changeResponse(ev)}\n              ></textarea>\n            )}\n            <div className=\"response_type_btns_wrap\">\n              {this.state.isImage ? (\n                <span\n                  className=\"icon text-icon-disabled\"\n                  onClick={ev => this.toggleRespType(\"text\")}\n                ></span>\n              ) : (\n                <span\n                  className=\"icon text-icon-active\"\n                  onClick={ev => this.toggleRespType(\"text\")}\n                ></span>\n              )}\n              <span> | </span>\n              <label>\n                <input\n                  type=\"file\"\n                  name=\"faq_img\"\n                  onChange={ev => this.uploadedImage(ev)}\n                ></input>\n                {this.state.isImage ? (\n                  <span\n                    className=\"icon pic-icon-active\"\n                    onClick={() => this.toggleRespType(\"pic\")}\n                  ></span>\n                ) : (\n                  <span\n                    className=\"icon pic-icon-disabled\"\n                    onClick={() => this.toggleRespType(\"pic\")}\n                  ></span>\n                )}\n              </label>\n            </div>\n          </div>\n        </div>\n        <button\n          type=\"button\"\n          className=\"start_register\"\n          onClick={ev => this.submit_startmenu(ev)}\n        >\n          ADD\n        </button>\n\n        <p className=\"table_title\">Responds</p>\n        <div className=\"preview_wrap\">\n          <div className=\"preview_contents\">\n            {this.state.preview_img !== 'undefined' ? (\n              <div className=\"preview_img\">\n                <img\n                  src={this.state.preview_img}\n                  alt=\"preview of start menu\"\n                ></img>\n              </div>\n            ) : (\n              <div className=\"preview_txt\">{this.state.preview_txt}</div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FAQ_register;\n","import React from 'react';\nimport Axios from 'axios';\nimport Title from './Section_title';\nimport '../css/UserManager.css';\n\nclass UserManager extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            members: []\n        }\n    }\n\n    kickMember(userid) {\n        const result = window.confirm('Are you sure to kick this user?')\n        if (result) {\n            const dataset = {\n                chat_id: window.localStorage.getItem('chat_id'),\n                user_id: userid\n            }\n    \n            Axios.post(`https://api.telegram.org/bot${this.props.botId}/kickChatMember`, dataset)\n                .then((res) => {\n                    setTimeout(() => {\n                        Axios.post('deleteUser', dataset);\n                        window.location.reload();\n                    }, 2000);\n                })\n        }\n    }\n    \n    restrictMember(event, userid) {\n        const result = window.confirm('Are you sure to ban this user?')\n        if (result) {\n            const dataset = {\n                chat_id: window.localStorage.getItem('chat_id'),\n                user_id: userid,\n                permissions: {\n                    can_send_messages: false,\n                    can_send_media_messages : false,\n                    can_send_polls: false,\n                    can_send_other_messages: false,\n                    can_pin_messages: false,\n                    can_change_info: false\n                },\n                until_date: 300000\n            }\n\n            Axios.post(`https://api.telegram.org/bot${this.props.botId}/restrictChatMember`, dataset)\n                .then((res) => {\n                    event.currentTarget.style = 'color:red'\n                }).catch((err) => {\n                    alert(err);\n                    return false;\n                })\n        }\n    }\n\n    interestMember(user_id) {\n        const dataset = {\n            user_id: user_id,\n            chat_id: window.localStorage.getItem('chat_id')\n        }\n        \n        Axios.post('/setInterest', dataset)\n            .then(() => {\n                alert(\"Interesting list was updated, You can check it in 'forked users' of the menus\");\n            })\n    }\n\n    scoreUpByBounus(user_id) {\n        const dataset = {\n            user_id: user_id,\n            chat_id: window.localStorage.getItem('chat_id')\n        }\n\n        Axios.post('/scoreUp', dataset)\n            .then(() => {\n                alert('bonus points were just put in the user successfully.');\n            })\n    }\n\n    componentDidMount() {\n        Axios.post('getMemberStatus', {chat_id: window.localStorage.getItem('chat_id')})\n            .then((res) => {\n                let dataset = [];\n\n                for (var data of res.data) {\n                    if (!data.is_bot) {\n                        dataset.push(data);\n                    }\n                }\n\n                this.setState({members: dataset.map((data, index) => \n                    <tr key={index}>\n                        <td>\n                            {index + 1}\n                        </td>\n                        <td>\n                            {data.username}\n                        </td>\n                        <td>\n                            {data.score}\n                        </td>\n                        <td>\n                            {data.act_txt_cnt + data.act_photo_cnt + data.act_url_cnt}\n                        </td>\n                        <td>\n                            <span className=\"icon kick_icon\" onClick={() => this.kickMember(data.id)}></span>\n                        </td>\n                        <td>\n                            <span className=\"icon interest_icon\" onClick={() => this.interestMember(data.id)}></span>\n                        </td>\n                        <td>\n                            <span className=\"icon bonus_icon\" onClick={() => this.scoreUpByBounus(data.id)}></span>\n                        </td>\n                    </tr> \n                )})\n            }).catch(function(err) {\n                console.log(err);\n            })\n    }\n\n    render() {\n        return (\n            <div className=\"section_usermanager\">\n                <div className=\"module_path\">\n                    <p><span>Modules  /  </span>Users</p>\n                </div>\n                <Title title={\"Manage your customers\"}></Title>\n                <table className=\"usermanager_tb\">\n                    <thead>\n                        <tr>\n                            <th width=\"5%\">rank</th>\n                            <th>username</th>\n                            <th width=\"10%\">scores</th>\n                            <th width=\"10%\">actions</th>\n                            <th width=\"10%\">kick</th>\n                            <th width=\"10%\">interested</th>\n                            <th width=\"10%\">bounus</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.members.length === 0 ? \n                            <tr><td colSpan=\"3\" className=\"empty_item\">No Items</td></tr>\n                            : this.state.members}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nexport default UserManager;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport Axios from 'axios';\n\nclass Module_item extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    \n    changeModules(event) {\n        if (event.currentTarget.checked) {\n            Axios.post('/setStateModule', {chat_id: window.localStorage.getItem('chat_id'), target_id: this.props.list_id, status: 1})\n        } else {\n            Axios.post('/setStateModule', {chat_id: window.localStorage.getItem('chat_id'), target_id: this.props.list_id, status: 0})\n        }\n        \n        return false\n    }\n\n    render() {\n        return (\n            <div className=\"module_item\">\n                <div className=\"module_title\">\n                    <p>{this.props.title}</p>\n                </div>\n                <div className=\"module_content\">\n                    <p>{this.props.content}</p>\n                </div>\n                <Link to={this.props.link}>SETTING</Link>\n                {this.props.isEditable ? \n                    <div className=\"disable_btn_wrap\">\n                        <label className=\"filter_group\" htmlFor={this.props.list_id + '_module'}>\n                            <input\n                            type=\"checkbox\"\n                            className=\"option_item\"\n                            id={this.props.list_id + '_module'}\n                            onChange={(ev) => this.changeModules(ev)}\n                            defaultChecked={this.props.is_active ? true : false}\n                            ></input>\n                            <span className=\"filter_label\"></span>\n                            <span className=\"filter_circle\"></span>\n                        </label>\n                    </div> : ''}\n            </div>\n        )\n    }\n}\n\nexport default Module_item;","import React from 'react';\nimport Module_item from './module_item';\nimport Title from './Section_title';\nimport Axios from 'axios';\nimport '../css/Dashboard.css';\n\nclass Dashboard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            itemlist: []\n        }\n    }\n    \n    getEntireModules(status) {\n        let list = []\n        const all_modules = [{\n            id: 1,\n            title: 'Whitelist',\n            content: 'Auto-delete unauthorized URLS',\n            link: '/whitelist'\n        },{\n            id: 2,\n            title: 'Blacklist',\n            content: 'Auto-delete banned words',\n            link: '/blacklist'\n        },{\n            id: 3,\n            title: 'FAQ',\n            content: 'Set auto-reply messages to frequently asked Questions',\n            link: '/faq'\n        },{\n            id: 4,\n            title: '/start auto-response',\n            content: 'Set an auto-response when user types /start',\n            link: '/startmenu'\n        },{\n            id: 6,\n            title: 'Users',\n            content: 'Manage participated users',\n            link: '/users'\n        },{\n            id: 5,\n            title: 'Logs',\n            content: 'show logs',\n            link: '/logs'\n        }]\n\n        for (const [key, val] of Object.entries(status)) {\n            const target_pos = key.split('_')[1];\n            if (val) {\n                list.push(all_modules[target_pos - 1])\n            }\n        }\n        return list;\n    }\n\n    componentDidMount() {\n        Axios.post('/getStateModule', {chat_id: window.localStorage.getItem('chat_id')})\n            .then((res) => {\n                const status = res.data[0];\n                let modules = this.getEntireModules(status);\n\n                const list = modules.map((item, index) => \n                    <Module_item title={item.title} content={item.content} link={item.link} key={index} isEditable={false}></Module_item>\n                )\n                \n                this.setState({itemlist: list})    \n            })\n        \n    }\n\n    render() {\n        return (\n            <div className=\"section_dashboard\">\n                <Title title=\"Active Modules\"></Title>\n                <div className=\"dashboard_list_wrap\">\n                    {this.state.itemlist}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Dashboard;","import React from 'react';\nimport Module_item from './module_item';\nimport Title from './Section_title';\nimport Axios from 'axios';\nimport '../css/Modules.css';\n\nclass Modules extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            itemlist: []\n        }\n    }\n    \n    getEntireModules(status) {\n        const all_modules = [{\n            id: 1,\n            title: 'Whitelist',\n            content: 'Auto-delete unauthorized URLS',\n            link: '/whitelist',\n            is_editable: true\n        },{\n            id: 2,\n            title: 'Blacklist',\n            content: 'Auto-delete banned words',\n            link: '/blacklist',\n            is_editable: true\n        },{\n            id: 3,\n            title: 'FAQ',\n            content: 'Set auto-reply messages to frequently asked Questions',\n            link: '/faq',\n            is_editable: true\n        },{\n            id: 4,\n            title: '/start auto-response',\n            content: 'Set an auto-response when user types /start',\n            link: '/startmenu',\n            is_editable: true\n        },{\n            id: 5,\n            title: 'Users',\n            content: 'Manage participated users',\n            link: '/users',\n            is_editable: false\n        },{\n            id: 6,\n            title: 'Logs',\n            content: 'show logs',\n            link: '/logs',\n            is_editable: false\n        },{\n            id: 7,\n            title: 'Collect Questions',\n            content: 'Observe all questions risen up in chat-room',\n            link: '/questions',\n            is_editable: false\n        },{\n            id: 8,\n            title: 'Interested Users',\n            content: 'Focus on user who you are interested in',\n            link: '/interest',\n            is_editable: false\n        },{\n            id: 9,\n            title: 'Interested Words',\n            content: 'Focus on words which you want to watch',\n            link: '/keypoint',\n            is_editable: false\n        },{\n            id: 10,\n            title: 'FAQ Stats',\n            content: 'Figure a stat of your answers out more clear',\n            link: '/faqstats',\n            is_editable: false\n        }]\n\n        for (const [key, val] of Object.entries(status)) {\n            const target_pos = key.split('_')[1];\n            if (val) {\n                all_modules[target_pos - 1]['is_active'] = 1\n            } else {\n                all_modules[target_pos - 1]['is_active'] = 0\n            }\n        }\n        return all_modules;\n    }\n\n    componentDidMount() {\n        Axios.post('/getStateModule', {chat_id: window.localStorage.getItem('chat_id')})\n            .then((res) => {\n                const status = res.data[0];\n                let modules = this.getEntireModules(status);\n\n                const list = modules.map((item, index) => \n                    <Module_item title={item.title} content={item.content} link={item.link} isEditable={item.is_editable} key={index} list_id={item.id} is_active={item.is_active}></Module_item>\n                )\n                \n                this.setState({itemlist: list})    \n            })\n    }\n\n    render() {\n        return (\n            <div className=\"section_modules\">\n                <Title title=\"Modules\"></Title>\n                <div className=\"modules_list_wrap\">\n                    {this.state.itemlist}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Modules;","import React from \"react\";\nimport Axios from \"axios\";\nimport Title from './Section_title';\nimport \"../css/Settings.css\";\n\nclass Settings extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      options: []\n    };\n  }\n\n  componentDidMount() {\n    Axios.post(\"getOptions\", {\n      chat_id: window.localStorage.getItem(\"chat_id\")\n    }).then(res => {\n      this.setState({ options: res.data[0] });\n    });\n  }\n\n  save_options() {\n    const dataset = {\n      chat_id: window.localStorage.getItem(\"chat_id\"),\n      img_filter: document.querySelector(\"#img_filtering\").checked,\n      block_bot: document.querySelector(\"#block_bot\").checked,\n      order_del: document.querySelector(\"#order_del\").checked\n    };\n    Axios.post(\"setOptions\", dataset).then(function(res) {\n      if (res.status === 200) {\n        alert(\"save all completely\");\n      } else {\n        alert(\"have a some problem to save data\");\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"set_options\">\n        <div className=\"module_path\">\n          <p>\n            Settings\n          </p>\n        </div>\n        <Title title={\"Settings\"}></Title>\n        <label className=\"filter_group\" htmlFor=\"img_filtering\">\n          Face-filtering\n          <input\n            type=\"checkbox\"\n            className=\"option_item\"\n            id=\"img_filtering\"\n            defaultChecked={this.state.options.is_img_filter}\n          ></input>\n          <span className=\"filter_label\"></span>\n        </label>\n        <label className=\"filter_group\" htmlFor=\"block_bot\">\n          Block Bots\n          <input\n            type=\"checkbox\"\n            className=\"option_item\"\n            id=\"block_bot\"\n            defaultChecked={this.state.options.is_block_bot}\n          ></input>\n          <span className=\"filter_label\"></span>\n        </label>\n        <label className=\"filter_group\" htmlFor=\"order_del\">\n          Hide Participation Msg\n          <input\n            type=\"checkbox\"\n            className=\"option_item\"\n            id=\"order_del\"\n            defaultChecked={this.state.options.is_ordering_comeout}\n          ></input>\n          <span className=\"filter_label\"></span>\n        </label>\n        <button className=\"save_btn\" onClick={() => this.save_options()}>\n          SAVE\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Settings;\n","import React from 'react';\nimport Axios from 'axios';\n\nclass Question_reply extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            modal: false,\n            modal_content: ''\n        }\n    }\n    \n    send_reply_message(event) {\n        const dataset = {\n            chat_id: window.localStorage.getItem('chat_id'),\n            reply_to_message_id: event.currentTarget.dataset.mid,\n            text: this.state.modal_content\n        }\n\n        Axios.post(`https://api.telegram.org/bot${this.props.botId}/sendMessage`, dataset).then(() => {\n            alert('the reply sent to chat successfully')\n            this.close_modal();\n            Axios.post('/setStateReplied', dataset)\n        })\n    }\n\n    updateContent(event) {\n        this.setState({\n            modal_content: event.target.value\n        })\n    }\n\n    open_modal() {\n        this.setState({modal: true});\n    }\n\n    close_modal() {\n        this.setState({modal: false});\n    }\n\n    getModalClass() {\n        const id = this.props.data.id;\n        let result_str = '';\n\n        if (this.state.modal) {\n            result_str = `reply_modal_${id} active_modal`\n        } else {\n            result_str = `reply_modal_${id}`\n        }\n\n        return result_str;\n    }\n\n    render() {\n        return (\n            <div className=\"questions_state\">\n                {this.props.data.replied_date === null ? \n                (\n                <div className=\"reply_partion\">\n                    <a className=\"reply_btn\" data-mid={this.props.data.id} onClick={(ev) => this.open_modal()}>\n                        REPLY\n                    </a>\n                    <div className={this.getModalClass()}>\n                        <div className=\"modal_title\">\n                            <p>Write a reply</p>\n                        </div>\n                        <textarea className=\"reply_content\" onChange={(ev) => this.updateContent(ev)} placeholder=\"reply to..\"></textarea>\n                        <div className=\"modal_btn_wrap\">\n                            <a className=\"cancle_btn\" onClick={() => this.close_modal()}>\n                                CANCLE\n                            </a>\n                            <a className=\"submit_btn\" data-mid={this.props.data.id} onClick={(ev) => this.send_reply_message(ev)}>\n                                SUBMIT\n                            </a>\n                        </div>\n                    </div>\n                </div>\n                ) : \n                (<div className=\"replied_date\">\n                    <p>replied time</p>\n                    <p>\n                        {this.props.convertDateFormat(this.props.data.replied_date)}\n                    </p>\n                </div>)}\n            </div>\n        )\n    }\n}\n\nexport default Question_reply;","import React from 'react';\nimport Axios from 'axios';\nimport Title from './Section_title';\nimport Question_reply from './Question_reply';\nimport '../css/Questions.css'\n\nclass Questions extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            messages: []\n        }\n    }\n\n    componentDidMount() {\n        Axios.post('getQuestions', {chat_id: window.localStorage.getItem('chat_id')})\n            .then((res) => {\n                let dataset = [];\n\n                for (var data of res.data) {\n                    if (!data.is_bot) {\n                        dataset.push(data);\n                    }\n                }\n                \n                this.setState({messages: dataset.map((data, index) => \n                    <div className=\"questions_content_wrap\" key={index}>\n                        <div className=\"questions_content\">\n                            <p>{data.text}</p>\n                        </div>\n                        <div className=\"questions_username\">\n                            {`${data.first_name} ${data.last_name}`}\n                        </div>\n                        <div className=\"questions_info\">\n                            <div className=\"questions_received_time\">\n                                <p>{this.convertDateFormat(data.date)}</p>\n                            </div>\n                            <Question_reply data={data} botId={this.props.botId} convertDateFormat={this.convertDateFormat}></Question_reply>\n                            \n                        </div>\n                    </div>\n                )})\n            }).catch(function(err) {\n                console.log(err);\n            })\n    }\n\n    convertDateFormat(date) {\n        const day = new Date(date);\n        return day.toDateString() + ' ' + day.toTimeString().split(' ')[0];\n    }\n\n    render() {\n        return (\n            <div className=\"section_questions\">\n                <div className=\"module_path\">\n                    <p><span>Modules  /  </span>Collect Questions</p>\n                </div>\n                <Title title={\"Manage all of questions\"}></Title>\n                {this.state.messages.length === 0 ? \n                            <div className=\"empty_item\">There's any questions yet</div>\n                            : this.state.messages}\n            </div>\n        )\n    }\n}\n\nexport default Questions;","import React from 'react';\nimport Axios from 'axios';\nimport Title from './Section_title';\nimport '../css/Interests.css';\n\nclass Interests extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            interests: [],\n            interest_member: [],\n            serve_interests: [],\n            active_popup: false\n        }\n    }\n\n    componentDidMount() {\n        Axios.post('/getInterest', {chat_id: window.localStorage.getItem('chat_id')})\n            .then((res) => {\n                const dataset = [];\n                \n                for (var data of res.data) {\n                    dataset.push(data);\n                }\n\n                this.setState({interests: dataset})\n            })\n        Axios.post('/getInterestMembers', {chat_id: window.localStorage.getItem('chat_id')})\n            .then((res) => {\n                const dataset = res.data;\n\n                this.setState({interest_member: dataset.map((data, index) => \n                    <tr className=\"interest_member\" key={index}>\n                        <td>\n                            {data.first_name + ' ' + data.last_name}\n                        </td>\n                        <td onClick={() => this.changeContentbox(data.user_id)}>\n                            <p>VIEW</p>\n                        </td>\n                        <td>\n                            <i className=\"icon icon-download\"></i>\n                        </td>            \n                    </tr>\n                )})\n            })\n    }\n\n    changeContentbox(user_id) {\n        this.setState({serve_interests: this.state.interests.map((data, index) => {\n            const entities = JSON.parse(data.entities);\n\n            if (data.user_id === user_id && data.text) {\n                if (entities) {\n                    if (entities[0]['type'] === 'bot_command') {\n                        return;\n                    }\n                }\n                return (\n                    <div className=\"interest_contents\" key={index}>\n                        <p>\n                            {data.text}\n                        </p>\n                        <p>\n                            {this.convertDateFormat(data.registered_time)}\n                        </p>\n                    </div>\n                )\n            }\n        }), active_popup: true})\n\n        document.querySelector('body').onclick = (ev) => {\n            this.closeContentbox();\n        }\n    }\n\n    closeContentbox() {\n        this.setState({active_popup: false})\n        document.querySelector('body').removeEventListener('click', this);\n    }\n\n    convertDateFormat(date) {\n        const day = new Date(date);\n        return day.toDateString() + ' ' + day.toTimeString().split(' ')[0];\n    }\n\n    render() {\n        return (\n            <div className=\"section_interests\">\n                <div className=\"module_path\">\n                    <p><span>Modules  /  </span>Users Followed</p>\n                </div>\n                <Title title={\"Focus on user who you are interested in\"}></Title>\n                <table className=\"interests_wrap\">\n                    <thead>\n                        <tr>\n                            <th>username</th>\n                            <th>view</th>\n                            <th>export</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.interest_member}\n                    </tbody>\n                </table>\n                <div className={this.state.active_popup ? 'interests_contents active' : 'interests_contents'}>\n                    <Title title={\"User Conversation Logs\"}></Title>\n                    {this.state.serve_interests}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Interests;","import React from 'react';\nimport Axios from 'axios';\nimport Title from './Section_title';\nimport '../css/Interest_words.css';\n\nclass Interest_words extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          wordlist: [],\n          value: ''\n        };\n    }\n\n    componentDidMount() {\n        this.getWordData();\n    }\n\n    changeValues (event) {\n        this.setState({value: event.target.value})\n    }\n\n    submit_blacklist (ev) {\n        if (this.state.value.length !== 0) {\n            const val = this.state.value\n            \n            const chat_id = window.localStorage.getItem('chat_id')\n            if (chat_id.length !== 0) {\n                Axios.post('pushExpectWord', {word: val, chat_id: chat_id})\n                .then((res) => {\n                    if (res.data) {\n                        this.getWordData()\n                        this.setState({value: ''})\n                    }\n                })\n            } else {\n                alert('There is any valid key of chatting information')\n                return false\n            }\n        \n        }\n    }\n    \n    changeStateWordlist(is_active, id) {\n        if (is_active) {\n            Axios.post('editExpectedWord', {\n                chat_id: window.localStorage.getItem('chat_id'),\n                content: 0,\n                type: 'status',\n                id: id\n            })\n        } else {\n            Axios.post('editExpectedWord', {\n                chat_id: window.localStorage.getItem('chat_id'),\n                content: 1,\n                type: 'status',\n                id: id\n            })\n        }\n\n        return false;\n    }\n\n    getWordData() {\n        Axios.post('getExpectedWords', {chat_id: window.localStorage.getItem('chat_id')})\n        .then((res) => {\n            if (res.data && res.status === 200) {\n                let dataset = res.data;\n                \n                this.setState({wordlist: dataset.map((data, index) => \n                    <tr key={index}>\n                        <td>\n                            {data.word_name}\n                        </td>\n                        <td>\n                            {data.created_time}\n                        </td>\n                        <td>\n                            <span className=\"delete_icon icon\" onClick={(e) => this.deleteWord(data.idx)}></span>\n                            <span> Delete</span>\n                        </td>\n                        <td>\n                        <div className=\"disable_btn_wrap\">\n                                <label className=\"filter_group\" htmlFor={index + '_whitelist'}>\n                                    <input\n                                    type=\"checkbox\"\n                                    className=\"option_item\"\n                                    id={index + '_whitelist'}\n                                    onChange={(ev) => this.changeStateWordlist(data.is_active, data.idx)}\n                                    defaultChecked={data.is_active ? true : false}\n                                    ></input>\n                                    <span className=\"filter_label\"></span>\n                                    <span className=\"filter_circle\"></span>\n                                </label>\n                            </div>\n                        </td>\n                    </tr> \n                )})\n            }\n        })\n    }\n\n    deleteWord(word_id) {\n        var check = window.confirm('Are you sure to Delete this Item?')\n        if (check) {\n            Axios.post('delExpectedWord', {\n                word_id: word_id,\n                chat_id: window.localStorage.getItem('chat_id')\n            }).then((res) => {\n                if (res.status === 200 && res.data === true) {\n                    this.getWordData()\n                }\n            })\n        }\n        \n    }\n\n    render() {\n        return (\n            <div className=\"section_interestword\">\n                <div className=\"module_path\">\n                    <p><span>Modules  /  </span>Interest Words</p>\n                </div>\n                <Title title={'put a word what you want to look down.'}></Title>\n                <div className=\"interestword_input_wrap\">\n                    <label htmlFor=\"interestword_input\" className=\"interestword_label\">Enter words you want to watch</label>\n                    <div className=\"input_wrap\">\n                        <input id=\"interestword_input\" className=\"interestword_input\" onChange={(ev) => this.changeValues(ev)} onKeyUp={(ev)=> {if(ev.which === 13) {this.submit_blacklist(ev)}}} value={this.state.value}></input>\n                        <button type=\"button\" className=\"interestword_register\" onClick={(ev) => this.submit_blacklist(ev)}>ADD</button>\n                    </div>\n                </div>\n                \n                <p className=\"table_title\">\n                    interest words\n                </p>\n                <table className=\"interestword_tb\">\n                    <thead>\n                        <tr>\n                            <th width=\"35%\">Words</th>\n                            <th width=\"45%\">Date Added</th>\n                            <th width=\"10%\">Action</th>\n                            <th width=\"10%\">Status</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.wordlist.length === 0 \n                        ?\n                            <tr><td colSpan=\"3\" className=\"empty_item\">No Items</td></tr>\n                        :\n                            this.state.wordlist\n                        }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\n\nexport default Interest_words;","import React from 'react';\nimport Axios from 'axios';\nimport Title from './Section_title';\nimport '../css/FAQ_stats.css';\n\nclass FAQ_stats extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            faq_stats: []\n        }\n    }\n\n    componentDidMount() {\n        Axios.post('/getFaqlist', {chat_id: window.localStorage.getItem('chat_id')})\n            .then((res) => {\n                const dataset = res.data;\n\n                this.setState({faq_stats: dataset.map((data, index) => \n                    <tr className=\"faqstats_member\" key={index}>\n                        <td>\n                            {data.faq_response}\n                        </td>\n                        <td>\n                            {data.helpful + ' votes'}\n                        </td>\n                        <td>\n                            {data.notenough + ' votes'}\n                        </td>            \n                        <td>\n                            {data.wrong_answer + ' votes'}\n                        </td>            \n                    </tr>\n                )})\n            })\n    }\n\n    convertDateFormat(date) {\n        const day = new Date(date);\n        return day.toDateString() + ' ' + day.toTimeString().split(' ')[0];\n    }\n\n    render() {\n        return (\n            <div className=\"section_faqstats\">\n                <div className=\"module_path\">\n                    <p><span>Modules  /  </span>FAQ Stats</p>\n                </div>\n                <Title title={\"Figure a stat of your answers out more clear\"}></Title>\n                <table className=\"faqstats_wrap\">\n                    <thead>\n                        <tr>\n                            <th>FAQ</th>\n                            <th width=\"15%\">Useful</th>\n                            <th width=\"15%\">Not Enough Info</th>\n                            <th width=\"15%\">Wrong Info</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.faq_stats}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nexport default FAQ_stats;","import React, { useState } from \"react\";\nimport { Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\nimport \"./App.css\";\n\nimport RegisterChat from \"./components/Register_chat\";\nimport Signin from './components/Signin';\nimport LeftNav from \"./components/LeftNav\";\nimport Header from './components/Header_main';\n\nimport WordManager from \"./components/WordManager\";\nimport Whitelist from \"./components/Whitelist_URL\";\nimport Log from \"./components/Log\";\nimport Faq from \"./components/FAQ_register\";\nimport Start from \"./components/StartMenu\";\nimport Users from \"./components/UserManager\";\nimport Dashboard from \"./components/Dashboard\";\nimport Modules from './components/Modules';\nimport Settings from './components/Settings';\nimport Questions from './components/Questions';\nimport Interests from './components/Interests';\nimport Keypoint from './components/Interest_words';\nimport FAQStats from './components/FAQ_stats';\n\nimport Axios from \"axios\";\nAxios.defaults.baseURL = \"https://chatbot-258301.appspot.com/api/\";\n// Axios.defaults.baseURL = \"http://localhost:4000/api/\";\n\nfunction App() {\n  const [isValid, setIsValid] = useState(false);\n  const [statusNav, setStatusNav] = useState(\"word\");\n  const [chatInfo, setChatInfo] = useState([]);\n  const [botId, setBotId] = useState('847825836:AAFv02ESsTVjnrzIomgdiVjBGWVw7CpN_Cg');\n  // const [botId, setBotId] = useState('822428347:AAGXao7qTxCL5MoqQyeSqPc7opK607fA51I');\n  \n  const isLiving = getCookie(\"living\");\n\n  function getCookie(id) {\n    const cookies = document.cookie.split(\";\");\n    \n    for (var cookie of cookies) {\n      var parse = cookie.split(\"=\");\n      if (parse[0].trim() === id) {\n        return parse[1];\n      }\n    }\n  }\n  \n  if (isLiving || isValid) {\n    return (\n      <Router basename=\"/chatmanager\">\n        <Header botId={botId}></Header>\n        <div className=\"main_container\">\n          <LeftNav setStatus={setStatusNav} statusNav={statusNav} setChatInfo={setChatInfo} botId={botId}></LeftNav>\n          <section className=\"section_content\">\n            <Switch>\n              <Route path=\"/\" exact render={() => <Dashboard botId={botId}></Dashboard>}></Route>\n              <Route path=\"/dashboard\" render={() => <Dashboard botId={botId}></Dashboard>}></Route>\n              <Route path=\"/modules\" render={() => <Modules botId={botId}></Modules>}></Route>\n              <Route path=\"/whitelist\" render={() => <Whitelist botId={botId}></Whitelist>}></Route>\n              <Route path=\"/blacklist\" render={() => <WordManager botId={botId}></WordManager>}></Route>\n              <Route path=\"/faq\" render={() => <Faq botId={botId}></Faq>}></Route>\n              <Route path=\"/startmenu\" render={() => <Start botId={botId}></Start>}></Route>\n              <Route path=\"/logs\" render={() => <Log botId={botId}></Log>}></Route>\n              <Route path=\"/users\" render={() => <Users botId={botId}></Users>}></Route>\n              <Route path=\"/settings\" render={() => <Settings botId={botId}></Settings>}></Route>\n              <Route path=\"/questions\" render={() => <Questions botId={botId}></Questions>}></Route>\n              <Route path=\"/interest\" render={() => <Interests botId={botId}></Interests>}></Route>\n              <Route path=\"/keypoint\" render={() => <Keypoint botId={botId}></Keypoint>}></Route>\n              <Route path=\"/faqstats\" render={() => <FAQStats botId={botId}></FAQStats>}></Route>\n            </Switch>\n          </section>\n          <div className=\"dim\"></div>\n        </div>\n      </Router>\n    );\n  } else {\n    return (\n      <Router basename=\"/\">\n        <Switch>\n          <Route path=\"/\" exact render={() => <RegisterChat setValid={setIsValid}></RegisterChat>}></Route>\n          <Route path=\"/signin\" render={() => <Signin setValid={setIsValid}></Signin>}></Route>\n        </Switch>\n      </Router>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}