{"version":3,"sources":["components/Register_chat.js","components/LeftNav.js","components/Header_main.js","components/Section_title.js","components/WordManager.js","components/Whitelist_URL.js","components/Log.js","components/QnA_List_Component.js","components/FAQ_register.js","components/StartMenu.js","components/UserManager.js","components/module_item.js","components/Dashboard.js","components/Modules.js","components/Settings.js","App.js","serviceWorker.js","index.js"],"names":["RegisterChat","props","state","isActive","window","location","search","qstring","slice","split","length","room_name","activation_code","this","checkValidation","suffered_title","document","querySelector","value","checkValidationRoom","t","Axios","post","title","withCredentials","then","response","status","data","localStorage","setItem","id","setValid","alert","a","ac_code","expire_time","getUTCExpiredTime","cookie","now","Date","expireTime","getTime","setTime","toUTCString","className","type","name","placeholder","required","onClick","req_validCheck","React","Component","LeftNav","href","Header_main","default_info","chat_photo","isOpen","chat_id","getItem","res","setState","result","photo","get","small_file_id","res_photo","src","file_path","removeItem","toggleDropbox","style","color","logout","getHeaderPhoto","Section_title","WordManager","wordlist","getWordData","event","target","ev","val","word","is_active","content","dataset","map","index","key","word_name","created_time","e","deleteWord","htmlFor","onChange","changeStateWordlist","idx","defaultChecked","confirm","changeValues","onKeyUp","which","submit_blacklist","width","colSpan","Whitelist_URL","whitelist","pattern","getWhitelist","test","url","listup","item","push","url_pattern","created_date","deleteWhitelist","changeStateWhitelist","submit_whitelist","Log","loglist","getContent","del_date","render_resend_icon","msg","photo_base64","img_sr","alt","text","msg_from","parse_mode","restoreMsg","QnA_List_Component","isEditable","isImage","question","faq_content","faq_response","uploadImage","imageType","getFaqList","form_data","FormData","append","file","files","size","makePreview","fr","FileReader","onload","img_el","createElement","setAttribute","target_el","firstChild","removeChild","appendChild","readAsDataURL","changeQuestion","changeResponse","toggleRespType","uploadedImage","response_type","faq_response_img","confirmEdit","changeToEdit","deleteFaqList","FAQ_register","faqlist","removeImagePreview","clearTexts","img","targetid","blob","Blob","reader","submit_faqlist","preview_img","preview_txt","getStartMenu","submit_startmenu","UserManager","members","userid","user_id","setTimeout","reload","permissions","can_send_messages","can_send_media_messages","can_send_polls","can_send_other_messages","can_pin_messages","can_change_info","until_date","currentTarget","catch","err","is_bot","username","is_admin","act_txt_cnt","act_photo_cnt","act_url_cnt","kickMember","restrictMember","console","log","Module_item","checked","target_id","list_id","to","link","changeModules","Dashboard","itemlist","list","all_modules","Object","entries","target_pos","getEntireModules","Modules","Settings","options","img_filter","block_bot","order_del","is_img_filter","is_block_bot","is_ordering_comeout","save_options","defaults","baseURL","App","useState","isValid","setIsValid","statusNav","setStatusNav","setChatInfo","cookies","parse","trim","getCookie","setStatus","path","exact","component","Whitelist","Faq","Start","Users","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bad3e087.chunk.js","sourcesContent":["import React from 'react';\nimport Axios from 'axios';\n\nclass RegisterChat extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      isActive : false\n    }\n  }\n\n  componentDidMount() {\n    if (window.location.search !== '') {\n      const qstring = window.location.search.slice(1).split('&');\n      if (qstring.length !== 0) {\n        const room_name = qstring[0].split('=')[1];\n        const activation_code = qstring[1].split('=')[1];\n        \n        this.checkValidation(room_name, activation_code);\n\n      }\n    }\n  }\n\n  req_validCheck () {\n    const suffered_title = document.querySelector('input.strChatName').value;\n    \n    if (this.isActive) {\n      \n      this.checkValidationRoom(suffered_title);\n\n    } else {\n      const activation_code = document.querySelector('input.activationCode').value;\n\n      this.checkValidation(suffered_title, activation_code);\n       \n    }\n  }\n\n  checkValidationRoom(t) {\n    Axios.post('checkValidationRoom', {\n      title: t\n        }, {withCredentials: true}).then((response) => {\n          if (response.status === 200) {\n            if (response.data !== false) {\n              window.localStorage.setItem('chat_id', response.data.id)\n              this.props.setValid(true)\n            } else {\n              this.isActive = false\n              alert('your Room is not activated properly. Please chack your activation code again. if you don\\'t have an activation code, ask to AQOOM service manager.')\n            }\n          }\n        })  \n  }\n\n  checkValidation(t, a) {\n    Axios.post('checkValidation', {\n        title: t,\n        ac_code: a\n      }, {withCredentials: true}).then((response) => {\n        if (response.status === 200) {\n          if (response.data !== false) {\n            window.localStorage.setItem('chat_id', response.data.id)\n            const expire_time = this.getUTCExpiredTime();\n            document.cookie = \"living=true; expires=\" + expire_time;\n            this.props.setValid(true)\n          } else {\n            alert('it\\'s not valid input. check again if chat Room\\'s name or activation code is valid.')\n          }\n        }\n      })  \n  }\n\n  getUTCExpiredTime() {\n    var now = new Date();\n    var time = now.getTime();\n    var expireTime = time + 2*360000;\n    now.setTime(expireTime);\n\n    return now.toUTCString();\n  }\n  \n\n  render() {\n    return (\n      <div className=\"App\">\n            <header className=\"App-header\">\n            <div className=\"register_title\">\n                <p>Register your chatting room</p>\n            </div>\n            <div className=\"register_form\">\n                {!this.state.isActive ? <input type=\"text\" name=\"activation_code\" className=\"activationCode\" placeholder=\"Activation Code\" required></input> : ''}\n                <input type=\"text\" name=\"title\" className=\"strChatName\" placeholder=\"plaese write a Chatting room's Title\" required></input>\n                <button className=\"submit_btn\" onClick={() => this.req_validCheck()}>submit</button>\n            </div>\n            </header>\n        </div>\n    )\n  }\n}\n\nexport default RegisterChat;","import React from \"react\";\nimport \"../css/LeftNav.css\";\n\nclass LeftNav extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <section className=\"left_nav\">\n        <div className=\"nav_contents\">\n          <a href=\"/dashboard\"><i className=\"icon icon-dashboard\"></i> Dashboard</a>\n          <a href=\"/modules\"><i className=\"icon icon-modules\"></i> Modules</a>\n          <a href=\"/settings\"><i className=\"icon icon-setting\"></i> Settings</a>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default LeftNav;\n","import React from 'react';\nimport Axios from 'axios';\n\nclass Header_main extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            default_info: [],\n            chat_photo: [],\n            isOpen: false\n        }\n    }\n\n    componentWillMount() {\n        const chat_id = window.localStorage.getItem('chat_id');\n        \n        Axios.post('https://api.telegram.org/bot847825836:AAFv02ESsTVjnrzIomgdiVjBGWVw7CpN_Cg/getChat', {chat_id : chat_id})\n            .then((res) => {\n                this.setState({default_info: res.data.result})\n                if (res.data.result.photo) {\n                    Axios.get('https://api.telegram.org/bot847825836:AAFv02ESsTVjnrzIomgdiVjBGWVw7CpN_Cg/getFile?file_id='+res.data.result.photo.small_file_id)\n                    .then((res_photo) => {\n                        this.setState({chat_photo: res_photo.data.result})\n                    })\n                }\n            })\n    }\n    \n    getHeaderPhoto() {\n        if (this.state.chat_photo) {\n            return (\n                <img src={'https://api.telegram.org/file/bot847825836:AAFv02ESsTVjnrzIomgdiVjBGWVw7CpN_Cg/' + this.state.chat_photo.file_path}></img>\n            )\n        } else {\n            return ''\n        }\n    }\n\n    toggleDropbox() {\n        if (this.state.isOpen) {\n            this.setState({isOpen: false})\n        } else {\n            this.setState({isOpen: true})\n        }\n    }\n\n    logout() {\n        // 스토리지 chat_id, cookie living delete\n        window.localStorage.removeItem('chat_id')\n        document.cookie = \"living=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\n        window.location.href = '/';\n    }\n\n    render() {\n        return (\n            <div className=\"section_header\">\n                <div className=\"header_logo\">\n                    \n                </div>\n                <div className=\"header_infos\">\n                    <div className=\"header_name\" onClick={() => this.toggleDropbox()}>\n                        <span>{this.state.default_info.title}</span>\n                        <span className=\"icon icon-down\"></span>\n                    </div>\n                    <ul className={this.state.isOpen ? 'header_drop open' : 'header_drop'}>\n                        <li>{this.state.default_info.title}</li>\n                        <li style={{color:'#2F2F2F'}} onClick={() => this.logout()}>LOG OUT</li>\n                    </ul>\n                    <div className=\"header_photo\">\n                        {this.getHeaderPhoto()}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Header_main;","import React from 'react';\n\nfunction Section_title (props) {\n    \n    return (\n        <div className=\"section_title\">\n            <h2 className=\"title\">\n                {props.title}\n            </h2>\n        </div>\n    )\n}\n\nexport default Section_title;","import React from 'react';\nimport Axios from 'axios';\nimport AppendModal from './Append_modal';\nimport EditModal from './Edit_modal';\nimport Title from './Section_title';\nimport '../css/WordManager.css';\n\nclass WordManager extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          wordlist: [],\n          value: ''\n        };\n    }\n\n    componentDidMount() {\n        this.getWordData();\n    }\n\n    changeValues (event) {\n        this.setState({value: event.target.value})\n    }\n\n    submit_blacklist (ev) {\n        if (this.state.value.length !== 0) {\n            const val = this.state.value\n            \n            const chat_id = window.localStorage.getItem('chat_id')\n            if (chat_id.length !== 0) {\n                Axios.post('pushWordData', {word: val, chat_id: chat_id})\n                .then((res) => {\n                    if (res.data) {\n                        this.getWordData()\n                    }\n                })\n            } else {\n                alert('There is any valid key of chatting information')\n                return false\n            }\n        \n        }\n    }\n    \n    changeStateWordlist(is_active, id) {\n        if (is_active) {\n            Axios.post('editWordData', {\n                chat_id: window.localStorage.getItem('chat_id'),\n                content: 0,\n                type: 'status',\n                id: id\n            })\n        } else {\n            Axios.post('editWordData', {\n                chat_id: window.localStorage.getItem('chat_id'),\n                content: 1,\n                type: 'status',\n                id: id\n            })\n        }\n\n        return false;\n    }\n\n    getWordData() {\n        Axios.post('getWordData', {chat_id: window.localStorage.getItem('chat_id')})\n        .then((res) => {\n            if (res.data && res.status === 200) {\n                let dataset = res.data;\n                \n                this.setState({wordlist: dataset.map((data, index) => \n                    <tr key={index}>\n                        <td>\n                            {data.word_name}\n                        </td>\n                        <td>\n                            {data.created_time}\n                        </td>\n                        <td>\n                            <span className=\"delete_icon icon\" onClick={(e) => this.deleteWord(data.word_name)}></span>\n                            <span> Delete</span>\n                        </td>\n                        <td>\n                        <div className=\"disable_btn_wrap\">\n                                <label className=\"filter_group\" htmlFor={index + '_whitelist'}>\n                                    <input\n                                    type=\"checkbox\"\n                                    className=\"option_item\"\n                                    id={index + '_whitelist'}\n                                    onChange={(ev) => this.changeStateWordlist(data.is_active, data.idx)}\n                                    defaultChecked={data.is_active ? true : false}\n                                    ></input>\n                                    <span className=\"filter_label\"></span>\n                                    <span className=\"filter_circle\"></span>\n                                </label>\n                            </div>\n                        </td>\n                    </tr> \n                )})\n            }\n        })\n    }\n\n    deleteWord(word) {\n        var check = window.confirm('Are you sure to Delete this Item?')\n        if (check) {\n            Axios.post('delWordData', {\n                word: word,\n                chat_id: window.localStorage.getItem('chat_id')\n            }).then((res) => {\n                if (res.status === 200 && res.data === true) {\n                    alert(`delete '${word}' successfully `)\n                    this.getWordData()\n                }\n            })\n        }\n        \n    }\n\n    render() {\n        return (\n            <div className=\"section_wordmanager\">\n                <div className=\"module_path\">\n                    <p><span>Modules  /  </span>Blacklist</p>\n                </div>\n                <Title title={'Manage Blacklist'}></Title>\n                <div className=\"blacklist_input_wrap\">\n                    <label htmlFor=\"blacklist_input\" className=\"blacklist_label\">Enter words you want to ban</label>\n                    <div className=\"input_wrap\">\n                        <input id=\"blacklist_input\" className=\"blacklist_input\" placeholder=\"Input a URL to shut down\" onChange={(ev) => this.changeValues(ev)} onKeyUp={(ev)=> {if(ev.which === 13) {this.submit_blacklist(ev)}}}></input>\n                        <button type=\"button\" className=\"blacklist_register\" onClick={(ev) => this.submit_blacklist(ev)}>ADD</button>\n                    </div>\n                </div>\n                \n                <p className=\"table_title\">\n                    Blacklist\n                </p>\n                <table className=\"blacklist_tb\">\n                    <thead>\n                        <tr>\n                            <th width=\"35%\">Words</th>\n                            <th width=\"45%\">Date Added</th>\n                            <th width=\"10%\">Action</th>\n                            <th width=\"10%\">Status</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.wordlist.length === 0 \n                        ?\n                            <tr><td colSpan=\"3\" className=\"empty_item\">No Items</td></tr>\n                        :\n                            this.state.wordlist\n                        }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\n\nexport default WordManager;","import React from 'react';\nimport Axios from 'axios';\nimport Title from './Section_title';\nimport '../css/Whitelist_URL.css';\nimport { networkInterfaces } from 'os';\n\nclass Whitelist_URL extends React.Component{\n    constructor (props) {\n        super(props)\n        this.state = {\n            whitelist: [],\n            value: ''\n        }\n    }\n\n    submit_whitelist (ev) {\n        if (this.state.value.length !== 0) {\n            const val = this.state.value\n            const validation = this.checkValidation(val)\n            if (validation) {\n                const chat_id = window.localStorage.getItem('chat_id')\n                if (chat_id.length !== 0) {\n                    Axios.post('pushWhitelist', {pattern: val, chat_id: chat_id})\n                    .then((res) => {\n                        if (res.data) {\n                            this.getWhitelist()\n                        }\n                    })\n                } else {\n                    alert('There is any valid key of chatting information')\n                    return false\n                }\n            } else {\n                alert('Invalid URL address, please check it again')\n            }\n        }\n    }\n    \n    checkValidation (val) {\n        if (typeof val === 'string') {\n            const regx_test = /^\\/[\\s\\S]*\\/$/\n            const regx = /(https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|www\\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9]+\\.[^\\s]{2,}|www\\.[a-zA-Z0-9]+\\.[^\\s]{2,}|[a-zA-Z0-9]+\\.[^\\s]{2,})/\n            if (regx.test(val) || regx_test.test(val)) {\n                return true\n            } else {\n                return false\n            }\n        }    \n    }\n\n    changeValues (event) {\n        this.setState({value: event.target.value})\n    }\n\n    deleteWhitelist(url) {\n        var check = window.confirm('Are you sure to Delete this Item?')\n        if (check) {\n            Axios.post('delWhitelist', {\n                url: url,\n                chat_id: window.localStorage.getItem('chat_id')\n            }).then((res) => {\n                if (res.status === 200 && res.data === true) {\n                    alert(`delete '${url}' successfully `)\n                    this.getWhitelist()\n                }\n            })\n        }\n        \n    }\n\n    changeStateWhitelist(is_active, id) {\n        if (is_active) {\n            Axios.post('updateWhitelist', {\n                chat_id: window.localStorage.getItem('chat_id'),\n                content: 0,\n                type: 'status',\n                id: id\n            })\n        } else {\n            Axios.post('updateWhitelist', {\n                chat_id: window.localStorage.getItem('chat_id'),\n                content: 1,\n                type: 'status',\n                id: id\n            })\n        }\n\n        return false;\n    }\n\n    getWhitelist () {\n        const chat_id = window.localStorage.getItem('chat_id')\n\n        if (chat_id.length !== 0) {\n            Axios.post('getWhitelist', {chat_id: chat_id})\n            .then((res) => {\n                const listup = res.data;\n                let result = [];\n                \n                for (var item of listup) {\n                    result.push(item)\n                }\n                \n                this.setState({whitelist: result.map((data, index) => \n                    <tr key={index}>\n                        <td>\n                            {data.url_pattern}\n                        </td>\n                        <td>\n                            {new Date(data.created_date).toUTCString()}\n                        </td>\n                        <td>\n                            <span className=\"delete_icon icon\" onClick={(e) => this.deleteWhitelist(data.url_pattern)}></span>\n                            <span> Delete</span>\n                        </td>\n                        <td>\n                            <div className=\"disable_btn_wrap\">\n                                <label className=\"filter_group\" htmlFor={index + '_whitelist'}>\n                                    <input\n                                    type=\"checkbox\"\n                                    className=\"option_item\"\n                                    id={index + '_whitelist'}\n                                    onChange={(ev) => this.changeStateWhitelist(data.is_active, data.id)}\n                                    defaultChecked={data.is_active ? true : false}\n                                    ></input>\n                                    <span className=\"filter_label\"></span>\n                                    <span className=\"filter_circle\"></span>\n                                </label>\n                            </div>\n                        </td>\n                    </tr> \n                )})\n\n                return\n            })\n        }\n    }\n\n    componentDidMount () {\n        this.getWhitelist();\n    }\n\n    render () {\n        return (\n            <div className=\"section_whitelist\">\n                <div className=\"module_path\">\n                    <p><span>Modules  /  </span>Whitelist</p>\n                </div>\n                <Title title={'Manage Whitelist'}></Title>\n                <div className=\"whitelist_input_wrap\">\n                    <label htmlFor=\"whitelist_input\" className=\"whitelist_label\">Enter URL you want to ban</label>\n                    <div className=\"input_wrap\">\n                        <input id=\"whitelist_input\" className=\"whitelist_input\" placeholder=\"Input a URL to shut down\" onChange={(ev) => this.changeValues(ev)} onKeyUp={(ev)=> {if(ev.which === 13) {this.submit_whitelist(ev)}}}></input>\n                        <button type=\"button\" className=\"whitelist_register\" onClick={(ev) => this.submit_whitelist(ev)}>ADD</button>\n                    </div>\n                </div>\n                \n                <p className=\"table_title\">\n                    Whitelist\n                </p>\n                <table className=\"whitelist_tb\">\n                    <thead>\n                        <tr>\n                            <th width=\"35%\">URL</th>\n                            <th width=\"45%\">Date Added</th>\n                            <th width=\"10%\">Action</th>\n                            <th width=\"10%\">Status</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.whitelist.length === 0 \n                        ?\n                            <tr><td colSpan=\"3\" className=\"empty_item\">No Items</td></tr>\n                        :\n                            this.state.whitelist\n                        }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nexport default Whitelist_URL;","import React from 'react';\nimport Title from './Section_title';\nimport '../css/Log.css';\nimport Axios from 'axios';\n\nclass Log extends React.Component{\n    constructor (props) {\n        super(props)\n        this.state = {\n            loglist: []\n        }\n    }\n\n    componentDidMount() {\n        Axios.post('getLogs', {'chat_id' : window.localStorage.getItem('chat_id')})\n            .then((res) => {\n                const listup = res.data;\n                let result = [];\n                \n                for (var item of listup) {\n                    result.push(item)\n                }\n                \n                this.setState({loglist: result.map((data, index) => \n                    <tr key={index}>\n                        <td>\n                            {index}\n                        </td>\n                        <td>\n                            {this.getContent(data)}\n                        </td>\n                        <td>\n                            {data.type}\n                        </td>\n                        <td>\n                            {new Date(data.del_date).toUTCString()}\n                        </td>\n                        <td>\n                            {this.render_resend_icon(data)}\n                        </td>\n                    </tr>\n                )})\n\n                return\n            })\n    }\n\n    getContent(data) {\n        if (data.type !== 'photo') {\n            return data.msg;\n        } else {\n            if (data.photo_base64) {\n                const img_sr = \"data:image/jpg;base64,\" + data.photo_base64;\n            \n                return (\n                    <img src={img_sr} alt=\"result of log\" ></img>\n                )\n            }\n        }\n    }\n\n    restoreMsg(data) {\n        const dataset = {\n            chat_id: window.localStorage.getItem('chat_id'),\n            text: `<i> -> ${data.msg_from}</i>\n            \n            origin msg : <b>${data.msg}</b>`,\n            parse_mode: 'html'\n        }\n        Axios.post(`https://api.telegram.org/bot847825836:AAFv02ESsTVjnrzIomgdiVjBGWVw7CpN_Cg/sendMessage`, dataset)\n    }\n\n    render_resend_icon(data) {\n        if (data.type === 'text') {\n            return (\n                <span className=\"icon resend_icon\" onClick={(ev) => this.restoreMsg(data)}></span>\n            )\n        } else {\n            return ''\n        }\n    }\n\n    render () {\n        return (\n            <div className=\"section_log\">\n                 <div className=\"module_path\">\n                <p>\n                    <span>Modules / </span>Logs\n                </p>\n                </div>\n                <Title title={'Logs about blocked words or pictures'}></Title>\n                <table className=\"log_tb\">\n                    <thead>\n                        <tr>\n                            <th>\n                                #\n                            </th>\n                            <th>\n                                content\n                            </th>\n                            <th width=\"5%\">\n                                type\n                            </th>\n                            <th width=\"20%\">\n                                date\n                            </th>\n                            <th width=\"8%\">\n                                re-send\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.loglist}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nexport default Log;","import React from \"react\";\nimport Axios from \"axios\";\n\nclass QnA_List_Component extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEditable: false,\n      isImage: false,\n      question: this.props.data.faq_content,\n      response: this.props.data.faq_response,\n      uploadImage: \"\",\n      imageType: \"\"\n    };\n  }\n  deleteFaqList(content) {\n    var check = window.confirm(\"Are you sure to Delete this Item?\");\n    if (check) {\n      const data = {\n        content: content,\n        chat_id: window.localStorage.getItem(\"chat_id\")\n      };\n\n      Axios.post(\"delFaqlist\", data).then(res => {\n        if (res.data) {\n            this.props.getFaqList();\n        }\n      });\n    }\n  }\n  changeToEdit() {\n    this.setState({ isEditable: true });\n  }\n  changeQuestion(event) {\n    return this.setState({ question: event.target.value });\n  }\n  changeResponse(event) {\n    return this.setState({ response: event.target.value });\n  }\n  toggleRespType(type) {\n    if (type === \"text\") {\n      this.setState({ isImage: false });\n    } else if (type === \"pic\") {\n      this.setState({ isImage: true });\n    }\n  }\n  confirmEdit() {\n    var form_data = new FormData();\n\n    form_data.append(\"chat_id\", window.localStorage.getItem(\"chat_id\"));\n    form_data.append(\"question\", this.state.question);\n    form_data.append(\"response\", this.state.response);\n    form_data.append(\"response_img\", this.state.uploadImage);\n    form_data.append(\"response_type\", this.state.isImage ? \"img\" : \"txt\");\n    form_data.append(\"img_type\", this.state.imageType);\n    form_data.append(\"id\", this.props.data.id);\n\n    if (form_data.get(\"chat_id\") && form_data.get(\"question\") !== \"\") {\n      Axios.post(\"updateFaqlist\", form_data).then(res => {\n        if (res.data) {\n          this.props.getFaqList();\n          this.setState({isEditable: false})\n        }\n      });\n    }\n  }\n  uploadedImage(event) {\n    const file = event.target.files[0];\n    if (file.size > 2 * 1024 * 1024) {\n      alert(\"File size should be less than 2MB\");\n      return false;\n    }\n    this.makePreview(file);\n    this.setState({ imageType: file.type.split(\"/\")[1], uploadImage: file });\n  }\n\n  makePreview(file) {\n    const fr = new FileReader();\n    const index = this.props.index;\n\n    fr.onload = function(e) {\n      const img_el = document.createElement(\"img\");\n      img_el.setAttribute(\"src\", e.target.result);\n\n      const target_el = document.querySelector(\"#input_file_preview_\" + index);\n      while (target_el.firstChild) {\n        target_el.removeChild(target_el.firstChild);\n      }\n\n      target_el.appendChild(img_el);\n    };\n\n    fr.readAsDataURL(file);\n  }\n  render() {\n    return (\n      <tr>\n        <td>\n          {this.state.isEditable ? (\n            <textarea\n              className=\"list_content\"\n              value={this.state.question}\n              onChange={ev => this.changeQuestion(ev)}\n            ></textarea>\n          ) : (\n            <div className=\"list_content\">{this.props.data.faq_content}</div>\n          )}\n        </td>\n        <td>\n          {this.state.isEditable ? (\n            <div className=\"faq_content_wrap\">\n              {this.state.isImage ? (\n                <div id={'input_file_preview_' + this.props.index}></div>\n              ) : (\n                <textarea\n                  value={this.state.response}\n                  onChange={ev => this.changeResponse(ev)}\n                ></textarea>\n              )}\n              <div className=\"response_type_btns_wrap\">\n                {this.state.isImage ? (\n                  <span\n                    className=\"icon text-icon-disabled\"\n                    onClick={ev => this.toggleRespType(\"text\")}\n                  ></span>\n                ) : (\n                  <span\n                    className=\"icon text-icon-active\"\n                    onClick={ev => this.toggleRespType(\"text\")}\n                  ></span>\n                )}\n                <span> | </span>\n                <label>\n                  <input\n                    type=\"file\"\n                    name=\"faq_img\"\n                    onChange={ev => this.uploadedImage(ev)}\n                  ></input>\n                  {this.state.isImage ? (\n                    <span\n                      className=\"icon pic-icon-active\"\n                      onClick={() => this.toggleRespType(\"pic\")}\n                    ></span>\n                  ) : (\n                    <span\n                      className=\"icon pic-icon-disabled\"\n                      onClick={() => this.toggleRespType(\"pic\")}\n                    ></span>\n                  )}\n                </label>\n              </div>\n            </div>\n          ) : (\n            <div className=\"list_response\">\n              {this.props.data.response_type === \"txt\" ? (\n                this.props.data.faq_response\n              ) : (\n                <img\n                  id={\"faq_img\" + this.props.index}\n                  src={this.props.data.faq_response_img}\n                  alt=\"registerd for FAQ\"\n                ></img>\n              )}\n            </div>\n          )}\n        </td>\n        <td>\n          {this.state.isEditable ? (\n            <div className=\"edit_btns_wrap\">\n              <span\n                className=\"save_icon icon\"\n                onClick={e => this.confirmEdit()}\n              ></span>\n              <span\n                className=\"cancle_icon icon\"\n                onClick={e => this.setState({ isEditable: false })}\n              ></span>\n            </div>\n          ) : (\n            <div className=\"edit_btns_wrap\">\n              <span\n                className=\"edit_icon icon\"\n                onClick={e => this.changeToEdit(this.props.index)}\n              ></span>\n              <span\n                className=\"delete_icon icon\"\n                onClick={e => this.deleteFaqList(this.props.data.faq_content)}\n              ></span>\n            </div>\n          )}\n        </td>\n      </tr>\n    );\n  }\n}\n\nexport default QnA_List_Component;\n","import React from 'react';\nimport Axios from 'axios';\nimport Title from './Section_title';\nimport QnA_List from './QnA_List_Component';\nimport '../css/FAQ_register.css'\n\nclass FAQ_register extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            val: '',\n            response: '',\n            faqlist: [],\n            isImage: false,\n            uploadImage: '',\n            imageType : ''\n        }\n    }\n    \n    changeValues(event) {\n        return this.setState({val: event.target.value})\n    }\n\n    changeResponse(event) {\n        return this.setState({response: event.target.value})\n    }\n\n    toggleRespType(type) {\n        if (type === 'text') {\n            this.setState({isImage: false})\n        } else if (type === 'pic') {\n            this.setState({isImage: true})\n        }\n    }\n\n    uploadedImage(event) {\n        const file = event.target.files[0];\n        if (file.size > 2 * 1024 * 1024) {\n            alert('File size should be less than 2MB')\n            return false\n        }\n        this.makePreview(file);\n        this.setState({imageType: file.type.split('/')[1], uploadImage: file})\n    }\n\n    makePreview(file) {\n        const fr = new FileReader();\n        \n        fr.onload = function(e) {\n            const img_el = document.createElement('img');\n            img_el.setAttribute('src', e.target.result);\n            \n            const target_el = document.querySelector('.input_file_preview');\n            while (target_el.firstChild) {\n                target_el.removeChild(target_el.firstChild);\n            }\n\n            document.querySelector('.input_file_preview').appendChild(img_el)\n        }\n\n        fr.readAsDataURL(file)\n    }\n\n    removeImagePreview() {\n        const target_el = document.querySelector('.input_file_preview');\n        while (target_el.firstChild) {\n            target_el.removeChild(target_el.firstChild);\n        }\n    }\n\n    clearTexts() {\n        document.querySelector('textarea.faq_input').value = '';\n        if (!this.state.isImage) {\n            document.querySelector('textarea#faq_response_input').value = '';\n        } else {\n            this.removeImagePreview()\n        }\n\n        return true;\n    }\n\n    submit_faqlist(event) {\n        var form_data = new FormData();\n        \n        form_data.append('chat_id', window.localStorage.getItem('chat_id'))\n        form_data.append('content', this.state.val)\n        form_data.append('response', this.state.response)\n        form_data.append('response_img', this.state.uploadImage)\n        form_data.append('response_type', this.state.isImage ? 'img' : 'txt')\n        form_data.append('img_type', this.state.imageType)\n\n        if (form_data.get('chat_id') && form_data.get('content') !== '') {\n            Axios.post('pushFaqlist', form_data)\n                .then((res) => {\n                    if (res.data) {\n                        this.getFaqList();\n                        this.clearTexts();\n                    }\n                })\n        } \n    }\n\n    convertToBase64 ( img, type, targetid ) {\n        if (img !== null) {\n            var blob = new Blob( [ img ], { type: \"image/\" + type } );\n            var reader = new FileReader()\n            \n            reader.onload = function (file) {\n                var img_tag = document.querySelector('#' + targetid)\n                img_tag.src = file.target.result;\n            }\n            reader.readAsDataURL(blob);\n        }\n    }\n\n    getFaqList () {\n        const chat_id = window.localStorage.getItem('chat_id')\n\n        if (chat_id.length !== 0) {\n            Axios.post('getFaqlist', {chat_id: chat_id})\n            .then((res) => {\n                const listup = res.data;\n                let result = [];\n                \n                for (var item of listup) {\n                    result.push(item)\n                }\n                \n                this.setState({faqlist: result.map((data, index) => \n                    <QnA_List data={data} index={index} getFaqList={() => this.getFaqList()}></QnA_List>\n                )})\n\n                return\n            })\n        }\n    }\n\n    componentDidMount () {\n        this.getFaqList();\n    }\n\n    render () {\n        return (\n            <div className=\"faq_section\">\n                <div className=\"module_path\">\n                    <p><span>Modules  /  </span>FAQ Responder</p>\n                </div>\n                <Title title={'Manage automatic response for FAQ'}></Title>\n                <div className=\"faq_input_wrap\">\n                    <div className=\"faq_content_wrap\">\n                        <label htmlFor=\"faq_input\">If the user says something similar to</label>\n                        <textarea id=\"faq_input\" className=\"faq_input\" onChange={(ev) => this.changeValues(ev)}></textarea>\n                    </div>\n                    <div className=\"faq_content_wrap\">\n                        <label htmlFor=\"faq_response_input\">The bot will reply</label>\n                        {this.state.isImage ? <div className=\"input_file_preview\"></div> : <textarea id=\"faq_response_input\" onChange={(ev) => this.changeResponse(ev)}></textarea>}\n                        <div className=\"response_type_btns_wrap\">\n                            {this.state.isImage ? <span className=\"icon text-icon-disabled\" onClick={(ev) => this.toggleRespType('text')}></span> : <span className=\"icon text-icon-active\" onClick={(ev) => this.toggleRespType('text')}></span>}\n                            <span> | </span>\n                            <label>\n                                <input type=\"file\" name=\"faq_img\" onChange={(ev) => this.uploadedImage(ev)}></input>\n                                {this.state.isImage ? <span className=\"icon pic-icon-active\" onClick={() => this.toggleRespType('pic')}></span> : <span className=\"icon pic-icon-disabled\" onClick={() => this.toggleRespType('pic')}></span>}\n                            </label>\n                            \n                        </div>\n                    </div>\n                </div>\n                <button type=\"button\" className=\"faq_register\" onClick={(ev) => this.submit_faqlist(ev)}>ADD</button>\n                \n                <p className=\"table_title\">\n                    Responds\n                </p>\n                <table className=\"faq_tb\">\n                    <tbody>\n                        {this.state.faqlist.length === 0 \n                        ? \n                            <tr><td colSpan=\"3\" className=\"empty_item\">No Items</td></tr>\n                        :\n                            this.state.faqlist\n                        }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nexport default FAQ_register;","import React from \"react\";\nimport Axios from \"axios\";\nimport Title from \"./Section_title\";\nimport \"../css/StartMenu_reg.css\";\n\nclass FAQ_register extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      response: \"\",\n      faqlist: [],\n      isImage: false,\n      uploadImage: \"\",\n      imageType: \"\",\n      preview_img: \"\",\n      preview_txt: \"\",\n      isEditable: false\n    };\n  }\n\n  changeResponse(event) {\n    return this.setState({ response: event.target.value });\n  }\n\n  changeToEdit() {\n    this.setState({ isEditable: true });\n  }\n  toggleRespType(type) {\n    if (type === \"text\") {\n      this.setState({ isImage: false });\n    } else if (type === \"pic\") {\n      this.setState({ isImage: true });\n    }\n  }\n\n  uploadedImage(event) {\n    const file = event.target.files[0];\n    if (file.size > 2 * 1024 * 1024) {\n      alert(\"File size should be less than 2MB\");\n      return false;\n    }\n    this.makePreview(file);\n    this.setState({ imageType: file.type.split(\"/\")[1], uploadImage: file });\n  }\n\n  makePreview(file) {\n    const fr = new FileReader();\n\n    fr.onload = function(e) {\n      const img_el = document.createElement(\"img\");\n      img_el.setAttribute(\"src\", e.target.result);\n\n      const target_el = document.querySelector(\".input_file_preview\");\n      while (target_el.firstChild) {\n        target_el.removeChild(target_el.firstChild);\n      }\n\n      document.querySelector(\".input_file_preview\").appendChild(img_el);\n    };\n\n    fr.readAsDataURL(file);\n  }\n\n  removeImagePreview() {\n    const target_el = document.querySelector(\".input_file_preview\");\n    while (target_el.firstChild) {\n      target_el.removeChild(target_el.firstChild);\n    }\n  }\n\n  clearTexts() {\n    if (!this.state.isImage) {\n      document.querySelector(\"textarea#start_response_input\").value = \"\";\n    } else {\n      this.removeImagePreview();\n    }\n\n    return true;\n  }\n\n  submit_startmenu(event) {\n    var form_data = new FormData();\n\n    form_data.append(\"chat_id\", window.localStorage.getItem(\"chat_id\"));\n    form_data.append(\"content_text\", this.state.response);\n    form_data.append(\"content_img\", this.state.uploadImage);\n    form_data.append(\"content_type\", this.state.isImage ? \"img\" : \"txt\");\n    form_data.append(\"img_type\", this.state.imageType);\n\n    if (form_data.get(\"chat_id\")) {\n      Axios.post(\"pushStartMenu\", form_data).then(res => {\n        if (res.data) {\n          this.getStartMenu();\n          this.clearTexts();\n        }\n      });\n    }\n  }\n\n  deleteStartMenu() {\n    var check = window.confirm(\"Are you sure to Delete this Item?\");\n    if (check) {\n      const data = {\n        chat_id: window.localStorage.getItem(\"chat_id\")\n      };\n\n      Axios.post(\"delStartMenu\", data).then(res => {\n        if (res.data) {\n          this.getStartMenu();\n        }\n      });\n    }\n  }\n\n  convertToBase64(img, type, targetid) {\n    if (img !== null) {\n      var blob = new Blob([img], { type: \"image/\" + type });\n      var reader = new FileReader();\n\n      reader.onload = function(file) {\n        var img_tag = document.querySelector(\"#\" + targetid);\n        img_tag.src = file.target.result;\n      };\n      reader.readAsDataURL(blob);\n    }\n  }\n\n  getStartMenu() {\n    Axios.post(\"getStartMenu\", {\n      chat_id: window.localStorage.getItem(\"chat_id\")\n    }).then(res => {\n      this.setState({\n        preview_img: res.data[0][\"content_img\"],\n        preview_txt: res.data[0][\"content_txt\"]\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.getStartMenu();\n  }\n\n  render() {\n    return (\n      <div className=\"startmenu_section\">\n        <div className=\"module_path\">\n          <p>\n            <span>Modules / </span>start command responder\n          </p>\n        </div>\n        <Title title={\"Manage automatic response for /start command\"}></Title>\n        <div className=\"start_input_wrap\">\n          <div className=\"start_content_wrap\">\n            <label htmlFor=\"start_response_input\">\n              If the user types /start\n            </label>\n            {this.state.isImage ? (\n              <div className=\"input_file_preview\"></div>\n            ) : (\n              <textarea\n                id=\"start_response_input\"\n                onChange={ev => this.changeResponse(ev)}\n              ></textarea>\n            )}\n            <div className=\"response_type_btns_wrap\">\n              {this.state.isImage ? (\n                <span\n                  className=\"icon text-icon-disabled\"\n                  onClick={ev => this.toggleRespType(\"text\")}\n                ></span>\n              ) : (\n                <span\n                  className=\"icon text-icon-active\"\n                  onClick={ev => this.toggleRespType(\"text\")}\n                ></span>\n              )}\n              <span> | </span>\n              <label>\n                <input\n                  type=\"file\"\n                  name=\"faq_img\"\n                  onChange={ev => this.uploadedImage(ev)}\n                ></input>\n                {this.state.isImage ? (\n                  <span\n                    className=\"icon pic-icon-active\"\n                    onClick={() => this.toggleRespType(\"pic\")}\n                  ></span>\n                ) : (\n                  <span\n                    className=\"icon pic-icon-disabled\"\n                    onClick={() => this.toggleRespType(\"pic\")}\n                  ></span>\n                )}\n              </label>\n            </div>\n          </div>\n        </div>\n        <button\n          type=\"button\"\n          className=\"start_register\"\n          onClick={ev => this.submit_startmenu(ev)}\n        >\n          ADD\n        </button>\n\n        <p className=\"table_title\">Responds</p>\n        <div className=\"preview_wrap\">\n          <div className=\"preview_contents\">\n            {this.state.preview_img !== \"undefined\" ? (\n              <div className=\"preview_img\">\n                <img\n                  src={this.state.preview_img}\n                  alt=\"preview of start menu\"\n                ></img>\n              </div>\n            ) : (\n              <div className=\"preview_txt\">{this.state.preview_txt}</div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FAQ_register;\n","import React from 'react';\nimport Axios from 'axios';\nimport Title from './Section_title';\nimport '../css/UserManager.css';\n\nclass UserManager extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            members: []\n        }\n    }\n\n    kickMember(userid) {\n        const result = window.confirm('Are you sure to kick this user?')\n        if (result) {\n            const dataset = {\n                chat_id: window.localStorage.getItem('chat_id'),\n                user_id: userid\n            }\n    \n            Axios.post('https://api.telegram.org/bot847825836:AAFv02ESsTVjnrzIomgdiVjBGWVw7CpN_Cg/kickChatMember', dataset)\n                .then((res) => {\n                    setTimeout(() => {\n                        Axios.post('deleteUser', dataset);\n                        window.location.reload();\n                    }, 2000);\n                })\n        }\n    }\n    \n    restrictMember(event, userid) {\n        const result = window.confirm('Are you sure to ban this user?')\n        if (result) {\n            const dataset = {\n                chat_id: window.localStorage.getItem('chat_id'),\n                user_id: userid,\n                permissions: {\n                    can_send_messages: false,\n                    can_send_media_messages : false,\n                    can_send_polls: false,\n                    can_send_other_messages: false,\n                    can_pin_messages: false,\n                    can_change_info: false\n                },\n                until_date: 300000\n            }\n\n            Axios.post('https://api.telegram.org/bot847825836:AAFv02ESsTVjnrzIomgdiVjBGWVw7CpN_Cg/restrictChatMember', dataset)\n                .then((res) => {\n                    event.currentTarget.style = 'color:red'\n                }).catch((err) => {\n                    alert(err);\n                    return false;\n                })\n        }\n    }\n\n    componentDidMount() {\n        Axios.post('getMemberStatus', {chat_id: window.localStorage.getItem('chat_id')})\n            .then((res) => {\n                let dataset = [];\n\n                for (var data of res.data) {\n                    if (!data.is_bot) {\n                        dataset.push(data);\n                    }\n                }\n\n                this.setState({members: dataset.map((data, index) => \n                    <tr key={index}>\n                        <td>\n                            {data.username}\n                        </td>\n                        <td>\n                            {data.is_admin}\n                        </td>\n                        <td>\n                            {data.act_txt_cnt + data.act_photo_cnt + data.act_url_cnt}\n                        </td>\n                        <td>\n                            <span className=\"icon kick_icon\" onClick={() => this.kickMember(data.id)}></span>\n                        </td>\n                        <td>\n                            <span className=\"icon ban_icon\" onClick={(ev) => this.restrictMember(ev, data.id)}></span>\n                        </td>\n                    </tr> \n                )})\n            }).catch(function(err) {\n                console.log(err);\n            })\n    }\n\n    render() {\n        return (\n            <div className=\"section_usermanager\">\n                <div className=\"module_path\">\n                    <p><span>Modules  /  </span>Users</p>\n                </div>\n                <Title title={\"Manage your customers\"}></Title>\n                <table className=\"usermanager_tb\">\n                    <thead>\n                        <tr>\n                            <th>username</th>\n                            <th width=\"10%\">is_admin</th>\n                            <th width=\"10%\">actions</th>\n                            <th width=\"10%\">kick</th>\n                            <th width=\"10%\">restriction</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.members.length === 0 ? \n                            <tr><td colSpan=\"3\" className=\"empty_item\">No Items</td></tr>\n                            : this.state.members}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nexport default UserManager;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport Axios from 'axios';\n\nclass Module_item extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    \n    changeModules(event) {\n        if (event.currentTarget.checked) {\n            Axios.post('/setStateModule', {chat_id: window.localStorage.getItem('chat_id'), target_id: this.props.list_id, status: 1})\n        } else {\n            Axios.post('/setStateModule', {chat_id: window.localStorage.getItem('chat_id'), target_id: this.props.list_id, status: 0})\n        }\n        \n        return false\n    }\n\n    render() {\n        return (\n            <div className=\"module_item\">\n                <div className=\"module_title\">\n                    <p>{this.props.title}</p>\n                </div>\n                <div className=\"module_content\">\n                    <p>{this.props.content}</p>\n                </div>\n                <Link to={this.props.link}>SETTING</Link>\n                {this.props.isEditable ? \n                    <div className=\"disable_btn_wrap\">\n                        <label className=\"filter_group\" htmlFor={this.props.list_id + '_module'}>\n                            <input\n                            type=\"checkbox\"\n                            className=\"option_item\"\n                            id={this.props.list_id + '_module'}\n                            onChange={(ev) => this.changeModules(ev)}\n                            defaultChecked={this.props.is_active ? true : false}\n                            ></input>\n                            <span className=\"filter_label\"></span>\n                            <span className=\"filter_circle\"></span>\n                        </label>\n                    </div> : ''}\n            </div>\n        )\n    }\n}\n\nexport default Module_item;","import React from 'react';\nimport Module_item from './module_item';\nimport Title from './Section_title';\nimport Axios from 'axios';\nimport '../css/Dashboard.css';\n\nclass Dashboard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            itemlist: []\n        }\n    }\n    \n    getEntireModules(status) {\n        let list = []\n        const all_modules = [{\n            id: 1,\n            title: 'Whitelist',\n            content: 'Auto-delete unauthorized URLS',\n            link: '/whitelist'\n        },{\n            id: 2,\n            title: 'Blacklist',\n            content: 'Auto-delete banned words',\n            link: '/blacklist'\n        },{\n            id: 3,\n            title: 'FAQ',\n            content: 'Set auto-reply messages to frequently asked Questions',\n            link: '/faq'\n        },{\n            id: 4,\n            title: '/start auto-response',\n            content: 'Set an auto-response when user types /start',\n            link: '/startmenu'\n        },{\n            id: 6,\n            title: 'Users',\n            content: 'Manage participated users',\n            link: '/users'\n        },{\n            id: 5,\n            title: 'Logs',\n            content: 'show logs',\n            link: '/logs'\n        }]\n\n        for (const [key, val] of Object.entries(status)) {\n            const target_pos = key.split('_')[1];\n            if (val) {\n                list.push(all_modules[target_pos - 1])\n            }\n        }\n        return list;\n    }\n\n    componentDidMount() {\n        Axios.post('/getStateModule', {chat_id: window.localStorage.getItem('chat_id')})\n            .then((res) => {\n                const status = res.data[0];\n                let modules = this.getEntireModules(status);\n\n                const list = modules.map((item, index) => \n                    <Module_item title={item.title} content={item.content} link={item.link} key={index} isEditable={false}></Module_item>\n                )\n                \n                this.setState({itemlist: list})    \n            })\n        \n    }\n\n    render() {\n        return (\n            <div className=\"section_dashboard\">\n                <Title title=\"Active Modules\"></Title>\n                <div className=\"dashboard_list_wrap\">\n                    {this.state.itemlist}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Dashboard;","import React from 'react';\nimport Module_item from './module_item';\nimport Title from './Section_title';\nimport Axios from 'axios';\nimport '../css/Modules.css';\n\nclass Modules extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            itemlist: []\n        }\n    }\n    \n    getEntireModules(status) {\n        const all_modules = [{\n            id: 1,\n            title: 'Whitelist',\n            content: 'Auto-delete unauthorized URLS',\n            link: '/whitelist'\n        },{\n            id: 2,\n            title: 'Blacklist',\n            content: 'Auto-delete banned words',\n            link: '/blacklist'\n        },{\n            id: 3,\n            title: 'FAQ',\n            content: 'Set auto-reply messages to frequently asked Questions',\n            link: '/faq'\n        },{\n            id: 4,\n            title: '/start auto-response',\n            content: 'Set an auto-response when user types /start',\n            link: '/startmenu'\n        },{\n            id: 5,\n            title: 'Users',\n            content: 'Manage participated users',\n            link: '/users'\n        },{\n            id: 6,\n            title: 'Logs',\n            content: 'show logs',\n            link: '/logs'\n        }]\n\n        for (const [key, val] of Object.entries(status)) {\n            const target_pos = key.split('_')[1];\n            if (val) {\n                all_modules[target_pos - 1]['is_active'] = 1\n            } else {\n                all_modules[target_pos - 1]['is_active'] = 0\n            }\n        }\n        return all_modules;\n    }\n\n    componentDidMount() {\n        Axios.post('/getStateModule', {chat_id: window.localStorage.getItem('chat_id')})\n            .then((res) => {\n                const status = res.data[0];\n                let modules = this.getEntireModules(status);\n\n                const list = modules.map((item, index) => \n                    <Module_item title={item.title} content={item.content} link={item.link} isEditable={true} key={index} list_id={item.id} is_active={item.is_active}></Module_item>\n                )\n                \n                this.setState({itemlist: list})    \n            })\n    }\n\n    render() {\n        return (\n            <div className=\"section_modules\">\n                <Title title=\"Modules\"></Title>\n                <div className=\"modules_list_wrap\">\n                    {this.state.itemlist}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Modules;","import React from \"react\";\nimport Axios from \"axios\";\nimport Title from './Section_title';\nimport \"../css/Settings.css\";\n\nclass Settings extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      options: []\n    };\n  }\n\n  componentDidMount() {\n    Axios.post(\"getOptions\", {\n      chat_id: window.localStorage.getItem(\"chat_id\")\n    }).then(res => {\n      this.setState({ options: res.data[0] });\n    });\n  }\n\n  save_options() {\n    const dataset = {\n      chat_id: window.localStorage.getItem(\"chat_id\"),\n      img_filter: document.querySelector(\"#img_filtering\").checked,\n      block_bot: document.querySelector(\"#block_bot\").checked,\n      order_del: document.querySelector(\"#order_del\").checked\n    };\n    Axios.post(\"setOptions\", dataset).then(function(res) {\n      if (res.status === 200) {\n        alert(\"save all completely\");\n      } else {\n        alert(\"have a some problem to save data\");\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"set_options\">\n        <div className=\"module_path\">\n          <p>\n            Settings\n          </p>\n        </div>\n        <Title title={\"Settings\"}></Title>\n        <label className=\"filter_group\" htmlFor=\"img_filtering\">\n          Face Filtering\n          <input\n            type=\"checkbox\"\n            className=\"option_item\"\n            id=\"img_filtering\"\n            defaultChecked={this.state.options.is_img_filter}\n          ></input>\n          <span className=\"filter_label\"></span>\n        </label>\n        <label className=\"filter_group\" htmlFor=\"block_bot\">\n          Block Bots\n          <input\n            type=\"checkbox\"\n            className=\"option_item\"\n            id=\"block_bot\"\n            defaultChecked={this.state.options.is_block_bot}\n          ></input>\n          <span className=\"filter_label\"></span>\n        </label>\n        <label className=\"filter_group\" htmlFor=\"order_del\">\n          Hide Participation Msg\n          <input\n            type=\"checkbox\"\n            className=\"option_item\"\n            id=\"order_del\"\n            defaultChecked={this.state.options.is_ordering_comeout}\n          ></input>\n          <span className=\"filter_label\"></span>\n        </label>\n        <button className=\"save_btn\" onClick={() => this.save_options()}>\n          SAVE\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Settings;\n","import React, { useState } from \"react\";\nimport { Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\nimport \"./App.css\";\n\nimport RegisterChat from \"./components/Register_chat\";\nimport LeftNav from \"./components/LeftNav\";\nimport Header from './components/Header_main';\n\nimport WordManager from \"./components/WordManager\";\nimport Whitelist from \"./components/Whitelist_URL\";\nimport Log from \"./components/Log\";\nimport Faq from \"./components/FAQ_register\";\nimport Start from \"./components/StartMenu\";\nimport Users from \"./components/UserManager\";\nimport Dashboard from \"./components/Dashboard\";\nimport Modules from './components/Modules';\nimport Settings from './components/Settings';\n\nimport Axios from \"axios\";\nAxios.defaults.baseURL = \"http://localhost:4000/api/\";\n\nfunction App() {\n  const [isValid, setIsValid] = useState(false);\n  const [statusNav, setStatusNav] = useState(\"word\");\n  const [chatInfo, setChatInfo] = useState([]);\n  const isLiving = getCookie(\"living\");\n\n  function getCookie(id) {\n    const cookies = document.cookie.split(\";\");\n    \n    for (var cookie of cookies) {\n      var parse = cookie.split(\"=\");\n      if (parse[0].trim() === id) {\n        return parse[1];\n      }\n    }\n  }\n  \n  if (isLiving || isValid) {\n    return (\n      <Router>\n        <Header></Header>\n        <div className=\"main_container\">\n          <LeftNav setStatus={setStatusNav} statusNav={statusNav} setChatInfo={setChatInfo}></LeftNav>\n          <section className=\"section_content\">\n            <Switch>\n              <Route path=\"/\" exact component={Dashboard}></Route>\n              <Route path=\"/dashboard\" component={Dashboard}></Route>\n              <Route path=\"/modules\" component={Modules}></Route>\n              <Route path=\"/whitelist\" component={Whitelist}></Route>\n              <Route path=\"/blacklist\" component={WordManager}></Route>\n              <Route path=\"/faq\" component={Faq}></Route>\n              <Route path=\"/startmenu\" component={Start}></Route>\n              <Route path=\"/logs\" component={Log}></Route>\n              <Route path=\"/users\" component={Users}></Route>\n              <Route path=\"/settings\" component={Settings}></Route>\n            </Switch>\n          </section>\n          <div className=\"dim\"></div>\n        </div>\n      </Router>\n    );\n  } else {\n    return <RegisterChat setValid={setIsValid}></RegisterChat>;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}