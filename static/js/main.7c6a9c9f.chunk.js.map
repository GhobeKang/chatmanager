{"version":3,"sources":["img/Hand.svg","img/messagebubbles.svg","img/memberprofile.svg","img/spam.svg","img/interaction_line.svg","img/interaction_bubble.svg","img/moderation_line.svg","img/moderation_bubble.svg","img/analytics_line.svg","img/AQOOM_whitelogo.svg","img/Icons/opentelegram_normal.svg","img/Icons/ban_normal.svg","img/Icons/kick_normal.svg","img/Icons/reply_normal.svg","img/Icons/delete_normal.svg","components/Register_chat.js","components/Signin.js","components/Features.js","components/LeftNav.js","components/Header_main.js","components/LandingFooter.js","components/LandingHeader.js","components/Section_title.js","components/Modules/TabMenu.js","components/Modules/MessageContentItem.js","components/Modules/MessageContentContainer.js","components/Pages/Messages.js","components/Pages/MessageLog.js","components/Modules/SearchBox.js","components/Pages/UserManager.js","components/Modules/MessageLog_Modal.js","components/Pages/User.js","components/Modules/Announcement.js","components/Modules/StartMenu.js","components/Modules/AutoResponce.js","components/Pages/Interactions.js","components/Pages/AntiSpam.js","timezone.js","components/Pages/Settings.js","components/WordManager.js","components/Whitelist_URL.js","components/Log.js","components/QnA_List_Component.js","components/FAQ_register.js","components/module_item.js","components/Dashboard.js","components/Modules.js","components/Question_reply.js","components/Questions.js","components/Interests.js","components/Interest_words.js","components/FAQ_stats.js","App.js","serviceWorker.js","index.js","img/grayline.svg","img/AQOOM_logo.png"],"names":["module","exports","RegisterChat","props","className","to","src","INTRO_IMG_HAND","id","FEATURES_IMG_MESSAGES","FEATURES_IMG_PROFILE","FEATURES_IMG_SPAM","React","Component","Signin","t","Axios","post","withCredentials","then","response","status","data","window","localStorage","setItem","JSON","stringify","expire_time","getUTCExpiredTime","document","cookie","location","href","alert","now","Date","expireTime","getTime","setTime","toUTCString","user","this","checkValidation","sessionStorage","AQ_LOGO","dataOnauth","onTelegramAuth","botName","Features","state","list_interaction","list_moderation","list_analytics","GRAY_LINE","INTERACTION_LINE","map","val","idx","key","INTERACTION_BUBBLE","MODERATION_LINE","MODERATION_BUBBLE","ANALYTICS_LINE","LeftNav","default_info","group_list","current_group","current_group_members_cnt","chat_id_list","loop","botId","a","result_arr","chat_id","res","result","photo","get","small_file_id","res_photo","dataset","file_path","title","push","console","log","setState","item","index","data-chatid","onClick","ev","change_group","chat_list","parse","getItem","current_chat_id","getChatInfos","getChatMemCount","getChatGroupInfos","event","currentTarget","chatid","reload","num","isExist","querySelector","classList","remove","add","style","display","addEventListener","draginGrouplist","dragoutGrouplist","activeNav","aria-hidden","focusable","data-prefix","data-icon","role","xmlns","viewBox","fill","d","width","height","transform","data-name","cx","cy","r","Header_main","chat_photo","isOpen","user_id","catch","err","timezone","undefined","removeItem","toggleDropbox","username","color","cursor","logout","getHeaderPhoto","LandingFooter","AQ_LOGO_W","target","LandingHeader","onLogin","setValid","Section_title","changeTab","TabMenu","active_tab","opt1","opt2","opt3","MessageContentItem","img_path","isExpanded","open_modal","modal_content","origin_msg","user_profile_photo","limit","profile_file_id","photos","file_id","content","reply_to_message","message_id","querySelectorAll","forEach","v","userid","isBan","confirm","setTimeout","permissions","can_send_messages","can_send_media_messages","can_send_polls","can_send_other_messages","can_pin_messages","can_change_info","until_date","reply_to_message_id","mid","text","close_modal","ok","value","bind","action","user_name","kickMember","open_reply_modal","msg_id","delete_this_message","entities","type","msg_date","date","movetoMemberProfile","first_name","last_name","getMonth","getDate","getHours","getMinutes","replied_date","image","sticker","validateURL","expand_minipulation","telegram_actions","TELEGRAM_ICON","BEN_ICON","KICK_ICON","REPLY_ICON","DELETE_ICON","onChange","updateContent","placeholder","data-mid","send_reply_message","MessageContentContainer","contents","messages","msg","is_allMessages","message","video","audio","message_json","length","Segment_Tabs","tab","questions","mentions","Messages","current_pg_question","current_pg_mention","current_pg","isbusy","onScroll","append_messages","get_messages","get_questions","get_mentions","removeEventListener","page","concat","scrollY","innerHeight","body","clientHeight","getCurrentScrollPercentage","set_activeTab","MessageLog","history","go","split","member_id","extract_query","back","SearchBox","method","name","searchMember","UserManager","members","search_query","query","updateMemberList","is_bot","is_interested","pathname","search","warning_pt","act_txt_cnt","act_photo_cnt","act_url_cnt","updated_at","restrictMember","colSpan","MessageLogModal","useState","messageLog","setMessageLog","message_log","message_log_open","closeModal","User","user_profile_data","profile_pic","active_hours","top_active","setValue","avg_msg_perDay","Math","floor","act_media","cal_participate_date","created_at","standard","i","joined_date","join","diff","today","label_arr","toString","slice","is_matched","date_cnt","message_crt","getElementById","Chart","labels","datasets","borderColor","borderWidth","lineTension","options","legend","responsive","scales","yAxes","ticks","stepSize","beginAtZero","gridLines","lineWidth","time_24hr","time_active_hour","time","cal_active_hours","active_crt","backgroundColor","ctx","act_questions","position","layout","padding","top","bottom","left","right","resize","res_member","res_chatmember","total_count","res_file","makeChartType","makeChartMessage","makeChartActiveHour","total_msg","backtoManage","interestMember","openTelegram","cal_participate_week","toggleMessageLogModal","SelectboxDay","day","setDay","setIsOpen","list","multiple","el","findIndex","element","shift","pop","sep_left","sep_right","decide_inout","substr","SelectboxDate","setDate","getFormattedDate","yy","getFullYear","mm","dd","onDayClick","toggleDatePicker","SelectboxHour","setOpen","selected_hour","setHour","hourlist","hour","background_listner","SelectboxMin","minlist","min","SettingTime","Announcement","current_item","opened_selectbox","message_type","uploadImage","isOpen_btn_modal","message_btns","origin_messages","onEditing","editId","nextSibling","toggle","forms","inline_text","url","inline_url","btns","merge_left","merge_right","deleteInlineBtn","btn","toggleManipulationBtns","editInlineBtn","file","files","size","makePreview","fr","FileReader","onload","e","img_el","createElement","setAttribute","target_el","firstChild","removeChild","appendChild","readAsDataURL","pre_msg","buttons","parseInt","schedule_type","announce_txt","ann_id","schedule_id","getAnnouncement","selected_date","selected_month","selected_monthofday","announce_type","announceType","selectedHour","selected_min","selectedMin","selectedDate","selected_weekofday","selectedDay","month","monthofday","weekofday","content_type","content_img","changeActiveAnnounce","verifyExpire","deleteAnnounce","cur_time","comparison_time","setMonth","schedule_month","schedule_dayofmonth","setHours","schedule_hour","setMinutes","schedule_min","toggleSelectbox","change_item","uploadedImage","toggleAddBtnModal","getInlineBtns","sendTestMsg","registerAnnounceMsg","autoComplete","setInlineBtns","FAQ_register","imageType","crr_message","removeImagePreview","form_data","FormData","append","welcome_txt","getStartMenu","clearTexts","img","targetid","blob","Blob","reader","response_type","content_txt","editSelectedWelcome","deleteSelectdWelcome","welcome_msg","submit_startmenu","AutoResponce","keyword_type","faq_txt","faq_response","keywords","faq_content","changeActiveFAQ","getFaqList","editSelectedFAQ","deleteSelectedFAQ","defaultChecked","registerFAQMsg","Interactions","FieldRow","fieldName","getFieldName","htmlFor","field","isActive","AntiSpam","anti_options","blacklist","getWordData","getWhitelistURL","word","whitelisturl","checkIfPattern","pattern","regx_test","regx","test","word_name","deleteBlacklist","whitelistURL","url_pattern","deleteWhitelistURL","anti_image","anti_url","anti_forward","anti_voice","anti_gif","anti_sticker","anti_join_message","anti_left_message","anti_longname","anti_flood","submit_blacklist","submit_whitelisturl","Settings","tz_cur","isOpenModal","tz_lists","cur_pos","isSuccess","tz","data-tzid","handle_tz","tz_pos","offset","utc","toggleTZPicker","setTimezone","WordManager","wordlist","is_active","created_time","deleteWord","changeStateWordlist","changeValues","onKeyUp","which","Whitelist_URL","whitelist","getWhitelist","listup","created_date","deleteWhitelist","changeStateWhitelist","submit_whitelist","Log","loglist","getContent","del_date","render_resend_icon","photo_base64","img_sr","alt","msg_from","parse_mode","restoreMsg","QnA_List_Component","isEditable","isImage","question","changeQuestion","changeResponse","toggleRespType","faq_response_img","confirmEdit","changeToEdit","deleteFaqList","faqlist","submit_faqlist","Module_item","checked","target_id","list_id","link","changeModules","Dashboard","itemlist","all_modules","Object","entries","target_pos","getEntireModules","Modules","is_editable","Question_reply","modal","getModalClass","convertDateFormat","Questions","toDateString","toTimeString","Interests","interests","interest_member","serve_interests","active_popup","changeContentbox","registered_time","onclick","closeContentbox","Interest_words","word_id","FAQ_stats","faq_stats","helpful","notenough","wrong_answer","defaults","baseURL","App","isValid","setIsValid","statusNav","setStatusNav","setChatInfo","isLiving","getCookie","inConsole","cookies","trim","basename","setStatus","path","exact","render","Boolean","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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CA,YAGJ,CACE,MAAS,iCACT,KAAQ,MACR,QAAW,EACX,OAAS,EACT,KAAQ,kDACR,IAAO,CACL,yBACA,iBACA,iBACA,sBACA,sBAGJ,CACE,MAAS,+BACT,KAAQ,OACR,QAAW,EACX,OAAS,EACT,KAAQ,2BACR,IAAO,CACL,iBACA,0BAGJ,CACE,MAAS,2BACT,KAAQ,OACR,QAAW,EACX,OAAS,EACT,KAAQ,kCACR,IAAO,CACL,iBACA,iBACA,wBACA,mBACA,oBACA,kBACA,eACA,iBACA,qBACA,cAGJ,CACE,MAAS,wBACT,KAAQ,MACR,QAAW,EACX,OAAS,EACT,KAAQ,yCACR,IAAO,CACL,kBACA,iBACA,6BACA,4BACA,0BACA,kBACA,8BACA,qBACA,mBACA,iBACA,mBACA,kBACA,sBACA,yBACA,sBACA,kBACA,YAGJ,CACE,MAAS,2BACT,KAAQ,OACR,QAAW,EACX,OAAS,EACT,KAAQ,6BACR,IAAO,CACL,0BACA,wBACA,yBAGJ,CACE,MAAS,0BACT,KAAQ,MACR,QAAW,IACX,OAAS,EACT,KAAQ,sBACR,IAAO,CACL,oBAGJ,CACE,MAAS,yBACT,KAAQ,MACR,QAAW,EACX,OAAS,EACT,KAAQ,uBACR,IAAO,CACL,qBAGJ,CACE,MAAS,yBACT,KAAQ,MACR,QAAW,EACX,OAAS,EACT,KAAQ,qCACR,IAAO,CACL,oBACA,oBACA,kBACA,kBACA,gBACA,qBAGJ,CACE,MAAS,kCACT,KAAQ,OACR,QAAW,EACX,OAAS,EACT,KAAQ,qBACR,IAAO,CACL,uBACA,mBAGJ,CACE,MAAS,2BACT,KAAQ,OACR,QAAW,EACX,OAAS,EACT,KAAQ,mDACR,IAAO,CACL,mBACA,kBACA,gBACA,mBACA,uBACA,oBACA,kBACA,mBACA,qBACA,kBACA,qBACA,iBACA,qBACA,iBACA,wBACA,iBACA,kBACA,qBACA,qBACA,wBACA,sBACA,sBACA,wBACA,wBACA,mBACA,mBACA,oBACA,qBACA,kBACA,cAGJ,CACE,MAAS,2BACT,KAAQ,OACR,QAAW,EACX,OAAS,EACT,KAAQ,uBACR,IAAO,CACL,mBACA,sBAGJ,CACE,MAAS,6BACT,KAAQ,MACR,QAAW,IACX,OAAS,EACT,KAAQ,2BACR,IAAO,CACL,qBAGJ,CACE,MAAS,iCACT,KAAQ,QACR,QAAW,EACX,OAAS,EACT,KAAQ,uBACR,IAAO,CACL,sBAGJ,CACE,MAAS,0BACT,KAAQ,MACR,QAAW,EACX,OAAS,EACT,KAAQ,2BACR,IAAO,CACL,6BACA,iCACA,0BACA,6BACA,6BACA,4BACA,4BACA,uBACA,oBACA,kBACA,gBACA,oBAGJ,CACE,MAAS,2BACT,KAAQ,OACR,QAAW,EACX,OAAS,EACT,KAAQ,iCACR,IAAO,CACL,oBACA,gBACA,kBACA,oBACA,iBACA,qBACA,iBACA,mBACA,qBACA,mBACA,cAGJ,CACE,MAAS,0BACT,KAAQ,MACR,QAAW,EACX,OAAS,EACT,KAAQ,wBACR,IAAO,CACL,oBAGJ,CACE,MAAS,2BACT,KAAQ,MACR,QAAW,EACX,OAAS,EACT,KAAQ,yBACR,IAAO,CACL,uBAGJ,CACE,MAAS,sBACT,KAAQ,MACR,QAAW,EACX,OAAS,EACT,KAAQ,uBACR,IAAO,CACL,kBAGJ,CACE,MAAS,SACT,KAAQ,IACR,QAAW,EACX,OAAS,EACT,KAAQ,4CACR,IAAO,CACL,kBACA,yBACA,cAGJ,CACE,MAAS,6BACT,KAAQ,MACR,QAAW,EACX,OAAS,EACT,KAAQ,iCACR,IAAO,IAET,CACE,MAAS,uBACT,KAAQ,MACR,OAAU,EACV,OAAS,EACT,KAAQ,qBACR,IAAO,CACL,uBACA,oBAGJ,CACE,MAAS,2BACT,KAAQ,OACR,QAAW,EACX,OAAS,EACT,KAAQ,6BACR,IAAO,CACL,sBACA,cAGJ,CACE,MAAS,wBACT,KAAQ,MACR,OAAU,EACV,OAAS,EACT,KAAQ,mBACR,IAAO,CACL,oBACA,oBAGJ,CACE,MAAS,MACT,KAAQ,MACR,OAAU,EACV,OAAS,EACT,KAAQ,mCACR,IAAO,CACL,uBACA,YAGJ,CACE,MAAS,oBACT,KAAQ,MACR,OAAU,EACV,OAAS,EACT,KAAQ,0BACR,IAAO,CACL,qBACA,kBACA,gBACA,kBAGJ,CACE,MAAS,sBACT,KAAQ,MACR,OAAU,EACV,OAAS,EACT,KAAQ,gCACR,IAAO,CACL,qBACA,kBACA,gBACA,kBAGJ,CACE,MAAS,oBACT,KAAQ,MACR,OAAU,EACV,OAAS,EACT,KAAQ,uBACR,IAAO,CACL,kBACA,kBACA,mBACA,gBACA,kBAGJ,CACE,MAAS,0BACT,KAAQ,MACR,OAAU,EACV,OAAS,EACT,KAAQ,4BACR,IAAO,CACL,iBACA,eACA,gBACA,gBACA,gBACA,iBACA,eACA,kBACA,cACA,kBACA,oBACA,qBACA,kBACA,qBACA,uBAGJ,CACE,MAAS,0BACT,KAAQ,OACR,OAAU,EACV,OAAS,EACT,KAAQ,+DACR,IAAO,CACL,sBACA,mBACA,iBACA,gBACA,kBACA,mBACA,oBACA,eACA,gBACA,cACA,cACA,oBACA,mBACA,eACA,iBACA,gBACA,kBAGJ,CACE,MAAS,+BACT,KAAQ,OACR,OAAU,EACV,OAAS,EACT,KAAQ,gEACR,IAAO,CACL,kBACA,oBACA,kBACA,mBACA,mBACA,gBACA,kBAGJ,CACE,MAAS,wBACT,KAAQ,MACR,OAAU,EACV,OAAS,EACT,KAAQ,kDACR,IAAO,CACL,eACA,kBACA,oBACA,gBACA,iBAGJ,CACE,MAAS,iCACT,KAAQ,OACR,OAAU,EACV,OAAS,EACT,KAAQ,+CACR,IAAO,CACL,kBACA,gBACA,gBACA,kBAGJ,CACE,MAAS,kCACT,KAAQ,QACR,OAAU,EACV,OAAS,EACT,KAAQ,kCACR,IAAO,CACL,iBACA,gBACA,qBACA,gBACA,kBACA,eACA,oBACA,gBACA,gBACA,kBACA,gBACA,oBACA,eACA,cAGJ,CACE,MAAS,wBACT,KAAQ,MACR,OAAU,EACV,OAAS,EACT,KAAQ,uBACR,IAAO,CACL,oBAGJ,CACE,MAAS,oBACT,KAAQ,MACR,OAAU,EACV,OAAS,EACT,KAAQ,gCACR,IAAO,CACL,eACA,gBACA,mBACA,oBAGJ,CACE,MAAS,4BACT,KAAQ,OACR,OAAU,EACV,OAAS,EACT,KAAQ,qBACR,IAAO,CACL,gBAGJ,CACE,MAA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","file":"static/js/main.7c6a9c9f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Hand.33162f95.svg\";","module.exports = __webpack_public_path__ + \"static/media/messagebubbles.9979cc47.svg\";","module.exports = __webpack_public_path__ + \"static/media/memberprofile.415e9544.svg\";","module.exports = __webpack_public_path__ + \"static/media/spam.4b517870.svg\";","module.exports = __webpack_public_path__ + \"static/media/interaction_line.c66dd7ac.svg\";","module.exports = __webpack_public_path__ + \"static/media/interaction_bubble.ca20be28.svg\";","module.exports = __webpack_public_path__ + \"static/media/moderation_line.a1f4329f.svg\";","module.exports = __webpack_public_path__ + \"static/media/moderation_bubble.adbedcb9.svg\";","module.exports = __webpack_public_path__ + \"static/media/analytics_line.e258e440.svg\";","module.exports = __webpack_public_path__ + \"static/media/AQOOM_whitelogo.311ee2ce.svg\";","module.exports = __webpack_public_path__ + \"static/media/opentelegram_normal.f92e1346.svg\";","module.exports = __webpack_public_path__ + \"static/media/ban_normal.2beb9e58.svg\";","module.exports = __webpack_public_path__ + \"static/media/kick_normal.8177ec3b.svg\";","module.exports = __webpack_public_path__ + \"static/media/reply_normal.2c1c3f0c.svg\";","module.exports = __webpack_public_path__ + \"static/media/delete_normal.a4773144.svg\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport INTRO_IMG_HAND from \"../img/Hand.svg\";\nimport FEATURES_IMG_MESSAGES from \"../img/messagebubbles.svg\";\nimport FEATURES_IMG_PROFILE from \"../img/memberprofile.svg\";\nimport FEATURES_IMG_SPAM from \"../img/spam.svg\";\nimport \"../style/css/Register_chat.min.css\";\n\nclass RegisterChat extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"app_container\">\n        <div className=\"main_contents\">\n          <section className=\"main_intro\">\n            <div className=\"intro_desc\">\n              <h2>managing Telegram groups made easier</h2>\n              <p>\n              Creating solutions for Community Managers to have an easy and deep interaction with users while obtaining the right data that can help further grow your community.\n              </p>\n              <Link to=\"/signin\">Try AQOOM</Link>\n            </div>\n            <div className=\"intro_img\">\n              <img src={INTRO_IMG_HAND}></img>\n            </div>\n          </section>\n          <section className=\"main_features\" id=\"main_features\">\n            <div className=\"features_item\">\n              <div className=\"feature_img\">\n                <img src={FEATURES_IMG_MESSAGES}></img>\n              </div>\n              <div className=\"feature_desc\">\n                <h2>\n                  listen <br />& interact\n                </h2>\n                <p>\n                  With an all-in-one interface, you know you can listen and\n                  interact with your users effectively. There’s a dedicated\n                  space for questions and messages directed for admins, so\n                  you’ll never miss an opportunity to reply and interact.\n                </p>\n              </div>\n            </div>\n            <div className=\"features_item\">\n              <div className=\"feature_desc\">\n                <h2>growth and user focused</h2>\n                <p>\n                  All the information you know you need to know about your\n                  community and users are all included. With these data, you can\n                  strategize, plan ahead for your future events and promotions.\n                </p>\n              </div>\n              <div className=\"feature_img\">\n                <img src={FEATURES_IMG_PROFILE}></img>\n              </div>\n            </div>\n            <div className=\"features_item\">\n              <div className=\"feature_img\">\n                <img src={FEATURES_IMG_SPAM}></img>\n              </div>\n              <div className=\"feature_desc\">\n                <h2>\n                  protecting <br />\n                  your community\n                </h2>\n                <p>\n                We are sure that your community will be protected in any form of spam. With basic to advanced filters, you have full control over your community. These can protect and improve your brand image.\n                </p>\n              </div>\n            </div>\n          </section>\n          <section className=\"main_footer\">\n            <div className=\"footer_desc\">\n              <p>\n                Start and grow your community with ease! <br /> Manage it like\n                never before.\n              </p>\n            </div>\n            <Link to=\"/signin\">Try AQOOM</Link>\n          </section>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default RegisterChat;\n","import React from \"react\";\nimport Axios from \"axios\";\nimport AQ_LOGO from \"../img/AQOOM_logo.png\";\nimport TelegramLoginButton from \"react-telegram-login\";\nimport \"../style/css/Signin.min.css\";\n\nclass Signin extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  checkValidation(t) {\n    Axios.post(\n      \"checkValidation\",\n      {\n        id: t\n      },\n      {\n        withCredentials: true\n      }\n    ).then(response => {\n      if (response.status === 200) {\n        if (response.data !== false) {\n          window.localStorage.setItem(\n            \"chat_id_list\",\n            JSON.stringify(response.data.id)\n          );\n          window.localStorage.setItem(\"chat_id\", response.data.id[0]);\n          const expire_time = this.getUTCExpiredTime();\n          document.cookie = \"living=true; expires=\" + expire_time;\n          window.location.href = '/';\n        } else {\n          alert(\n            \"it's not valid input. check again if chat Room's name or activation code is valid.\"\n          );\n        }\n      }\n    });\n  }\n\n  getUTCExpiredTime() {\n    var now = new Date();\n    var time = now.getTime();\n    var expireTime = time + 2 * 3600000;\n    now.setTime(expireTime);\n\n    return now.toUTCString();\n  }\n\n  onTelegramAuth(user) {\n    this.checkValidation(user.id);\n    window.sessionStorage.setItem('tel_id', user.id);\n  }\n\n  render() {\n    return (\n      <div className=\"signin_container\">\n        <div className=\"aqoom_logo\">\n          <img src={AQ_LOGO}></img>\n        </div>\n        <div className=\"login_box\">\n          <p className=\"login_info\">\n            Please login with your Telegram <br />\n            to proceed to your dashboard.\n          </p>\n          <TelegramLoginButton\n            dataOnauth={user => this.onTelegramAuth(user)}\n            botName={this.props.botName}\n          />\n          <p className=\"login_help\">\n            AQOOM uses Telegram Secure ID to provide seamless automation of\n            group management services. To learn more about Telegram Login works\n            for websites, click <a href=\"https://telegram.org/blog/login\">here</a>. <br/><br/> Having trouble logging in? Contact us at \n            <a href=\"mailto:info@aqoom.com\"> info@aqoom.com</a>\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Signin;\n","import React from \"react\";\nimport \"../style/css/Features.min.css\";\nimport GRAY_LINE from \"../img/grayline.svg\";\nimport INTERACTION_LINE from \"../img/interaction_line.svg\";\nimport INTERACTION_BUBBLE from \"../img/interaction_bubble.svg\";\nimport MODERATION_LINE from \"../img/moderation_line.svg\";\nimport MODERATION_BUBBLE from \"../img/moderation_bubble.svg\";\nimport ANALYTICS_LINE from \"../img/analytics_line.svg\";\n\nclass Features extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      list_interaction: [\n        \"Collected Questions\",\n        \"Messages Directed to Admins\",\n        \"Scheduled Announcemnets\",\n        \"Welcome Messages\"\n      ],\n      list_moderation: [\n        \"Anti-Spam\",\n        \"Filters\",\n        \"Warning Points System\",\n        \"Activity Notification\"\n      ],\n      list_analytics: [\n        \"Scheduled Reports\",\n        \"User data insights\",\n        \"Community Reports\",\n        \"Bot performance\"\n      ]\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"features_container\">\n        <section className=\"features_intro\">\n          <h2 className=\"session_title\">just the right features.</h2>\n          <p className=\"session_desc\">\n            We collected all the features that you need for your growing\n            Telegram community. These features can help you have the right tools\n            managing and moderating your groups.\n          </p>\n          <a href=\"#/signin\">Try AQOOM</a>\n        </section>\n\n        <section className=\"features_interaction\">\n          <img src={GRAY_LINE}></img>\n          <img src={INTERACTION_LINE}></img>\n          <h2 className=\"session_title\">interaction</h2>\n          <ul>\n            {this.state.list_interaction.map((val, idx) => {\n              return (\n                <li key={idx}>\n                  <div className=\"check_icon\"></div>\n                  <p>{val}</p>\n                </li>\n              );\n            })}\n          </ul>\n          <p className=\"session_desc\">\n            Interacting with your users has never been this easy. With an\n            all-in-one interface where you can directly reply to questions,\n            answer queries, or just reply to different kind of messages, you’ll\n            never miss an opportunity to indulge in to a conversation. You can\n            also directly ban, kick, or delete a message in the same message\n            log. You can also set different announcements for different times.\n          </p>\n          <img src={INTERACTION_BUBBLE}></img>\n        </section>\n        <section className=\"features_moderation\">\n          <img src={GRAY_LINE}></img>\n          <img src={MODERATION_LINE}></img>\n          <h2 className=\"session_title\">moderation</h2>\n          <ul>\n            {this.state.list_moderation.map((val, idx) => {\n              return (\n                <li key={idx}>\n                  <div className=\"check_icon\"></div>\n                  <p>{val}</p>\n                </li>\n              );\n            })}\n          </ul>\n          <p className=\"session_desc\">\n            From basic to advanced filters, you know that there’s no message\n            that is going to be out of control. You have full control over on\n            what are allowed and restricted in your chat group. And with the\n            Warning Points System, you have an option to send warnings, ban, or\n            kick a member who accumulated a certain amount of points. And even\n            if you have not turned on a filter, you’ll be notified on what is on\n            and what you could be changed.\n          </p>\n          <img src={MODERATION_BUBBLE}></img>\n        </section>\n        <section className=\"features_analytics\">\n          <img src={GRAY_LINE}></img>\n          <img src={ANALYTICS_LINE}></img>\n          <h2 className=\"session_title\">data & analytics</h2>\n          <ul>\n            {this.state.list_analytics.map((val, idx) => {\n              return (\n                <li key={idx}>\n                  <div className=\"check_icon\"></div>\n                  <p>{val}</p>\n                </li>\n              );\n            })}\n          </ul>\n          <p className=\"session_desc\">\n            We provide the right data for your Community Managers to gain\n            insights about your users to strategize and formulate your new next\n            event or promotion! You can also receive reports whenever you want\n            it, no reminders needed! In addition to that you’ll know how much is\n            your bot performing in your Telegram groups. So you’ll know if you\n            need to be more lenient or if you just have just the right\n            restrictions.\n          </p>\n        </section>\n        <img src={GRAY_LINE}></img>\n        <h4 className=\"foot_desc\">\n        Just the right amount of features that fits your needs.\n        </h4>\n        <a href=\"#/signin\">Try AQOOM</a>\n      </div>\n    );\n  }\n}\n\nexport default Features;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Axios from \"axios\";\nimport \"../style/css/LeftNav.min.css\";\n\nclass LeftNav extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      default_info: [],\n      group_list: [],\n      current_group: [],\n      current_group_members_cnt: 0\n    };\n  }\n  async getChatGroupInfos(chat_id_list) {\n    \n\n    const loop = async function(botId) {\n      let result_arr = [];\n\n      for (var chat_id of chat_id_list) {\n        try {\n          const res = await Axios.post(`https://api.telegram.org/bot${botId}/getChat`, {\n          chat_id: chat_id\n        })\n          if (res.data.result.photo) {\n            const res_photo = await Axios.get(`https://api.telegram.org/bot${botId}/getFile?file_id=` + res.data.result.photo.small_file_id)\n              const dataset = {\n                id: res.data.result.id,\n                photo: res_photo.data.result.file_path,\n                title: res.data.result.title\n              };\n              \n              result_arr.push(dataset)\n            \n          } else {\n            const dataset = {\n              id: res.data.result.id,\n              photo: '',\n              title: res.data.result.title\n            };\n\n            result_arr.push(dataset)\n          }\n        } catch (err) {\n          console.log(err);\n        }\n        \n      }\n      return result_arr;\n    }\n  \n    \n    const result = await loop(this.props.botId)\n  \n    this.setState({\n      group_list: result.map((item, index) => {\n        return (\n          <div\n            className=\"group_list\"\n            key={index}\n            data-chatid={item.id}\n            onClick={ev => this.change_group(ev)}\n          >\n            <div className=\"group_img\">\n              {item.photo ?\n            <img src={`https://api.telegram.org/file/bot${this.props.botId}/${item.photo}`}></img>\n            :\n            null  \n            }\n              \n            </div>\n            <div className=\"group_title\">\n              <p>{item.title}</p>\n            </div>\n          </div>\n        );\n      })\n    });\n  }\n\n  getChatInfos(chat_id) {\n    if (chat_id) {\n      return Axios.post(`https://api.telegram.org/bot${this.props.botId}/getChat`, {\n        chat_id: chat_id\n      }).then(res => {\n        if (res.data.result.photo) {\n          Axios.get(\n            `https://api.telegram.org/bot${this.props.botId}/getFile?file_id=` +\n              res.data.result.photo.small_file_id\n          ).then(res_photo => {\n            const dataset = {\n              id: res.data.result.id,\n              photo: res_photo.data.result.file_path,\n              title: res.data.result.title\n            };\n           \n            this.setState({current_group: dataset});\n           \n          });\n        } else {\n          const dataset = {\n            id: res.data.result.id,\n            photo: \"\",\n            title: res.data.result.title\n          };\n\n          this.setState({current_group: dataset});          \n        }\n      });\n    }\n  }\n  getChatMemCount(chat_id) {\n    return Axios.post(`https://api.telegram.org/bot${this.props.botId}/getChatMembersCount`, {\n      chat_id: chat_id\n    }).then((res) => {\n      this.setState({current_group_members_cnt: res.data.result})\n    })\n  }\n  componentWillMount() {\n    const chat_list = JSON.parse(window.localStorage.getItem(\"chat_id_list\"));\n    const current_chat_id = window.localStorage.getItem(\"chat_id\");\n\n    if (current_chat_id) {\n      this.getChatInfos(current_chat_id);\n      this.getChatMemCount(current_chat_id);\n    }\n\n    this.getChatGroupInfos(chat_list);\n  \n  }\n\n  change_group(event) {\n    window.localStorage.setItem(\"chat_id\", event.currentTarget.dataset.chatid);\n    window.location.reload();\n  }\n\n  activeNav(num) {\n    const isExist = document.querySelector(\".nav_contents > a.active\");\n    if (isExist) {\n      isExist.classList.remove(\"active\");\n    }\n    document\n      .querySelector(`.nav_contents > a:nth-child(${num})`)\n      .classList.add(\"active\");\n    return false;\n  }\n\n  dragoutGrouplist () {\n    document.querySelector('.nav_groups').classList.add('active');\n    document.querySelector('.dim').style.display = 'block';\n    document.querySelector('.dim').addEventListener('click', this.draginGrouplist)\n  }\n\n  draginGrouplist () {\n    document.querySelector('.nav_groups').classList.remove('active');\n    document.querySelector('.dim').style.display = 'none';\n  }\n\n  render() {\n    return (\n      <section className=\"left_nav\">\n        <div className=\"current_group\" onClick={() => this.dragoutGrouplist()}>\n          <div className=\"group_img\">\n            {\n              this.state.current_group.photo\n              ?\n              <img src={`https://api.telegram.org/file/bot${this.props.botId}/${this.state.current_group.photo}`}></img>\n              :\n              null\n            }\n            \n          </div>\n          <div className=\"group_title\">\n            <p>{this.state.current_group.title}</p>\n            <p>\n              {this.state.current_group_members_cnt} members\n            </p>\n          </div>\n          <div className=\"arrow_down_icon\"></div>\n        </div>\n        <div className=\"nav_groups\">{this.state.group_list}</div>\n        <div className=\"nav_contents\">\n          <Link to=\"/members\" onClick={ev => this.activeNav(1)}>\n            <i className=\"icon icon-members\">\n            <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"user-friends\" className=\"svg-inline--fa fa-user-friends fa-w-20\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 640 512\"><path fill=\"currentColor\" d=\"M192 256c61.9 0 112-50.1 112-112S253.9 32 192 32 80 82.1 80 144s50.1 112 112 112zm76.8 32h-8.3c-20.8 10-43.9 16-68.5 16s-47.6-6-68.5-16h-8.3C51.6 288 0 339.6 0 403.2V432c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48v-28.8c0-63.6-51.6-115.2-115.2-115.2zM480 256c53 0 96-43 96-96s-43-96-96-96-96 43-96 96 43 96 96 96zm48 32h-3.8c-13.9 4.8-28.6 8-44.2 8s-30.3-3.2-44.2-8H432c-20.4 0-39.2 5.9-55.7 15.4 24.4 26.3 39.7 61.2 39.7 99.8v38.4c0 2.2-.5 4.3-.6 6.4H592c26.5 0 48-21.5 48-48 0-61.9-50.1-112-112-112z\"></path></svg>  \n            </i> Members\n          </Link>\n          <Link to=\"/messages\" onClick={ev => this.activeNav(2)}>\n            <i className=\"icon icon-messages\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n              <path id=\"ic_question_answer_24px\" d=\"M17.2,5.2H15.6v7.2H5.2V14a.8.8,0,0,0,.8.8h8.8L18,18V6A.8.8,0,0,0,17.2,5.2ZM14,10V2.8a.8.8,0,0,0-.8-.8H2.8a.8.8,0,0,0-.8.8V14l3.2-3.2h8A.8.8,0,0,0,14,10Z\" transform=\"translate(-2 -2)\" fill=\"currentColor\"/>\n            </svg>\n            </i> Messages\n          </Link>\n          <Link to=\"/interactions\" onClick={ev => this.activeNav(3)}>\n            <i className=\"icon icon-messages\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"13.819\" viewBox=\"0 0 16 13.819\">\n              <g id=\"ic_record_voice_over_24px\" transform=\"translate(-1 -2)\">\n                <circle id=\"Ellipse_3\" data-name=\"Ellipse 3\" cx=\"3\" cy=\"3\" r=\"3\" transform=\"translate(3.996 4)\" fill=\"currentColor\"/>\n                <path id=\"Path_3\" data-name=\"Path 3\" d=\"M6.819,11.455C4.877,11.455,1,12.43,1,14.364v1.455H12.637V14.364C12.637,12.43,8.76,11.455,6.819,11.455Zm5.644-7.011L11.241,5.673a2.413,2.413,0,0,1,0,2.829l1.222,1.229a3.722,3.722,0,0,0,0-5.288ZM14.87,2,13.684,3.186a5.8,5.8,0,0,1,0,7.811l1.186,1.186A7.149,7.149,0,0,0,14.87,2Z\" fill=\"currentColor\"/>\n              </g>\n            </svg>\n            </i> Interactions\n          </Link>\n          <Link to=\"/antispam\" onClick={ev => this.activeNav(4)}>\n            <i className=\"icon icon-messages\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n              <path id=\"ic_feedback_24px\" d=\"M16.4,2H3.6A1.6,1.6,0,0,0,2.008,3.6L2,18l3.2-3.2H16.4A1.6,1.6,0,0,0,18,13.2V3.6A1.6,1.6,0,0,0,16.4,2Zm-5.6,9.6H9.2V10h1.6Zm0-3.2H9.2V5.2h1.6Z\" transform=\"translate(-2 -2)\" fill=\"currentColor\"/>\n            </svg>\n            </i> Anti-Spam\n          </Link>\n          <Link to=\"/settings\" onClick={ev => this.activeNav(5)}>\n            <i className=\"icon icon-messages\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16.449\" viewBox=\"0 0 16 16.449\">\n              <path id=\"ic_settings_24px\" d=\"M16.383,11.03a6.409,6.409,0,0,0,.058-.806,6.41,6.41,0,0,0-.058-.806l1.735-1.357a.415.415,0,0,0,.1-.526L16.572,4.689a.413.413,0,0,0-.5-.181l-2.048.822a6.009,6.009,0,0,0-1.39-.806L12.32,2.345a.4.4,0,0,0-.4-.345H8.628a.4.4,0,0,0-.4.345L7.912,4.525a6.319,6.319,0,0,0-1.39.806L4.474,4.508a.4.4,0,0,0-.5.181L2.328,7.535a.405.405,0,0,0,.1.526L4.162,9.418a6.522,6.522,0,0,0-.058.806,6.522,6.522,0,0,0,.058.806L2.426,12.387a.415.415,0,0,0-.1.526l1.645,2.846a.413.413,0,0,0,.5.181l2.048-.822a6.009,6.009,0,0,0,1.39.806L8.225,18.1a.4.4,0,0,0,.4.345h3.29a.4.4,0,0,0,.4-.345l.313-2.179a6.319,6.319,0,0,0,1.39-.806l2.048.822a.4.4,0,0,0,.5-.181l1.645-2.846a.415.415,0,0,0-.1-.526ZM10.272,13.1a2.879,2.879,0,1,1,2.879-2.879A2.882,2.882,0,0,1,10.272,13.1Z\" transform=\"translate(-2.271 -2)\" fill=\"currentColor\"/>\n            </svg>\n            </i> Settings\n          </Link>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default LeftNav;\n","import React from 'react';\nimport Axios from 'axios';\n\nclass Header_main extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            default_info: [],\n            chat_photo: [],\n            isOpen: false\n        }\n    }\n\n    componentDidMount() {\n        const chat_id = window.localStorage.getItem('chat_id');\n        const user_id = window.sessionStorage.getItem('tel_id');\n        Axios.post(`https://api.telegram.org/bot${this.props.botId}/getChatMember`, {chat_id: chat_id, user_id: user_id})\n            .then((res) => {\n                this.setState({default_info: res.data.result.user})\n                if (res.data.result.photo) {\n                    Axios.get(`https://api.telegram.org/bot${this.props.botId}/getFile?file_id=`+res.data.result.photo.small_file_id)\n                    .then((res_photo) => {\n                        this.setState({chat_photo: res_photo.data.result})\n                    })\n                }\n            })\n            .catch((err) => {\n                alert('cannot find a user');\n                return false;\n            })\n\n        Axios.post('/getTimezone', {\n            chat_id: chat_id\n        }).then(res => {\n            if (res.data) {\n                window.localStorage.setItem('tz_set', res.data.timezone)\n            } \n        })\n    }\n    \n    getHeaderPhoto() {\n        if (this.state.chat_photo.file_path !== undefined) {\n            return (\n                <img src={`https://api.telegram.org/file/bot${this.props.botId}/` + this.state.chat_photo.file_path}></img>\n            )\n        } else {\n            return ''\n        }\n    }\n\n    toggleDropbox() {\n        if (this.state.isOpen) {\n            this.setState({isOpen: false})\n        } else {\n            this.setState({isOpen: true})\n        }\n    }\n\n    logout() {\n        // 스토리지 chat_id, cookie living delete\n        window.localStorage.removeItem('chat_id')\n        document.cookie = \"living=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\n        document.cookie = \"STAY_C=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\n        window.location.href = '/';\n    }\n\n    render() {\n        return (\n            <div className=\"section_header\">\n                <div className=\"header_logo\">\n                    \n                </div>\n                <div className=\"header_infos\">\n                    <div className=\"header_name\" onClick={() => this.toggleDropbox()}>\n                        <span>{this.state.default_info.username}</span>\n                        <span className=\"icon icon-down\"></span>\n                    </div>\n                    <ul className={this.state.isOpen ? 'header_drop open' : 'header_drop'}>\n                        <li>{this.state.default_info.username}</li>\n                        <li style={{color:'#2F2F2F', cursor:'pointer'}} onClick={() => this.logout()}>LOG OUT</li>\n                    </ul>\n                    <div className=\"header_photo\">\n                        {this.getHeaderPhoto()}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Header_main;","import React from 'react';\nimport AQ_LOGO_W from '../img/AQOOM_whitelogo.svg';\n\nfunction LandingFooter (props) {\n    return (\n        <div className=\"footer\">\n            <div className=\"footer_container\">\n              <div className=\"footer_left\">\n                <div className=\"aqoom_logo\">\n                  <img src={AQ_LOGO_W}></img>\n                </div>\n                <div className=\"aqoom_right\">\n                  All rights reserved 2020 © AQOOM\n                </div>\n              </div>\n              <div className=\"footer_right\">\n                <a href=\"http://aqoom.info/\" target=\"_blank\">\n                  ABOUT US\n                </a>\n                <a href=\"mailto:contact@aqoom.com\">\n                  CONTACT US\n                </a>\n              </div>\n            </div>\n          </div>\n    )\n}\n\nexport default LandingFooter;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport AQ_LOGO from '../img/AQOOM_logo.png';\n\nfunction LandingHeader (props) {\n    return (\n        <header className=\"App-header\">\n            <a className=\"aqoom_logo\" href=\"/\">\n              <img src={AQ_LOGO}></img>\n            </a>\n            <div className=\"nav_menus\">\n              <a href=\"/#/features\">\n                Features\n              </a>\n              {\n                props.onLogin \n                ? \n                <Link to=\"/members\" className=\"signin_btn\" onClick={() => {\n                    var now = new Date();\n                    var time = now.getTime();\n                    var expireTime = time + 2 * 3600000;\n                    now.setTime(expireTime);\n\n                    document.cookie = \"STAY_C=true; expires=\" + now.toUTCString();\n                    props.setValid(true)\n                }}>\n                  To Console\n                </Link> \n                :\n                <Link to=\"/signin\" className=\"signin_btn\">\n                Sign in\n                </Link>\n              }\n              \n            </div>\n          </header>\n    )\n}\n\nexport default LandingHeader;","import React from 'react';\n\nfunction Section_title (props) {\n    \n    return (\n        <div className=\"section_title\">\n            <h2 className=\"title\">\n                {props.title}\n            </h2>\n        </div>\n    )\n}\n\nexport default Section_title;","import React from 'react';\nimport '../../style/css/TabMenu.min.css';\n\nfunction changeTab(event) {\n    document.querySelector('div[class^=opt].active').classList.remove('active');\n    event.currentTarget.classList.add('active');\n    return false;\n}\n\nfunction TabMenu (props) {\nreturn (\n        <div className=\"tab_wrap\">\n            <div className=\"opt_1 active\" onClick={(ev) => {changeTab(ev); props.active_tab(1)}}>\n                <p>\n                    {props.opt1}\n                </p>\n            </div>\n            <div className=\"opt_2\" onClick={(ev) => {changeTab(ev); props.active_tab(2)}}>\n                <p>\n                    {props.opt2}\n                </p>\n            </div>\n            <div className=\"opt_3\" onClick={(ev) => {changeTab(ev); props.active_tab(3)}}>\n                <p>\n                    {props.opt3}\n                </p>\n            </div>\n        </div>\n    )\n}\n\nexport default TabMenu;","import React from 'react';\nimport Axios from 'axios';\n\nimport TELEGRAM_ICON from '../../img/Icons/opentelegram_normal.svg';\nimport BEN_ICON from '../../img/Icons/ban_normal.svg';\nimport KICK_ICON from '../../img/Icons/kick_normal.svg';\nimport REPLY_ICON from '../../img/Icons/reply_normal.svg';\nimport DELETE_ICON from '../../img/Icons/delete_normal.svg';\n\nimport '../../style/css/MessageContentItem.min.css';\n\nclass MessageContentItem extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            img_path: '',\n            isExpanded: false,\n            open_modal: false,\n            modal_content: '',\n            origin_msg: null,\n            user_profile_photo: []\n        }\n    }\n    componentDidMount() {\n        const user_id = this.props.data.user_id;\n        \n        Axios.post(`https://api.telegram.org/bot${this.props.botId}/getUserProfilePhotos`, {\n            user_id: user_id,\n            limit: 1\n        })\n        .then((res) => {\n            const profile_file_id = res.data.result.photos[0][0].file_id;\n            Axios.get(`https://api.telegram.org/bot${this.props.botId}/getFile?file_id=${profile_file_id}`)\n            .then((res) => {\n                const img_path = res.data.result.file_path\n                this.setState({user_profile_photo: img_path})\n            })\n            \n        })\n\n        if (this.props.content === 'file') {\n            Axios.get(`https://api.telegram.org/bot${this.props.botId}/getFile?file_id=${this.props.file_id}`)\n            .then((res) => {\n                const img_path = res.data.result.file_path\n                this.setState({img_path: img_path})\n            })\n        }\n\n        if (this.props.data.reply_to_message) {\n            Axios.post('/getMessageById', {\n                chat_id: window.localStorage.getItem('chat_id'),\n                message_id: this.props.data.reply_to_message\n            })\n            .then((res) => {\n                this.setState({origin_msg: res.data[0]})\n            })\n        }\n    }\n    \n    expand_minipulation(event) {\n        document.querySelectorAll('.message_manipulation.active').forEach((v) => v.classList.remove('active'));\n        this.setState({\n            isExpanded: !this.state.isExpanded\n        })\n    }\n\n    kickMember(userid, isBan) {\n        const result = window.confirm('Are you sure to kick this user?')\n        if (result) {\n            const dataset = {\n                chat_id: window.localStorage.getItem('chat_id'),\n                user_id: userid\n            }\n    \n            if (isBan) {\n                dataset['until_date'] = Date.now() + 1000;\n            }\n\n            Axios.post(`https://api.telegram.org/bot${this.props.botId}/kickChatMember`, dataset)\n                .then((res) => {\n                    setTimeout(() => {\n                        Axios.post('deleteUser', dataset);\n                        window.location.reload();\n                    }, 2000);\n                })\n        }\n    }\n    \n    restrictMember(userid) {\n        const result = window.confirm('Are you sure to ban this user?')\n        if (result) {\n            const dataset = {\n                chat_id: window.localStorage.getItem('chat_id'),\n                user_id: userid,\n                permissions: {\n                    can_send_messages: false,\n                    can_send_media_messages : false,\n                    can_send_polls: false,\n                    can_send_other_messages: false,\n                    can_pin_messages: false,\n                    can_change_info: false\n                },\n                until_date: 300000\n            }\n\n            Axios.post(`https://api.telegram.org/bot${this.props.botId}/restrictChatMember`, dataset)\n                .then((res) => {\n                    \n                }).catch((err) => {\n                    alert(err);\n                    return false;\n                })\n        }\n    }\n\n    send_reply_message(event) {\n        const dataset = {\n            chat_id: window.localStorage.getItem('chat_id'),\n            reply_to_message_id: event.currentTarget.dataset.mid,\n            text: this.state.modal_content\n        }\n\n        Axios.post(`https://api.telegram.org/bot${this.props.botId}/sendMessage`, dataset).then(() => {\n            alert('the reply sent to chat successfully')\n            this.close_modal();\n            Axios.post('/setStateReplied', dataset)\n        })\n    }\n\n    delete_this_message(message_id) {\n        const result = window.confirm('Are you sure to delete this message?')\n        if (result) {\n            const dataset = {\n                chat_id: window.localStorage.getItem('chat_id'),\n                message_id: message_id\n            }\n            Axios.post(`https://api.telegram.org/bot${this.props.botId}/deleteMessage`, dataset).then((res) => {\n                if (res.data.ok === true) {\n                    Axios.post('/removeMessage', dataset);\n                    window.location.reload();\n                }\n            })\n            .catch((err) => {\n                if (!err.response.data.ok) {\n                    alert('You can only delete messages that were sent within 48 hours.');\n                    return false;\n                }\n            })\n        }\n    }\n\n    updateContent(event) {\n        this.setState({\n            modal_content: event.target.value\n        })\n    }\n\n    open_reply_modal() {\n        this.setState({\n            open_modal: true\n        })\n        document.querySelector('.dim').style.display = 'block';\n        document.querySelector('.dim').addEventListener('click', this.close_modal.bind(this))\n    }\n\n    close_modal() {\n        this.setState({\n            open_modal: false\n        })\n        document.querySelector('.dim').style.display = 'none';\n    }\n\n    telegram_actions(action) {\n        switch (action) {\n            case 'open' : {\n                const user_name = this.props.data.username;\n                window.location.href = `https://t.me/${user_name}`\n                break;\n            }\n            case 'ban' : {\n                const user_id = this.props.data.user_id;\n                this.kickMember(user_id, true)\n                break;\n            }\n            case 'kick' : {\n                const user_id = this.props.data.user_id;\n                this.kickMember(user_id, false)\n                break;\n            }\n            case 'reply' : {\n                this.open_reply_modal();\n                break;\n            }\n            case 'delete': {\n                const msg_id = this.props.data.id;\n                this.delete_this_message(msg_id);\n                break;\n            }\n        }\n    }\n\n    validateURL() {\n        if (this.props.data.entities) {\n            const entities = JSON.parse(this.props.data.entities);\n            if (entities[0].type === 'url') {\n                return true;\n            } else {\n                return false;\n            }\n        }\n    }\n\n    movetoMemberProfile(user_id) {\n        if (user_id) {\n            window.location.href = `/#/user?user_id=${user_id}`\n        }\n    }\n\n    render() {\n        const msg_date = new Date(this.props.data.date);\n\n        return (\n            <div className=\"content_message_wrap\">\n                <div className=\"message_owner\">\n                    <img src={`https://api.telegram.org/file/bot${this.props.botId}/${this.state.user_profile_photo}`}></img>\n                </div>\n                <div className=\"message_contents\">\n                    <div className=\"message_header\">\n                        <p className=\"message_user\" onClick={() => this.movetoMemberProfile(this.props.data.user_id)}>\n                            {this.props.data.first_name} {this.props.data.last_name}\n                        </p>\n                        <p className=\"message_time\">\n                            {msg_date.getMonth() + 1} / {msg_date.getDate()} , {msg_date.getHours()}:{msg_date.getMinutes()}\n                        </p>\n                        {\n                            this.props.data.replied_date\n                            ?\n                            <p>\n                                <span className=\"replied_icon\"></span>\n                                <span className=\"replied_mark\">Replied</span>\n                            </p>\n                            :\n                            null\n                        }\n                    </div>\n                    <div className=\"message_body\">\n                        {this.state.origin_msg !== null ?\n                        <div className=\"reply_target_message\">\n                            <p className=\"origin_message_user\">\n                                {this.state.origin_msg.first_name} {this.state.origin_msg.last_name}\n                            </p>\n                            \n                            {\n                                this.state.origin_msg.text ? \n                                <p className=\"origin_message_content\">\n                                    {this.state.origin_msg.text}\n                                </p>\n                                :\n                                this.state.origin_msg.image ?\n                                <p>\n                                    IMAGE\n                                </p> :\n                                this.state.origin_msg.sticker ?\n                                <p>\n                                    STICKER\n                                </p> :\n                                <p>\n                                    MEDIA\n                                </p>\n                            }\n                        </div>\n                        :\n                        null} \n                        {this.props.content === 'file' ? \n                        <img src={`https://api.telegram.org/file/bot${this.props.botId}/${this.state.img_path}`}></img>\n                        :\n                        this.props.content === 'sticker' ? \n                        <p>\n                            Sticker preview unavailable\n                        </p>\n                        :\n                        this.validateURL() ?\n                        <div>\n                            <p>\n                                {this.props.content}\n                            </p>\n                            <div className=\"alert_icon\">\n                                <p className=\"tooltip\">This message could be a spam. harmful link, or sent by a fake user.</p>\n                                <p>!</p>\n                            </div>\n                            \n                        </div>\n                        :\n                        <p>\n                            {this.props.content}\n                        </p>\n                        }\n                    </div>\n                </div>\n                <div className={this.state.isExpanded ? 'message_manipulation active' : 'message_manipulation'} onClick={(ev) => this.expand_minipulation(ev)}>\n                    <div className=\"expand_icon\"></div>\n                </div>\n                \n                <div className=\"message_manipulation_expand\">\n                    <div className=\"manipulation_item\" onClick={() => this.telegram_actions('open')}>\n                        <img src={TELEGRAM_ICON} title=\"Open in Telegram\"></img>\n                    </div>\n                    <div className=\"manipulation_item\">\n                        <img src={BEN_ICON} title=\"Ban\" onClick={() => this.telegram_actions('ban')}></img>\n                    </div>\n                    <div className=\"manipulation_item\">\n                        <img src={KICK_ICON} title=\"Kick\" onClick={() => this.telegram_actions('kick')}></img>\n                    </div>\n                    <div className=\"manipulation_item\">\n                        <img src={REPLY_ICON} title=\"Reply\" onClick={() => this.telegram_actions('reply')}></img>\n                    </div>\n                    <div className=\"manipulation_item\">\n                        <img src={DELETE_ICON} title=\"Delete\" onClick={() => this.telegram_actions('delete')}></img>\n                    </div>\n                </div>\n                    \n                <div className={this.state.open_modal ? 'modal reply_modal open' : 'modal reply_modal'}>\n                    <div className=\"modal_title\">\n                        <p>Write a reply</p>\n                    </div>\n                    <textarea className=\"reply_content\" onChange={(ev) => this.updateContent(ev)} placeholder=\"reply to..\"></textarea>\n                    <div className=\"modal_btn_wrap\">\n                        <a className=\"submit_btn\" data-mid={this.props.data.id} onClick={(ev) => this.send_reply_message(ev)}>\n                            SUBMIT\n                        </a>\n                        <a className=\"cancle_btn\" onClick={() => this.close_modal()}>\n                            CANCEL\n                        </a>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default MessageContentItem","import React from 'react';\nimport Content_Item from './MessageContentItem';\n\nclass MessageContentContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            img_path: '',\n            contents: []\n        }\n    }\n    render() {\n        const contents = this.props.messages.map((data) => {\n            let msg = data.text ? data.text : data.sticker ? 'sticker' : 'file';\n\n            if (msg === 'file') {\n                const message = data.photo ? data.photo : data.video ? data.video : data.audio ? data.audio : undefined;\n                if (message) {\n                    let message_json = JSON.parse(message);\n                    if (message_json.length > 1) {\n                        message_json = message_json[0];\n                    }\n                    const file_id = message_json.file_id;\n                    return (\n                        <Content_Item content={msg} data={data} key={data.id} botId={this.props.botId} file_id={file_id} is_allMessages={this.props.is_allMessages}></Content_Item>\n                    )\n                }\n            } else if (msg === 'sticker') {\n                return (\n                    <Content_Item content={msg} data={data} key={data.id} botId={this.props.botId} is_allMessages={this.props.is_allMessages}></Content_Item>\n                )\n            } else {\n                return (\n                    <Content_Item content={msg} data={data} key={data.id} botId={this.props.botId} is_allMessages={this.props.is_allMessages}></Content_Item>\n                )\n            }\n        })\n\n        return (\n            <div className=\"content_tab\">\n                {contents.length !== 0 ?\n                contents\n                :\n                <div className=\"emtpy_section\">\n                    <p>No messages yet</p>    \n                </div>}\n            </div>\n        )\n    }\n}\n\nexport default MessageContentContainer;","import React from \"react\";\nimport Axios from \"axios\";\nimport Title from \"../Section_title\";\nimport TabMenu from \"../Modules/TabMenu\";\nimport Content_Tabs from '../Modules/MessageContentContainer';\n\nimport \"../../style/css/Messages.min.css\";\n\n\nfunction Segment_Tabs(props) {\n  switch (props.tab) {\n    case 1: {\n      return <Content_Tabs messages={props.messages} botId={props.botId} is_allMessages={true}></Content_Tabs>;\n    }\n    case 2: {\n      return <Content_Tabs messages={props.questions} botId={props.botId} is_allMessages={false}></Content_Tabs>;\n    }\n    case 3: {\n      return <Content_Tabs messages={props.mentions} botId={props.botId} is_allMessages={false}></Content_Tabs>;\n    }\n  }\n}\n\nclass Messages extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      active_tab: 1,\n      messages: [],\n      questions: [],\n      mentions: [],\n      current_pg_question: 0,\n      current_pg_mention: 0,\n      current_pg: 0,\n      isbusy: false\n    };\n    this.onScroll = this.append_messages.bind(this);\n  }\n\n  componentDidMount() {\n    this.get_messages(this.state.current_pg);\n    this.get_questions(this.state.current_pg_question);\n    this.get_mentions(this.state.current_pg_mention);\n\n    window.addEventListener('scroll', this.onScroll)\n  }\n  \n  componentWillUnmount() {\n      window.removeEventListener('scroll', this.onScroll)\n  }\n\n  get_mentions(page) {\n    Axios.post('getAdminMentions', {\n        chat_id: window.localStorage.getItem('chat_id'),\n        page: page\n    })\n    .then((res) => {\n        if (res.data) {\n            const result = this.state.mentions.concat(res.data)\n\n            this.setState({\n                mentions: result,\n                current_pg_question: this.state.current_pg_mention + 1,\n                isbusy: false\n            })\n        }\n    })\n  }\n\n  get_questions(page) {\n    Axios.post('getQuestions', {\n        chat_id: window.localStorage.getItem('chat_id'),\n        page: page\n    })\n    .then((res) => {\n        if (res.data) {\n            const result = this.state.questions.concat(res.data);\n\n            this.setState({\n                questions: result,\n                current_pg_question: this.state.current_pg_question + 1,\n                isbusy: false\n            })\n        }\n    })\n  }\n\n  get_messages(page) {\n    Axios.post('/getMessages', {\n        page: page,\n        chat_id: window.localStorage.getItem('chat_id')\n    })\n    .then((res) => {\n        if (res.data) {\n            const result = this.state.messages.concat(res.data);\n            this.setState({\n                messages: result,\n                current_pg: this.state.current_pg + 1,\n                isbusy: false\n            })\n        }\n    })\n  }\n\n  set_activeTab(num) {\n    return this.setState({ active_tab: num });\n  }\n\n  getCurrentScrollPercentage(){\n    return (window.scrollY + window.innerHeight) / document.body.clientHeight * 100\n    }\n\n  append_messages(event) {\n    if (this.state.messages.length >= 20) {\n        const scroll_position = this.getCurrentScrollPercentage()\n        if (scroll_position > 90 && !this.state.isbusy) {\n            this.setState({isbusy: true})\n            this.get_messages(this.state.current_pg)\n        }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"section_messages\">\n        <Title title={\"Messages\"}></Title>\n        <TabMenu\n          opt1={\"Message Log\"}\n          opt2={\"Collected Questions\"}\n          opt3={\"Messages to Admin\"}\n          active_tab={this.set_activeTab.bind(this)}\n        ></TabMenu>\n        <Segment_Tabs tab={this.state.active_tab} messages={this.state.messages} questions={this.state.questions} mentions={this.state.mentions} botId={this.props.botId}></Segment_Tabs>\n      </div>\n    );\n  }\n}\n\nexport default Messages;\n","import React from 'react';\nimport Axios from 'axios';\n\nimport Content_Tabs from '../Modules/MessageContentContainer';\n\nclass MessageLog extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            messages: []\n        }\n    }\n    \n    back() {\n        window.history.go(-1);\n    }\n\n    extract_query(key) {\n        const query_str = window.location.href.split('?')[1];\n        return query_str.split('=')[1];\n    }\n\n    componentDidMount() {\n        Axios.post('/getMessageByUser', {\n            chat_id: window.localStorage.getItem('chat_id'),\n            member_id: this.extract_query('id'),\n            date: 30\n        }).then((res) => {\n            if (res.data) {\n                this.setState({messages: res.data})    \n            }\n        })\n    }\n\n    render() {\n        return (\n          <div className=\"section_messages\">\n            <div className=\"section_title\" onClick={() => this.back()}>\n                <h2 className=\"title\">\n                    {this.state.messages[0].username}'s Message Logs\n                </h2>\n            </div>\n            <Content_Tabs messages={this.state.messages} botId={this.props.botId} is_allMessages={true}></Content_Tabs>\n          </div>\n        );\n      }\n}\n\nexport default MessageLog;","import React from 'react';\n\nfunction SearchBox (props) {\n    return (\n        <div className=\"search_box_wrap\">\n            <form method=\"post\">\n                <div className=\"icon icon_magnify\"></div>\n                <input type=\"text\" name=\"member_search\" onChange={(ev) => props.searchMember(ev)} placeholder=\"Search for a member\"></input>\n            </form>\n        </div>\n    )\n}\n\nexport default SearchBox;","import React from 'react';\nimport Axios from 'axios';\nimport Title from '../Section_title';\nimport SearchBox from '../Modules/SearchBox';\nimport TabMenu from '../Modules/TabMenu';\n\nimport '../../style/css/UserManager.min.css';\nimport { Link } from 'react-router-dom';\n\nclass UserManager extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            members: [],\n            active_tab: 1\n        }\n    }\n\n    set_activeTab(num) {\n        return this.setState({ active_tab: num });\n    }\n\n    searchMember(event) {\n        const search_query = event.currentTarget.value;\n        \n        Axios.post('/searchMember', {\n            chat_id: window.localStorage.getItem('chat_id'),\n            query: search_query\n        })\n        .then((res) => {\n            if (res.data) {\n                this.updateMemberList(res.data);\n            }\n        })\n    }\n\n    kickMember(userid, isBan) {\n        const result = window.confirm('Are you sure to kick this user?')\n        if (result) {\n            const dataset = {\n                chat_id: window.localStorage.getItem('chat_id'),\n                user_id: userid\n            }\n    \n            if (isBan) {\n                dataset['until_date'] = Date.now() + 1000;\n            }\n    \n            Axios.post(`https://api.telegram.org/bot${this.props.botId}/kickChatMember`, dataset)\n                .then((res) => {\n                    Axios.post('/deleteUser', dataset)\n                        .then(() => {\n                            this.updateMemberList()\n                        })\n                })\n        }\n    }\n    \n    restrictMember(userid) {\n        const result = window.confirm('Are you sure to restrict this user?')\n        if (result) {\n            const dataset = {\n                chat_id: window.localStorage.getItem('chat_id'),\n                user_id: userid,\n                permissions: {\n                    can_send_messages: false,\n                    can_send_media_messages : false,\n                    can_send_polls: false,\n                    can_send_other_messages: false,\n                    can_pin_messages: false,\n                    can_change_info: false\n                },\n                until_date: 300000\n            }\n\n            Axios.post(`https://api.telegram.org/bot${this.props.botId}/restrictChatMember`, dataset)\n                .then((res) => {\n                    \n                }).catch((err) => {\n                    if (err.data.ok) {\n                        alert('this feature should be available into Supergroup only.')\n                    }\n                })\n        }\n    }\n\n    updateMemberList() {\n        Axios.post('/getMemberStatus', {chat_id: window.localStorage.getItem('chat_id')})\n            .then((res) => {\n                let dataset = [];\n\n                for (var data of res.data) {\n                    if (!data.is_bot) {\n                        dataset.push(data);\n                    }\n                }\n\n                this.setState({members: dataset.map((data, index) => \n                    <tr key={index}>\n                        <td>\n                            <div className=\"member_name\">\n                                {data.is_interested ?\n                                <div className=\"interesting_icon\"></div> : null}\n                                <Link to={{\n                                    pathname: \"/user\",\n                                    search: \"?user_id=\" + data.id\n                                }}>\n                                    {data.first_name} {data.last_name ? data.last_name : ''}\n                                </Link>\n                            </div>\n                        </td>\n                        <td>\n                            {'Active'}\n                        </td>\n                        <td>\n                            @{data.username}\n                        </td>\n                        <td>\n                            {data.warning_pt}\n                        </td>\n                        <td>\n                            {data.act_txt_cnt + data.act_photo_cnt + data.act_url_cnt}\n                        </td>\n                        <td>\n                            {data.updated_at}\n                        </td>\n                        <td>\n                            <Link to={{\n                                pathname: \"/logs\",\n                                search: \"?user_id=\" + data.id\n                            }}>\n                                <div className=\"icon message_log_icon\">\n                                    <span className=\"tooltip\">Message Logs</span>\n                                </div>\n                            </Link>\n                        </td>\n                        <td>\n                            <div className=\"icon restrict_icon\" onClick={() => this.restrictMember(data.id)}>\n                                <span className=\"tooltip\">Restrict</span>\n                            </div>\n                        </td>\n                        <td>\n                            <div className=\"icon ban_icon\" onClick={() => this.kickMember(data.id, true)}>\n                                <span className=\"tooltip\">Ban</span>   \n                            </div>\n                        </td>\n                        <td>\n                            <div className=\"icon kick_icon\" onClick={() => this.kickMember(data.id, false)}>\n                                <span className=\"tooltip\">Kick</span>\n                            </div>\n                        </td>\n                    </tr> \n                )})\n\n            }).catch(function(err) {\n                console.log(err);\n            })\n    }\n\n    componentDidMount() {\n        this.updateMemberList()\n    }\n\n    render() {\n        return (\n            <div className=\"section_usermanager\">\n                <Title title={\"Members\"}></Title>\n                <TabMenu opt1={'Members List'} active_tab={() => this.set_activeTab.bind(this)}></TabMenu>\n                <div className=\"memberlist_wrap\">\n                    <h4>List of Members</h4>\n                    <SearchBox target={'member'} searchMember={this.searchMember.bind(this)}></SearchBox>\n                    <table className=\"usermanager_tb\">\n                    <thead>\n                        <tr>\n                            <th width=\"15%\">Name</th>\n                            <th width=\"10%\">Status</th>\n                            <th width=\"13%\">Username</th>\n                            <th width=\"10%\">Warn. Points</th>\n                            <th width=\"11%\">Messages</th>\n                            <th>Last Active</th>\n                            <th width=\"5%\"></th>\n                            <th width=\"5%\"></th>\n                            <th width=\"5%\"></th>\n                            <th width=\"5%\"></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.members.length === 0 ? \n                            <tr><td colSpan=\"10\" className=\"empty_item\">No Items</td></tr>\n                            : this.state.members}\n                    </tbody>\n                </table>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default UserManager;","import React, {useState} from 'react';\nimport Axios from 'axios';\n\nimport ContentContainer from '../Modules/MessageContentContainer';\nimport '../../style/css/MessageLogModal.min.css';\n\nfunction MessageLogModal(props) {\n    const [messageLog, setMessageLog] = useState([]);\n\n    if (!props.message_log) {\n        if (props.chat_id) {\n            Axios.post('/getMessageByUser', {\n                chat_id: window.localStorage.getItem('chat_id'),\n                member_id: props.user_id,\n                date: 30\n            })\n            .then((res) => {\n                setMessageLog(res.data);\n            })\n        } else {\n            return (\n                <div className={props.message_log_open ? \"modal message_log_modal open\" : \"modal message_log_modal\"}>\n                    <h2 className=\"message_modal_title\">Message Logs</h2>\n                    <span className=\"message_modal_close\" onClick={() => props.closeModal()}>&times;</span>\n                    <div className=\"empty_section\">\n                        <p>No messages</p>\n                    </div>\n                </div>\n            );\n        }\n    }\n    return (\n        <div className={props.message_log_open ? \"modal message_log_modal open\" : \"modal message_log_modal\"}>\n            <h2 className=\"message_modal_title\">Message Logs</h2>\n            <span className=\"message_modal_close\" onClick={() => props.closeModal()}>&times;</span>\n            <ContentContainer messages={props.message_log ? props.message_log : messageLog} botId={props.botId} is_allMessages={true}></ContentContainer>\n        </div>\n    )\n}\n\nexport default MessageLogModal;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport Axios from 'axios';\n\nimport Chart from 'chart.js';\n\nimport MessageLogModal from '../Modules/MessageLog_Modal';\n\n\nimport '../../style/css/User.min.css';\n\nclass User extends React.Component {\n    constructor (props) {\n        super(props);\n\n        this.state = {\n            user_profile_data: [],\n            message_log: [],\n            profile_pic: '',\n            active_hours: 0,\n            top_active: null,\n            message_log_open: false\n        }\n    }\n\n    backtoManage() {\n        window.location.href = '/#/members';\n    }\n\n    openTelegram(username) {\n        window.location.href = `https://t.me/${username}`\n        return false;\n    }\n\n    toggleMessageLogModal() {\n        this.setState({\n            message_log_open: !this.state.message_log_open\n        })\n    }\n\n    interestMember(event, user_id) {\n        const cur_state = event.currentTarget.classList\n        let setValue = 0\n        if (cur_state.length === 2) {\n            setValue = 0\n        } else {\n            setValue = 1\n        }\n        const dataset = {\n            user_id: user_id,\n            chat_id: window.localStorage.getItem('chat_id'),\n            val: setValue\n        }\n        \n        Axios.post('/setInterest', dataset)\n        .then(() => {\n            window.location.reload();\n        })\n    }\n\n    kickMember(userid, isBan) {\n        const result = window.confirm('Are you sure to kick this user?')\n        if (result) {\n            const dataset = {\n                chat_id: window.localStorage.getItem('chat_id'),\n                user_id: userid\n            }\n\n            if (isBan) {\n                dataset['until_date'] = Date.now() + 1000;\n            }\n    \n            Axios.post(`https://api.telegram.org/bot${this.props.botId}/kickChatMember`, dataset)\n                .then((res) => {\n                    setTimeout(() => {\n                        Axios.post('deleteUser', dataset);\n                        window.location.reload();\n                    }, 2000);\n                })\n        }\n    }\n    \n    restrictMember(userid) {\n        const result = window.confirm('Are you sure to ban this user?')\n        if (result) {\n            const dataset = {\n                chat_id: window.localStorage.getItem('chat_id'),\n                user_id: userid,\n                permissions: {\n                    can_send_messages: false,\n                    can_send_media_messages : false,\n                    can_send_polls: false,\n                    can_send_other_messages: false,\n                    can_pin_messages: false,\n                    can_change_info: false\n                },\n                until_date: 300000\n            }\n\n            Axios.post(`https://api.telegram.org/bot${this.props.botId}/restrictChatMember`, dataset)\n                .then((res) => {\n                    \n                }).catch((err) => {\n                    if (!err.data.ok) {\n                        alert('this feature is available only in [supergroup]')\n                        return false;\n                    }\n                })\n        }\n    }\n\n    extract_query(key) {\n        const query_str = window.location.href.split('?')[1];\n        return query_str.split('=')[1];\n    }\n\n    cal_active_hours (data) {\n        const avg_msg_perDay = Math.floor((this.state.user_profile_data.act_txt_cnt + this.state.user_profile_data.act_media + this.state.user_profile_data.act_photo_cnt) / this.cal_participate_date(this.state.user_profile_data.created_at))\n        const standard = Math.floor( avg_msg_perDay / 5 );\n        let active_hours = 0;\n        let top_active = 0;\n        \n        for (var i = 0; i < 24; i++) {\n            if (data[i] > standard) {\n                if (data[top_active] < data[i]) {\n                    top_active = i;\n                }\n                active_hours += 1;\n            }\n        }\n\n        if (top_active) {\n            this.setState({\n                active_hours : active_hours,\n                top_active : top_active\n            })\n        }\n    }\n\n    cal_participate_date(joined_date) {\n        const join = new Date(joined_date);\n        const now = new Date(Date.now());\n        const diff = now - join;\n\n        return Math.floor(diff / 86400000) > 30 ? 30 : Math.floor(diff / 86400000)\n    }\n\n    cal_participate_week(joined_date) {\n        const join = new Date(joined_date);\n        const now = new Date(Date.now());\n        const diff = now - join;\n\n        return Math.floor(diff / 604800000) > 30 ? 30 : Math.floor(diff / 604800000)\n    }\n    \n    makeChartMessage(data) {\n        const today = new Date(Date.now());\n        let label_arr = [];\n        let dataset = [];\n        for (var i=11; i >= 0; i--) {\n            const target_date = today - (86400000 * i);\n            const d = new Date(target_date);\n            const result = d.toString(\"MMMM dd\").slice(4, 10)\n            let is_matched = false;\n\n            label_arr.push(result);\n            if (data) {\n                for (var date_cnt of data) {\n                    if (result == date_cnt['ym']) {\n                        dataset.push(date_cnt['cnt']);\n                        is_matched = true;\n                    } \n                }\n            }\n\n            if (!is_matched) {\n                dataset.push(0);\n            }\n        }\n\n        const message_crt = document.getElementById('total_message_crt');\n        new Chart(message_crt, {\n            type: 'line',\n            data: {\n                labels: label_arr,\n                datasets: [{\n                    data: dataset,\n                    borderColor: '#324DF9',\n                    borderWidth: 2,\n                    lineTension: 0,\n                    fill: false\n                }]\n            },\n            options: {\n                legend: {\n                    display: false\n                },\n                responsive: false,\n                scales: {\n                    yAxes: [{\n                        ticks: {\n                            stepSize: 5,\n                            beginAtZero: true\n                        }\n                    }],\n                    gridLines: {\n                        lineWidth: 0\n                    }\n                },\n            }\n        })\n    }\n    \n    makeChartActiveHour(data) {\n        let time_24hr = [];\n        let time_active_hour = [];\n\n        for(var i=0; i<24; i++) {\n            time_24hr.push(i);\n            let is_matched = false;\n            if (data) {\n                for (var time of data) {\n                    if (i == time['hour']) {\n                        time_active_hour.push(time['cnt'])\n                        is_matched = true\n                    }\n                }\n            }\n            \n            if (!is_matched) {\n                time_active_hour.push(0);\n            }\n        }\n\n        this.cal_active_hours(time_active_hour);\n\n        const active_crt = document.getElementById('active_hour_crt');\n        new Chart(active_crt, {\n            type: 'bar',\n            data: {\n                labels: time_24hr,\n                datasets: [{\n                    data: time_active_hour,\n                    backgroundColor: '#3CB650'\n                }]\n            },\n            options: {\n                legend: {\n                    display: false\n                },\n                responsive: false,\n                scales: {\n                    yAxes: [{\n                        ticks: {\n                            stepSize: 5,\n                            beginAtZero: true\n                        }\n                    }],\n                    gridLines: {\n                        lineWidth: 0\n                    }\n                },\n            }\n        })\n    }\n\n    makeChartType() {\n        const ctx = document.getElementById('message_type');\n        const chart = new Chart(ctx, {\n            type: 'pie',\n            data: {\n                labels: ['Text Messages', 'Questions', 'Media (Stickers, Gif, etc)', 'Pictures'],\n                datasets: [{\n                    data: [this.state.user_profile_data.act_txt_cnt, this.state.user_profile_data.act_questions, this.state.user_profile_data.act_media, this.state.user_profile_data.act_photo_cnt],\n                    backgroundColor: [\n                        '#255CF9',\n                        '#3CB550',\n                        '#2199EE',\n                        '#644AC4'\n                    ]\n                }]\n            },\n            options: {\n                legend : {\n                    position: \"right\"\n                },\n                layout: {\n                    padding: {\n                        top: 20,\n                        bottom:20,\n                        left:20,\n                        right:20\n                    }\n                }\n            }\n        }).resize()\n    }\n\n    componentDidMount() {\n\n        Axios.post('/getMember', {\n            member_id: this.extract_query(),\n            chat_id: window.localStorage.getItem('chat_id')\n        })\n        .then((res_member) => {\n            this.setState({user_profile_data : res_member.data[0]});\n            Axios.post(`https://api.telegram.org/bot${this.props.botId}/getUserProfilePhotos`, {\n                user_id: this.extract_query()\n            })\n            .then((res_chatmember) => {\n                if (res_chatmember.data.result.total_count !== 0) {\n                    Axios.post(`https://api.telegram.org/bot${this.props.botId}/getFile?file_id=`+res_chatmember.data.result.photos[0][0].file_id)\n                        .then((res_file) => {\n                            this.setState({profile_pic: res_file.data.result})\n                            this.makeChartType();\n                        })\n                }      \n            })\n        })\n\n        Axios.post('/getMessageByUser', {\n            member_id: this.extract_query(),\n            chat_id: window.localStorage.getItem('chat_id'),\n            date: 30\n        })\n        .then((res) => {\n            this.setState({\n                message_log: res.data\n            })\n        })\n\n        Axios.post('/getMessageCntPerDay', {\n            member_id: this.extract_query(),\n            chat_id: window.localStorage.getItem('chat_id')\n        })\n        .then((res) => {\n            this.makeChartMessage(res.data)\n        })\n\n        Axios.post('/getMessageCntPerHour', {\n            member_id: this.extract_query(),\n            chat_id: window.localStorage.getItem('chat_id')\n        })\n        .then((res) => {\n            this.makeChartActiveHour(res.data)\n        })\n    }\n\n    render() {\n        const total_msg = this.state.user_profile_data.act_txt_cnt + this.state.user_profile_data.act_photo_cnt + this.state.user_profile_data.act_url_cnt;\n\n        return (\n            <div className=\"user_wrap\">\n                <div className=\"section_title\" onClick={() => this.backtoManage()}>\n                    <h2 className=\"title\">\n                        User Profile\n                    </h2>\n                </div>\n                <div className=\"profile_state\">\n                    <div className=\"user_profile\">\n                        <div className={this.state.user_profile_data.is_interested ? 'interest_icon interested' : 'interest_icon'} \n                            onClick={(ev) => this.interestMember(ev, this.state.user_profile_data.user_id)}>\n\n                        </div>\n                        <div className=\"profile_pic\">\n                            <img src={`https://api.telegram.org/file/bot${this.props.botId}/` + this.state.profile_pic.file_path}></img>\n                        </div>\n                        <div className=\"profile_contents\">\n                            <p>\n                                {this.state.user_profile_data.first_name} {this.state.user_profile_data.last_name}\n                            </p>\n                            <p>\n                                @{this.state.user_profile_data.username}\n                            </p>\n                            <p>\n                                Active\n                            </p>\n                            <p>\n                                Last Active : {this.state.user_profile_data.updated_at}\n                            </p>\n                            <p>\n                                Messages: {total_msg}\n                            </p>\n                            <p>\n                                Warning Points: {this.state.user_profile_data.warning_pt}\n                            </p>\n                        </div>\n                        <div className=\"profile_manipulation\">\n                            <div className=\"manipulation_item\" onClick={() => this.openTelegram(this.state.user_profile_data.username)}>\n                                <span className=\"icon open_telegram_icon\"></span>\n                            </div>\n                            <div className=\"manipulation_item\">\n                                <Link to={{\n                                    pathname: \"/logs\",\n                                    search: \"?user_id=\" + this.state.user_profile_data.user_id\n                                }}>\n                                    <div className=\"icon message_log_icon\">\n                                        <span className=\"tooltip\">Message Logs</span>\n                                    </div>\n                                </Link>\n                            </div>\n                            <div className=\"manipulation_item\" onClick={() => this.restrictMember(this.state.user_profile_data.user_id)}>\n                                <div className=\"icon restrict_icon\">\n                                    <span className=\"tooltip\">Restrict</span>\n                                </div>\n                            </div>\n                            <div className=\"manipulation_item\" onClick={() => this.kickMember(this.state.user_profile_data.user_id, true)}>\n                                <div className=\"icon ban_icon\">\n                                    <span className=\"tooltip\">Ban</span>\n                                </div>\n                            </div>\n                            <div className=\"manipulation_item\" onClick={() => this.kickMember(this.state.user_profile_data.user_id, false)}>\n                                <div className=\"icon kick_icon\">\n                                    <span className=\"tooltip\">Kick</span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"chart_message_type\">\n                        <p>Type of Messages</p>\n                        <canvas id=\"message_type\" width=\"200\" height=\"200\"></canvas>\n                    </div>\n                    <div className=\"active_sum\">\n                        <p>Summary</p>\n                        <div className=\"sum_el\">\n                            <p>Average messages per day</p>\n                            <p>\n                                {Math.floor(total_msg / this.cal_participate_date(this.state.user_profile_data.created_at))} messages\n                            </p>\n                        </div>\n                        <div className=\"sum_el\">\n                            <p>Average messages per week</p>\n                            <p>\n                                {Math.floor(total_msg / this.cal_participate_week(this.state.user_profile_data.created_at))} messages\n                            </p>\n                        </div>\n                        <div className=\"sum_el\">\n                            <p>Active hours per day</p>\n                            <p>\n                                {this.state.active_hours} hours\n                            </p>\n                        </div>\n                        <div className=\"sum_el\">\n                            <p>Top Active hours</p>\n                            {this.state.top_active === null ?\n                            <p>\n                                No data\n                            </p>\n                                :\n                            <p>\n                                Between {this.state.top_active > 10 ? this.state.top_active + ' : 00' : '0' + this.state.top_active + ' : 00'}\n                                ~\n                                {this.state.top_active + 1 > 10 ? (this.state.top_active + 1) + ' : 00' : '0' + (this.state.top_active + 1) + ' : 00'}\n                            </p>\n                                }\n                        </div>\n                        <div className=\"sum_el\">\n                            <p>Total Messages</p>\n                            <p>\n                                {total_msg}\n                            </p>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"chart_message\">\n                    <p>Messages</p>\n                    <canvas id=\"total_message_crt\" width=\"1186\" height=\"200\"></canvas>\n                </div>\n                <div className=\"chart_activehour\">\n                    <p>Active Hours</p>\n                    <canvas id=\"active_hour_crt\"  width=\"1186\" height=\"200\"></canvas>\n                </div>\n                <MessageLogModal message_log_open={this.state.message_log_open} botId={this.props.botId} message_log={this.state.message_log} closeModal={this.toggleMessageLogModal.bind(this)}></MessageLogModal>\n            </div>\n        )\n    }\n}\n\nexport default User;","import React, { useState } from \"react\";\nimport Axios from \"axios\";\nimport \"react-daypicker/lib/DayPicker.css\";\nimport DayPicker from \"react-daypicker\";\n\nfunction SelectboxDay(props) {\n  const [day, setDay] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n  const days = [\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n    \"Sunday\"\n  ];\n\n  function decide_inout(el) {\n    if (el) {\n      if (day.findIndex(element => element === el) !== -1) {\n        const idx = day.findIndex(element => element === el);\n        if (idx === 0 || idx === day.length - 1) {\n          if (idx === 0) {\n            day.shift();\n            setDay(day);\n          } else if (idx === day.length - 1) {\n            day.pop();\n            setDay(day);\n          }\n        } else {\n          const sep_left = day.slice(0, idx);\n          const sep_right = day.slice(idx + 1);\n          const result = sep_left.concat(sep_right);\n          setDay(result);\n        }\n      } else {\n        setDay([...day, el]);\n      }\n    }\n  }\n\n  const list = days.map(item => {\n    return (\n      <div className=\"day_item\">\n        <label className=\"day_name\">{item}</label>\n        <input\n          type=\"checkbox\"\n          className=\"day_check\"\n          multiple\n          onChange={() => decide_inout(item.substr(0, 3))}\n        ></input>\n      </div>\n    );\n  });\n  return (\n    <div className=\"selectbox_day\">\n      <input\n        type=\"hidden\"\n        name=\"selectedDay\"\n        value={JSON.stringify(day)}\n      ></input>\n      <a className=\"selected_date\" onClick={() => setIsOpen(!isOpen)}>\n        {day.toString()}\n      </a>\n      <div className={isOpen ? \"daypicker_pop open\" : \"daypicker_pop\"}>\n        {list}\n      </div>\n    </div>\n  );\n}\n\nfunction SelectboxDate(props) {\n  const [date, setDate] = useState(\"\");\n  const [isOpen, setIsOpen] = useState(false);\n\n  function getFormattedDate() {\n    if (date) {\n      const yy = date.getFullYear();\n      const mm = date.getMonth() + 1;\n      const dd = date.getDate();\n\n      return `${yy}-${mm}-${dd}`;\n    } else {\n      const today = new Date(Date.now());\n      const yy = today.getFullYear();\n      const mm = today.getMonth() + 1;\n      const dd = today.getDate();\n\n      return `${yy}-${mm}-${dd}`;\n    }\n  }\n\n  function toggleDatePicker(day) {\n    setDate(day);\n    setIsOpen(false);\n  }\n\n  return (\n    <div className=\"selectbox_date\">\n      <input\n        type=\"hidden\"\n        name=\"selectedDate\"\n        value={getFormattedDate()}\n      ></input>\n      <a className=\"selected_date\" onClick={() => setIsOpen(!isOpen)}>\n        {getFormattedDate()}\n      </a>\n      <div className={isOpen ? \"datepicker_pop open\" : \"datepicker_pop\"}>\n        <DayPicker onDayClick={day => toggleDatePicker(day)} />\n      </div>\n    </div>\n  );\n}\n\nfunction SelectboxHour(props) {\n  const [isOpen, setOpen] = useState(false);\n  const [selected_hour, setHour] = useState(new Date(Date.now()).getHours());\n  const hourlist = [];\n  for (var i = 0; i < 24; i++) {\n    hourlist.push(i);\n  }\n\n  function select_hour(h) {\n    setHour(h);\n    setOpen(false);\n  }\n\n  function open_selector() {\n    setOpen(!isOpen);\n    document.querySelector(\".dim\").style.display = \"block\";\n    document\n      .querySelector(\".dim\")\n      .addEventListener(\"click\", background_listner);\n\n    function background_listner() {\n      setOpen(false);\n      document.querySelector(\".dim\").style.display = \"none\";\n      document\n        .querySelector(\".dim\")\n        .removeEventListener(\"click\", background_listner);\n    }\n  }\n\n  const list = hourlist.map((hour, index) => {\n    return (\n      <div className=\"hour_items\" key={index} onClick={() => select_hour(hour)}>\n        <p>{hour}</p>\n      </div>\n    );\n  });\n  return (\n    <div className=\"selectbox_hour\">\n      <input type=\"hidden\" name=\"selectedHour\" value={selected_hour}></input>\n      <a className=\"selected_hour\" onClick={() => open_selector()}>\n        {selected_hour} hr\n      </a>\n      <div className={isOpen ? \"hourpicker_pop open\" : \"hourpicker_pop\"}>\n        {list}\n      </div>\n    </div>\n  );\n}\n\nfunction SelectboxMin(props) {\n  const [isOpen, setOpen] = useState(false);\n  const [selected_hour, setHour] = useState(new Date(Date.now()).getMinutes());\n  const minlist = [];\n  for (var i = 0; i < 60; i++) {\n    minlist.push(i);\n  }\n\n  function select_min(m) {\n    setHour(m);\n    setOpen(false);\n  }\n\n  function open_selector() {\n    setOpen(!isOpen);\n    document.querySelector(\".dim\").style.display = \"block\";\n    document\n      .querySelector(\".dim\")\n      .addEventListener(\"click\", background_listner);\n\n    function background_listner() {\n      setOpen(false);\n      document.querySelector(\".dim\").style.display = \"none\";\n      document\n        .querySelector(\".dim\")\n        .removeEventListener(\"click\", background_listner);\n    }\n  }\n\n  const list = minlist.map((min, index) => {\n    return (\n      <div className=\"min_items\" onClick={() => select_min(min)} key={index}>\n        <p>{min}</p>\n      </div>\n    );\n  });\n  return (\n    <div className=\"selectbox_min\">\n      <input type=\"hidden\" name=\"selectedMin\" value={selected_hour}></input>\n      <a className=\"selected_min\" onClick={() => open_selector()}>\n        {selected_hour} min\n      </a>\n      <div className={isOpen ? \"minpicker_pop open\" : \"minpicker_pop\"}>\n        {list}\n      </div>\n    </div>\n  );\n}\n\nfunction SettingTime(props) {\n  const type = props.type;\n\n  if (type === 0) {\n    return (\n      <div className=\"set_of_timeset\">\n        <SelectboxDate></SelectboxDate>\n        <SelectboxHour></SelectboxHour>\n        <SelectboxMin></SelectboxMin>\n      </div>\n    );\n  } else if (type === 1) {\n    return (\n      <div className=\"set_of_timeset\">\n        <SelectboxHour></SelectboxHour>\n        <SelectboxMin></SelectboxMin>\n      </div>\n    );\n  } else if (type === 2) {\n    return (\n      <div className=\"set_of_timeset\">\n        <SelectboxDay></SelectboxDay>\n        <SelectboxHour></SelectboxHour>\n        <SelectboxMin></SelectboxMin>\n      </div>\n    );\n  } else if (type === 3) {\n    return (\n      <div className=\"set_of_timeset\">\n        <SelectboxHour></SelectboxHour>\n        <SelectboxMin></SelectboxMin>\n      </div>\n    );\n  }\n}\n\nclass Announcement extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      current_item: 0,\n      opened_selectbox: false,\n      message_type: 1,\n      uploadImage: \"\",\n      isOpen_btn_modal: false,\n      message_btns: [],\n      messages: [],\n      origin_messages: [],\n      onEditing: 0,\n      editId: 0\n    };\n  }\n\n  toggleSelectbox() {\n    this.setState({\n      opened_selectbox: !this.state.opened_selectbox\n    });\n  }\n\n  toggleAddBtnModal() {\n    this.setState({ isOpen_btn_modal: !this.state.isOpen_btn_modal });\n  }\n\n  toggleManipulationBtns(event) {\n    event.currentTarget.nextSibling.classList.toggle('active');\n    return false;\n  }\n\n  setInlineBtns() {\n    const dataset = {\n        text: document.forms[1].inline_text.value,\n        url: document.forms[1].inline_url.value\n      }\n  \n      this.setState({message_btns: [...this.state.message_btns, dataset], isOpen_btn_modal: false})\n      document.forms[1].inline_text.value = '';\n      document.forms[1].inline_url.value = '';\n  }\n\n  deleteInlineBtn(index) {\n    const btns = this.state.message_btns;\n    if (index === 0) {\n        btns.shift();\n        this.setState({message_btns: btns});\n    } else if (index === btns.length - 1) {\n        btns.pop();\n        this.setState({message_btns: btns})\n    } else {\n      const merge_left = btns.slice(0, index);\n      const merge_right = btns.slice(index + 1);\n      \n      this.setState({message_btns: merge_left.concat(merge_right)})\n    }\n  }\n\n  editInlineBtn(index) {\n    this.deleteInlineBtn(index);\n    this.setState({isOpen_btn_modal: true});\n  }\n\n  getInlineBtns() {\n    const btns = this.state.message_btns;\n    if (btns) {\n      return btns.map((btn, index) => {\n        return (\n          <div className=\"inline_btn\" key={index}>\n            <p>\n              {btn.text}\n            </p>\n            <div className=\"icon elipse_icon\" onClick={(ev) => this.toggleManipulationBtns(ev)}></div>\n            <div className=\"inline_btn_manipulate\">\n              <i className=\"icon edit_icon\" onClick={() => this.editInlineBtn(index)}></i>\n              <i className=\"icon delete_icon\" onClick={() => this.deleteInlineBtn(index)}></i>\n            </div>\n          </div>\n        )\n      })\n    }\n  }\n\n  change_item(num) {\n    if (typeof num === \"number\") {\n      this.setState({\n        current_item: num,\n        opened_selectbox: false\n      });\n    }\n  }\n\n  uploadedImage(event) {\n    const file = event.target.files[0];\n    if (file.size > 5 * 1024 * 1024) {\n      alert(\"File size should be less than 5MB\");\n      return false;\n    }\n    this.makePreview(file);\n    this.setState({ uploadImage: file });\n  }\n\n  makePreview(file) {\n    const fr = new FileReader();\n\n    fr.onload = function(e) {\n      const img_el = document.createElement(\"img\");\n      img_el.setAttribute(\"src\", e.target.result);\n\n      const target_el = document.querySelector(\".img_preview\");\n      while (target_el.firstChild) {\n        target_el.removeChild(target_el.firstChild);\n      }\n\n      document.querySelector(\".img_preview\").appendChild(img_el);\n    };\n\n    fr.readAsDataURL(file);\n  }\n\n  sendTestMsg() {}\n\n  changeActiveAnnounce(index) {\n    const pre_msg = this.state.origin_messages[index];\n\n    const buttons = JSON.parse(pre_msg.buttons);\n    if (buttons) {\n        this.setState({\n            current_item: parseInt(pre_msg.schedule_type),\n            message_btns: [...this.state.message_btns, ...buttons]\n        })\n    }\n    \n    document.forms[0].announce_txt.value = pre_msg.content;\n\n  }\n\n  deleteAnnounce(index) {\n    Axios.post('/delAnnounce', {\n        chat_id : window.localStorage.getItem('chat_id'),\n        ann_id: this.state.origin_messages[index].schedule_id\n    }).then((res) => {\n        if (res.data) {\n            this.getAnnouncement()\n        }\n    })\n  }\n\n  registerAnnounceMsg() {\n    const announce_type = document.forms[0].announceType.value;\n\n    const selected_hour = document.forms[0].selectedHour.value;\n    const selected_min = document.forms[0].selectedMin.value;\n    let selected_date, selected_month, selected_monthofday;\n\n    if (document.forms[0].selectedDate) {\n      selected_date = document.forms[0].selectedDate.value.split(\"-\");\n      selected_month = selected_date[1];\n      selected_monthofday = selected_date[2];\n    }\n\n    let selected_weekofday = \"\";\n    if (document.forms[0].selected_weekofday) {\n      selected_weekofday = JSON.parse(document.forms[0].selectedDay.value);\n    }\n\n    let content = \"\";\n    if (this.state.message_type) {\n      content = document.forms[0].announce_txt.value;\n    }\n\n    Axios.post(\"/setAnnounce\", {\n      chat_id: window.localStorage.getItem(\"chat_id\"),\n      type: announce_type,\n      month: selected_month,\n      monthofday: selected_monthofday,\n      hour: selected_hour,\n      min: selected_min,\n      weekofday: selected_weekofday,\n      content: content,\n      content_type: this.state.message_type,\n      content_img: this.state.uploadImage,\n      buttons: JSON.stringify(this.state.message_btns),\n      onEditing: this.state.onEditing,\n      id: this.state.editId\n    }).then(() => {\n        this.getAnnouncement();\n        document.forms[0].announce_txt.value = '';\n    })\n  }\n\n  getAnnouncement() {\n    Axios.post('/getAnnounce', {chat_id: window.localStorage.getItem('chat_id')})\n    .then((res) => {\n        if (res.data) {\n            this.setState({\n                messages: res.data.map((msg, index) => {\n                    return (\n                        <div className=\"message_list\" key={index} onClick={() => this.changeActiveAnnounce(index)}>\n                            <p className=\"savedMsg_content\">\n                                {msg.content}\n                            </p>\n                            <p className=\"savedMsg_type\">\n                                {msg.schedule_type === '0' ? 'once' : msg.schedule_type === '1' ? 'daily' : msg.schedule_type === '2' ? 'weekly' : msg.schedule_type === '3' ? 'montly' : null}\n                            </p>\n                            {this.verifyExpire(msg)}\n                            <div className=\"savedMsg_manipulation_btns_wrap\">\n                                <a className=\"savedMsg_del_btn\" onClick={() => this.deleteAnnounce(index)}>Delete</a>\n                            </div>\n                        </div>\n                    )\n                }),\n                origin_messages: res.data\n            })\n            \n        } else {\n            this.setState({\n                messages: [],\n                origin_messages: []\n            })\n        }\n    })\n  }\n\n  verifyExpire(msg) {\n    const cur_time = new Date(Date.now());\n    let comparison_time = new Date();\n    comparison_time.setMonth(msg.schedule_month);\n    comparison_time.setDate(msg.schedule_dayofmonth);\n    comparison_time.setHours(msg.schedule_hour);\n    comparison_time.setMinutes(msg.schedule_min);\n    \n    if (cur_time > comparison_time) {\n        return (\n            <span className=\"expired_msg\">expried</span>\n        )\n    } else {\n        return null;\n    }\n    \n  }\n\n  componentDidMount() {\n    this.getAnnouncement();\n  }\n\n  render() {\n    return (\n      <div>\n        <h2 className=\"seg_title\">Create an announcement</h2>\n        <form className=\"announcement_seg\" method=\"post\">\n          <div className=\"announce_type announcement_row\">\n            <p className=\"announce_label\">Repeat:</p>\n            <div className=\"selectbox_wrap\">\n              <input\n                type=\"hidden\"\n                name=\"announceType\"\n                value={this.state.current_item}\n              ></input>\n              <a\n                className=\"announce_selectbox\"\n                onClick={() => this.toggleSelectbox()}\n              >\n                {this.state.current_item === 0\n                  ? \"once\"\n                  : this.state.current_item === 1\n                  ? \"everyday\"\n                  : this.state.current_item === 2\n                  ? \"everyweek\"\n                  : this.state.current_item === 3\n                  ? \"everymonth\"\n                  : \"\"}\n              </a>\n              <div\n                className={\n                  this.state.opened_selectbox ? \"selectbox open\" : \"selectbox\"\n                }\n              >\n                <p onClick={() => this.change_item(0)}>once</p>\n                <p onClick={() => this.change_item(1)}>everyday</p>\n                <p onClick={() => this.change_item(2)}>everyweek</p>\n                <p onClick={() => this.change_item(3)}>everymonth</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"announce_type announcement_row\">\n            <p className=\"announce_label\">Date & Time:</p>\n            <div className=\"selectbox_wrap\">\n              <SettingTime type={this.state.current_item}></SettingTime>\n            </div>\n          </div>\n          <div className=\"announce_type announcement_row\">\n            <p className=\"announce_label\">Message:</p>\n            <div className=\"editable_message\">\n              {this.state.message_type ? (\n                <textarea\n                  name=\"announce_txt\"\n                ></textarea>\n              ) : (\n                <div className=\"img_preview\"></div>\n              )}\n\n              <div className=\"changeable_types\">\n                <i\n                  className={\n                    this.state.message_type\n                      ? \"icon text_icon active\"\n                      : \"icon text_icon\"\n                  }\n                  onClick={() => this.setState({ message_type: 1 })}\n                ></i>\n                <span> | </span>\n                <label>\n                  <input\n                    type=\"file\"\n                    name=\"announce_img\"\n                    onChange={ev => this.uploadedImage(ev)}\n                  ></input>\n                  <i\n                    className={\n                      this.state.message_type\n                        ? \"icon picture_icon\"\n                        : \"icon picture_icon active\"\n                    }\n                    onClick={() => this.setState({ message_type: 0 })}\n                  ></i>\n                </label>\n              </div>\n            </div>\n          </div>\n          <div className=\"announce_type announcement_row\">\n            <p>\n               \n            </p>\n            <p className=\"announce_desc_add\">\n            {/* You can style your announcements using markdown or HTML. You can view detailed styling options here. */}\n            </p>\n          </div>\n          <div className=\"announce_type announcement_row\">\n            <p className=\"announce_label\">Buttons:</p>\n            {this.state.message_btns && this.state.message_btns.length === 0 ? (\n              <div\n                className=\"icon add_btn\"\n                onClick={() => this.toggleAddBtnModal()}\n              ></div>\n            ) : (\n              <div className=\"inline_btns_wrap\">\n                {this.getInlineBtns()}\n                <div\n                  className=\"icon add_btn\"\n                  onClick={() => this.toggleAddBtnModal()}\n                ></div>\n              </div>\n            )}\n          </div>\n          <div className=\"announce_btn_wrap announcement_row\">\n            <div></div>\n            <div>\n              <a className=\"testsend_btn\" onClick={() => this.sendTestMsg()}>\n                Test Send\n              </a>\n              <a\n                className=\"send_btn\"\n                onClick={() => this.registerAnnounceMsg()}\n              >\n                Send\n              </a>\n            </div>\n          </div>\n        </form>\n\n        {this.state.messages.length !== 0 ?\n          <div className=\"history_messages\">\n            <h2>Saved Announcements</h2>\n            <div className=\"savedMsg_container\">\n              {this.state.messages}\n            </div>\n          </div>\n          :\n          null}\n        \n        <div\n          className={\n            this.state.isOpen_btn_modal\n              ? \"modal add_inlineBtn_modal open\"\n              : \"modal add_inlineBtn_modal\"\n          }\n        >\n          <h2>Create a Button</h2>\n          <form>\n            <div className=\"inline_content_wrap\">\n              <span>Title:</span>\n              <div className=\"inline_content\">\n                <input\n                  type=\"text\"\n                  name=\"inline_text\"\n                  autoComplete=\"off\"\n                ></input>\n              </div>\n            </div>\n            <div className=\"inline_content_wrap\">\n              <span>URL:</span>\n              <div className=\"inline_content\">\n                <input type=\"text\" name=\"inline_url\" autoComplete=\"off\"></input>\n              </div>\n            </div>\n\n            <a className=\"add_confirm_btn\" onClick={() => this.setInlineBtns()}>\n              ADD\n            </a>\n            <a\n              className=\"cancel_btn\"\n              onClick={() => this.setState({ isOpen_btn_modal: false })}\n            >\n              CANCEL\n            </a>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Announcement;\n","import React from \"react\";\nimport Axios from \"axios\";\nimport \"../../style/css/StartMenu_reg.min.css\";\n\nclass FAQ_register extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message_type: 1,\n      uploadImage: '',\n      imageType: '',\n      messages: [],\n      origin_msg: [],\n      message_btns: [],\n      isOpen: false,\n      crr_message: [],\n      onEditing: 0,\n      editId: 0\n    };\n  }\n\n  uploadedImage(event) {\n    const file = event.target.files[0];\n    if (file.size > 5 * 1024 * 1024) {\n      alert(\"File size should be less than 5MB\");\n      return false;\n    }\n    this.makePreview(file);\n    this.setState({imageType: file.type.split('/')[1], uploadImage: file });\n  }\n\n  makePreview(file) {\n    const fr = new FileReader();\n\n    fr.onload = function(e) {\n      const img_el = document.createElement(\"img\");\n      img_el.setAttribute(\"src\", e.target.result);\n\n      const target_el = document.querySelector(\".img_preview\");\n      while (target_el.firstChild) {\n        target_el.removeChild(target_el.firstChild);\n      }\n\n      document.querySelector(\".img_preview\").appendChild(img_el);\n    };\n\n    fr.readAsDataURL(file);\n  }\n\n  removeImagePreview() {\n    const target_el = document.querySelector(\".img_preview\");\n    while (target_el.firstChild) {\n      target_el.removeChild(target_el.firstChild);\n    }\n  }\n\n  clearTexts() {\n    if (this.state.message_type) {\n      document.querySelector(\"textarea[name=welcome_txt]\").value = \"\";\n    } else {\n      this.removeImagePreview();\n    }\n\n    return true;\n  }\n\n  submit_startmenu(event) {\n    var form_data = new FormData();\n\n    form_data.append(\"chat_id\", window.localStorage.getItem(\"chat_id\"));\n    form_data.append(\"content_text\", document.forms[0].welcome_txt.value);\n    form_data.append(\"content_img\", this.state.uploadImage);\n    form_data.append(\"content_type\", this.state.message_type ? \"txt\" : \"img\");\n    form_data.append(\"img_type\", this.state.imageType);\n    form_data.append('inline_btns', JSON.stringify(this.state.message_btns));\n    if (this.state.onEditing) {\n      form_data.append('id', this.state.editId);\n    }\n\n    if (form_data.get(\"chat_id\")) {\n      Axios.post(\"pushStartMenu\", form_data).then(res => {\n        if (res.data) {\n          this.getStartMenu();\n          this.clearTexts();\n        }\n      });\n    }\n  }\n\n  deleteStartMenu() {\n    var check = window.confirm(\"Are you sure to Delete this Item?\");\n    if (check) {\n      const data = {\n        chat_id: window.localStorage.getItem(\"chat_id\")\n      };\n\n      Axios.post(\"delStartMenu\", data).then(res => {\n        if (res.data) {\n          this.getStartMenu();\n        }\n      });\n    }\n  }\n\n  convertToBase64(img, type, targetid) {\n    if (img !== null) {\n      var blob = new Blob([img], { type: \"image/\" + type });\n      var reader = new FileReader();\n\n      reader.onload = function(file) {\n        var img_tag = document.querySelector(\"#\" + targetid);\n        img_tag.src = file.target.result;\n      };\n      reader.readAsDataURL(blob);\n    }\n  }\n\n  getStartMenu() {\n    Axios.post(\"/getStartMenu\", {\n      chat_id: window.localStorage.getItem(\"chat_id\")\n    })\n\n    Axios.post(\"/getStartMenuAll\", {\n      chat_id: window.localStorage.getItem(\"chat_id\")\n    }).then(res => {\n      if (res.data) {\n        this.setState({messages: res.data.map((msg, index) => {\n          return (\n            <div className=\"message_list\" key={index}>\n              <p className=\"savedMsg_content\">\n                {msg.response_type === 'txt' ?\n                  msg.content_txt\n                  :msg.content_img}\n              </p>\n              <div className=\"savedMsg_manipulation_btns_wrap\">\n                <a className=\"savedMsg_edit_btn\" onClick={() => this.editSelectedWelcome(index)}>Edit</a>\n                <a className=\"savedMsg_del_btn\" onClick={() => this.deleteSelectdWelcome(index)}>Delete</a>\n              </div>\n            </div>\n          )\n        }), origin_msg: res.data})\n      }\n    });\n  }\n\n  editSelectedWelcome(index) {\n    const welcome_msg = this.state.origin_msg[index];\n    \n    document.forms[0].welcome_txt.value = welcome_msg.content_txt;\n    this.setState({onEditing: 1, editId: this.state.origin_msg[index].id, message_btns: JSON.parse(welcome_msg.buttons)});\n  }\n\n  deleteSelectdWelcome(index) {\n    Axios.post('/delStartMenu', {\n      chat_id: window.localStorage.getItem('chat_id'),\n      id: this.state.origin_msg[index].id\n    }).then((res) => {\n      if (res.data) {\n        this.getStartMenu();\n      }\n    })\n  }\n\n  toggleAddBtnModal() {\n    this.setState({isOpen: !this.state.isOpen})\n  }\n\n  toggleManipulationBtns(event) {\n    event.currentTarget.nextSibling.classList.toggle('active');\n    return false;\n  }\n\n  setInlineBtns() {\n    const dataset = {\n      text: document.forms[1].inline_text.value,\n      url: document.forms[1].inline_url.value\n    }\n\n    this.setState({message_btns: [...this.state.message_btns, dataset], isOpen: false})\n    document.forms[1].inline_text.value = '';\n    document.forms[1].inline_url.value = '';\n  }\n\n  deleteInlineBtn(index) {\n    const btns = this.state.message_btns;\n    if (index === 0) {\n        btns.shift();\n        this.setState({message_btns: btns});\n    } else if (index === btns.length - 1) {\n        btns.pop();\n        this.setState({message_btns: btns})\n    } else {\n      const merge_left = btns.slice(0, index);\n      const merge_right = btns.slice(index + 1);\n      \n      this.setState({message_btns: merge_left.concat(merge_right)})\n    }\n  }\n\n  editInlineBtn(index) {\n    this.deleteInlineBtn(index);\n    this.setState({isOpen: true});\n  }\n\n  getInlineBtns() {\n    const btns = this.state.message_btns;\n    if (btns) {\n      return btns.map((btn, index) => {\n        return (\n          <div className=\"inline_btn\" key={index}>\n            <p>\n              {btn.text}\n            </p>\n            <div className=\"icon elipse_icon\" onClick={(ev) => this.toggleManipulationBtns(ev)}></div>\n            <div className=\"inline_btn_manipulate\">\n              <i className=\"icon edit_icon\" onClick={() => this.editInlineBtn(index)}></i>\n              <i className=\"icon delete_icon\" onClick={() => this.deleteInlineBtn(index)}></i>\n            </div>\n          </div>\n        )\n      })\n    }\n  }\n\n  componentDidMount() {\n    this.getStartMenu();\n  }\n\n  render() {\n    return (\n      <div className=\"startmenu_section\">\n        <h2 className=\"seg_title\">\n          Welcome Message for New Members\n        </h2>\n        <form method=\"post\" className=\"startmenu_tb\">\n          <div className=\"tb_row\">\n            <p className=\"tb_label\">\n                Message:\n            </p>\n            <div className=\"editable_message\">\n                {\n                    this.state.message_type ?\n                    <textarea name=\"welcome_txt\" value={this.state.crr_message ? this.state.crr_message.content_txt : ''}>\n                      \n                    </textarea>\n                    :\n                    <div className=\"img_preview\">\n                      {this.state.crr_message ? \n                      <img src={this.state.crr_message.content_img}></img>\n                      : \n                      ''}\n                    </div>\n                }\n                \n                <div className=\"changeable_types\">\n                    <i className={this.state.message_type ? \"icon text_icon active\" : \"icon text_icon\"} onClick={() => this.setState({message_type: 1})}></i>\n                    <span> | </span>\n                    <label>\n                        <input type=\"file\" name=\"announce_img\" onChange={(ev) => this.uploadedImage(ev)}></input>\n                        <i className={this.state.message_type ? \"icon picture_icon\" : \"icon picture_icon active\"} onClick={() => this.setState({message_type: 0})}></i>\n                    </label>\n                </div>\n            </div>\n          </div>\n          <div className=\"tb_row\">\n            <p>\n               \n            </p>\n            <p className=\"welcome_desc_add\">\n            {/* You can style your welcome message using markdown or HTML. Type [user] to mention a member’s name. You can view detailed styling options here. */}\n            </p>\n          </div>\n          <div className=\"tb_row\">\n            <p className=\"tb_label\">\n                Buttons:\n            </p>\n            {\n              this.state.message_btns && this.state.message_btns.length === 0 ?\n              <div className=\"icon add_btn\" onClick={() => this.toggleAddBtnModal()}>\n\n              </div>\n              :\n              <div className=\"inline_btns_wrap\">\n                {this.getInlineBtns()}\n                <div className=\"icon add_btn\" onClick={() => this.toggleAddBtnModal()}></div>\n              </div>\n              \n            }\n          </div>\n          <div className=\"tb_row startmenu_btn_wrap\">\n              <div></div>\n              <div>\n                  <a className=\"testsend_btn\" onClick={() => this.sendTestMsg()}>Test Send</a>\n                  <a className=\"send_btn\" onClick={(ev) => this.submit_startmenu(ev)}>Save</a>\n              </div>\n          </div>\n        </form>\n        {this.state.messages.length !== 0 ?\n          <div className=\"history_messages\">\n            <h2>Saved Welcome Messages</h2>\n            <p>If you have saved more than one, welcome messages will be selected randomly.</p>\n            <div className=\"savedMsg_container\">\n              {this.state.messages}\n            </div>\n          </div>\n          :\n          null}\n        <div className={this.state.isOpen ? 'modal add_inlineBtn_modal open' : 'modal add_inlineBtn_modal'}>\n          <h2>Create a Button</h2>\n          <form>\n            <div className=\"inline_content_wrap\">\n              <span>Title:</span>\n              <div className=\"inline_content\">\n                <input type=\"text\" name=\"inline_text\" autoComplete=\"off\"></input>\n              </div>\n \n            </div>\n            <div className=\"inline_content_wrap\">\n              <span>URL:</span>\n              <div className=\"inline_content\">\n                <input type=\"text\" name=\"inline_url\" autoComplete=\"off\"></input>\n              </div>\n            </div>\n\n            <a className=\"add_confirm_btn\" onClick={() => this.setInlineBtns()}>ADD</a>\n            <a className=\"cancel_btn\" onClick={() => this.setState({isOpen: false})}>CANCEL</a>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FAQ_register;\n","import React, { useState } from \"react\";\nimport Axios from \"axios\";\nimport '../../style/css/AutoResponse.min.css'\n\nclass AutoResponce extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      current_item: 0,\n      opened_selectbox: false,\n      message_type: 1,\n      uploadImage: \"\",\n      isOpen_btn_modal: false,\n      message_btns: [],\n      messages: [],\n      origin_messages: [],\n      keyword_type: 0,\n      onEditing: 0,\n      editId: 0\n    };\n  }\n\n  toggleSelectbox() {\n    this.setState({\n      opened_selectbox: !this.state.opened_selectbox\n    });\n  }\n\n  toggleAddBtnModal() {\n    this.setState({ isOpen_btn_modal: !this.state.isOpen_btn_modal });\n  }\n\n  toggleManipulationBtns(event) {\n    event.currentTarget.nextSibling.classList.toggle('active');\n    return false;\n  }\n\n  setInlineBtns() {\n    const dataset = {\n        text: document.forms[1].inline_text.value,\n        url: document.forms[1].inline_url.value\n      }\n  \n      this.setState({message_btns: [...this.state.message_btns, dataset], isOpen_btn_modal: false})\n      document.forms[1].inline_text.value = '';\n      document.forms[1].inline_url.value = '';\n  }\n\n  deleteInlineBtn(index) {\n    const btns = this.state.message_btns;\n    if (index === 0) {\n        btns.shift();\n        this.setState({message_btns: btns});\n    } else if (index === btns.length - 1) {\n        btns.pop();\n        this.setState({message_btns: btns})\n    } else {\n      const merge_left = btns.slice(0, index);\n      const merge_right = btns.slice(index + 1);\n      \n      this.setState({message_btns: merge_left.concat(merge_right)})\n    }\n  }\n\n  editInlineBtn(index) {\n    this.deleteInlineBtn(index);\n    this.setState({isOpen_btn_modal: true});\n  }\n\n  getInlineBtns() {\n    const btns = this.state.message_btns;\n    if (btns) {\n      return btns.map((btn, index) => {\n        return (\n          <div className=\"inline_btn\" key={index}>\n            <p>\n              {btn.text}\n            </p>\n            <div className=\"icon elipse_icon\" onClick={(ev) => this.toggleManipulationBtns(ev)}></div>\n            <div className=\"inline_btn_manipulate\">\n              <i className=\"icon edit_icon\" onClick={() => this.editInlineBtn(index)}></i>\n              <i className=\"icon delete_icon\" onClick={() => this.deleteInlineBtn(index)}></i>\n            </div>\n          </div>\n        )\n      })\n    }\n  }\n\n  change_item(num) {\n    if (typeof num === \"number\") {\n      this.setState({\n        current_item: num,\n        opened_selectbox: false\n      });\n    }\n  }\n\n  uploadedImage(event) {\n    const file = event.target.files[0];\n    if (file.size > 5 * 1024 * 1024) {\n      alert(\"File size should be less than 5MB\");\n      return false;\n    }\n    this.makePreview(file);\n    this.setState({ uploadImage: file });\n  }\n\n  makePreview(file) {\n    const fr = new FileReader();\n\n    fr.onload = function(e) {\n      const img_el = document.createElement(\"img\");\n      img_el.setAttribute(\"src\", e.target.result);\n\n      const target_el = document.querySelector(\".img_preview\");\n      while (target_el.firstChild) {\n        target_el.removeChild(target_el.firstChild);\n      }\n\n      document.querySelector(\".img_preview\").appendChild(img_el);\n    };\n\n    fr.readAsDataURL(file);\n  }\n\n  sendTestMsg() {}\n\n  changeActiveFAQ(index) {\n    const pre_msg = this.state.origin_messages[index];\n\n    const buttons = JSON.parse(pre_msg.buttons);\n    if (buttons) {\n        this.setState({\n            current_item: parseInt(pre_msg.schedule_type),\n            message_btns: [...this.state.message_btns, ...buttons]\n        })\n    }\n    \n    document.forms[0].faq_txt.value = pre_msg.faq_response;\n    document.forms[0].keywords.value = pre_msg.faq_content;\n  }\n\n  editSelectedFAQ(index) {\n    this.changeActiveFAQ(index);\n    this.setState({onEditing: 1, editId: this.state.origin_messages[index].id});\n    return false;\n  }\n\n  deleteSelectedFAQ(index) {\n      Axios.post('/delFaqlist', {\n          id: this.state.origin_messages[index].id,\n          chat_id: window.localStorage.getItem('chat_id')\n      }).then((res) => {\n        if (res.data) {\n            this.getFaqList();\n        }\n      })\n  }\n\n  registerFAQMsg() {\n\n    let content = \"\";\n    if (this.state.message_type) {\n      content = document.forms[0].faq_txt.value;\n    }\n\n    var form_data = new FormData();\n        \n    form_data.append('chat_id', window.localStorage.getItem('chat_id'))\n    form_data.append('keyword', document.forms[0].keywords.value)\n    form_data.append('response', content)\n    form_data.append('response_img', this.state.uploadImage)\n    form_data.append('response_type', this.state.message_type ? 'txt' : 'img')\n    form_data.append('img_type', this.state.imageType)\n    form_data.append('keyword_type', this.state.keyword_type)\n    form_data.append('inline_btns', JSON.stringify(this.state.message_btns))\n    form_data.append('onEditing', this.state.onEditing);\n    if (this.state.onEditing) {\n        form_data.append('id', this.state.editId);\n    }\n\n    if (form_data.get('chat_id')) {\n        Axios.post('pushFaqlist', form_data)\n            .then((res) => {\n                if (res.data) {\n                    this.getFaqList();\n                    // this.clearTexts();\n                }\n            })\n    } \n  }\n\n  getFaqList() {\n    const chat_id = window.localStorage.getItem('chat_id')\n\n    if (chat_id.length !== 0) {\n        Axios.post('getFaqlist', {chat_id: chat_id})\n        .then((res) => {\n            if (res.data) {\n                this.setState({\n                    messages: res.data.map((msg, index) => {\n                        return (\n                            <div className=\"message_list\" key={index} onClick={() => this.changeActiveFAQ(index)}>\n                                <p>\n                                    Keywords\n                                </p>\n                                <p className=\"savedMsg_keywords\">\n                                    {msg.faq_content}\n                                </p>\n                                <p className=\"savedMsg_content\">\n                                    {msg.faq_response}\n                                </p>\n                                <div className=\"savedMsg_manipulation_btns_wrap\">\n                                    <a className=\"savedMsg_edit_btn\" onClick={() => this.editSelectedFAQ(index)}>Edit</a>\n                                    <a className=\"savedMsg_del_btn\" onClick={() => this.deleteSelectedFAQ(index)}>Delete</a>\n                                </div>\n                            </div>\n                        )\n                    }),\n                    origin_messages: res.data\n                })\n            }\n        })\n    }\n  }\n\n  componentDidMount() {\n    this.getFaqList()\n  }\n\n  render() {\n    return (\n      <div>\n        <h2 className=\"seg_title\">Create Auto-Response</h2>\n        <form className=\"autores_tb\" method=\"post\">\n        \n          <div className=\"tb_row\">\n            <p className=\"tb_label\">Keywords:</p>\n            <div className=\"tb_keyword\">\n                <input type=\"text\" name=\"keywords\" placeholder=\"Keyword 1, Keyword 2, Keyword 3\"></input>\n                <p className=\"autores_desc_add\">\n                    Separate keywords with comma(,). Keywords are not case sensitive.\n                </p>\n            </div>\n          </div>\n          <div className=\"tb_row\">\n              <div className=\"tb_cell\"></div>\n              <div className=\"tb_cell\">\n                <input type=\"radio\" className=\"keyword_type\" name=\"keyword_type\" value=\"0\" onChange={() => this.setState({keyword_type: 0})} defaultChecked></input>\n                <label>Must contain one of these words</label>\n\n                <input type=\"radio\" className=\"keyword_type\" name=\"keyword_type\" value=\"1\" onChange={() => this.setState({keyword_type: 1})}></input>\n                <label>Must contain two or more of the keywords</label>\n              </div>\n          </div>\n          <div className=\"tb_row\">\n            <p className=\"tb_label\">Message:</p>\n            <div className=\"editable_message\">\n              {this.state.message_type ? (\n                <textarea\n                  name=\"faq_txt\"\n                ></textarea>\n              ) : (\n                <div className=\"img_preview\"></div>\n              )}\n\n              <div className=\"changeable_types\">\n                <i\n                  className={\n                    this.state.message_type\n                      ? \"icon text_icon active\"\n                      : \"icon text_icon\"\n                  }\n                  onClick={() => this.setState({ message_type: 1 })}\n                ></i>\n                <span> | </span>\n                <label>\n                  <input\n                    type=\"file\"\n                    name=\"announce_img\"\n                    onChange={ev => this.uploadedImage(ev)}\n                  ></input>\n                  <i\n                    className={\n                      this.state.message_type\n                        ? \"icon picture_icon\"\n                        : \"icon picture_icon active\"\n                    }\n                    onClick={() => this.setState({ message_type: 0 })}\n                  ></i>\n                </label>\n              </div>\n            </div>\n          </div>\n          <div className=\"tb_row\">\n            <p>\n               \n            </p>\n            <p className=\"autores_desc_add\">\n            {/* You can style your announcements using markdown or HTML. You can view detailed styling options here. */}\n            </p>\n          </div>\n          <div className=\"tb_row\">\n            <p className=\"tb_label\">Buttons:</p>\n            {this.state.message_btns && this.state.message_btns.length === 0 ? (\n              <div\n                className=\"icon add_btn\"\n                onClick={() => this.toggleAddBtnModal()}\n              ></div>\n            ) : (\n              <div className=\"inline_btns_wrap\">\n                {this.getInlineBtns()}\n                <div\n                  className=\"icon add_btn\"\n                  onClick={() => this.toggleAddBtnModal()}\n                ></div>\n              </div>\n            )}\n          </div>\n          <div className=\"autores_btn_wrap tb_row\">\n            <div></div>\n            <div>\n              <a className=\"testsend_btn\" onClick={() => this.sendTestMsg()}>\n                Test Send\n              </a>\n              <a\n                className=\"send_btn\"\n                onClick={() => this.registerFAQMsg()}\n              >\n                Save\n              </a>\n            </div>\n          </div>\n        </form>\n\n        {this.state.messages.length !== 0 ?\n          <div className=\"history_messages\">\n            <h2>Responses</h2>\n            <div className=\"savedMsg_container\">\n              {this.state.messages}\n            </div>\n          </div>\n          :\n          null}\n        \n        <div\n          className={\n            this.state.isOpen_btn_modal\n              ? \"modal add_inlineBtn_modal open\"\n              : \"modal add_inlineBtn_modal\"\n          }\n        >\n          <h2>Create a Button</h2>\n          <form>\n            <div className=\"inline_content_wrap\">\n              <span>Title:</span>\n              <div className=\"inline_content\">\n                <input\n                  type=\"text\"\n                  name=\"inline_text\"\n                  autoComplete=\"off\"\n                ></input>\n              </div>\n            </div>\n            <div className=\"inline_content_wrap\">\n              <span>URL:</span>\n              <div className=\"inline_content\">\n                <input type=\"text\" name=\"inline_url\" autoComplete=\"off\"></input>\n              </div>\n            </div>\n\n            <a className=\"add_confirm_btn\" onClick={() => this.setInlineBtns()}>\n              ADD\n            </a>\n            <a\n              className=\"cancel_btn\"\n              onClick={() => this.setState({ isOpen_btn_modal: false })}\n            >\n              CANCEL\n            </a>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AutoResponce;\n","import React from 'react';\nimport Title from '../Section_title';\nimport Content_Tabs from '../Modules/TabMenu';\nimport Announcements from '../Modules/Announcement';\nimport WelcomeMessage from '../Modules/StartMenu';\nimport AutoResponce from '../Modules/AutoResponce';\n\nimport '../../style/css/Interactions.min.css';\n\nfunction Segment_Tabs(props) {\n    switch (props.tab) {\n      case 1: {\n        return <Announcements botId={props.botId}></Announcements>\n      }\n      case 2: {\n          return <WelcomeMessage botId={props.botId}></WelcomeMessage>\n      }\n      case 3: {\n          return <AutoResponce botId={props.botId}></AutoResponce>\n      }\n    }\n  }\n\nclass Interactions extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            active_tab: 1\n        }\n    }\n    \n    set_activeTab(num) {\n        return this.setState({ active_tab: num });\n    }\n\n    render() {\n        return (\n            <div className=\"section_interaction\">\n                <Title title=\"Interaction\"></Title>\n                <Content_Tabs opt1={'Announcements'} opt2={'Welcome Message'} opt3={'Auto-Responder'} active_tab={this.set_activeTab.bind(this)}></Content_Tabs>\n                <div className=\"content_tab\">\n                    <Segment_Tabs tab={this.state.active_tab} botId={this.props.botId}></Segment_Tabs>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Interactions;","import React from 'react';\nimport Axios from 'axios';\nimport '../../style/css/AntiSpam.min.css';\n\nfunction FieldRow(props) {\n    function getFieldName(name) {\n        var fieldName = '';\n\n        switch (name) {\n            case 'anti_image' : {\n                fieldName = 'Delete Images'\n                break;\n            }\n            case 'anti_url' : {\n                fieldName = 'Delete URLs'\n                break;\n            }\n            case 'anti_forward' : {\n                fieldName = 'Delete Forwarded Messages'\n                break;\n            }\n            case 'anti_voice' : {\n                fieldName = 'Delete Voice Messages'\n                break;\n            }\n            case 'anti_gif' : {\n                fieldName = 'Delete GIFs'\n                break;\n            }\n            case 'anti_sticker' : {\n                fieldName = 'Delete Stickers'\n                break;\n            }\n            case 'anti_join_message' : {\n                fieldName = 'Delete Join Messages'\n                break;\n            } \n            case 'anti_left_message' : {\n                fieldName = 'Delete Leave Messages'\n                break;\n            } \n            case 'anti_longname' : {\n                fieldName = 'Block Long Name Spammers'\n                break;\n            } \n            case 'anti_flood' : {\n                fieldName = 'Anti-Flood'\n                break;\n            } \n        }\n\n        return fieldName;\n    }\n\n    function updateAntiOption(field) {\n        Axios.post('/updateAnti', {\n            field: field,\n            chat_id: window.localStorage.getItem('chat_id')\n        }).then(res => {\n            if (res.data) {\n\n            }\n        })\n    }\n\n    return (\n        <div className=\"filter_row\">\n            <p className=\"filter_field\">\n                {getFieldName(props.name)}\n            </p>\n            <div className=\"filter_switch\">\n                <label htmlFor={props.name}>\n                    <input type=\"checkbox\" className=\"anti_filter\" name={props.name} id={props.name} onChange={() => updateAntiOption(props.name)} defaultChecked={props.isActive}></input>\n                    <div className=\"custom_chbox\"></div>\n                    <div className=\"custom_chbox_circle\"></div>\n                </label>\n            </div>\n        </div>\n    )\n}\n\nclass AntiSpam extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            anti_options: [],\n            blacklist: []\n        }\n    }\n\n    componentDidMount() {\n        Axios.post('/getAnti', {\n            chat_id: window.localStorage.getItem('chat_id')\n        }).then((res) => {\n            if (res.data) {\n                this.setState({anti_options: res.data[0]})\n            }\n        })\n\n        this.getWordData();\n        this.getWhitelistURL();\n    }\n\n    submit_blacklist () {\n        const val = document.forms[1].blacklist.value;\n\n        if (val.length !== 0) {\n            const chat_id = window.localStorage.getItem('chat_id')\n\n            if (chat_id.length !== 0) {\n                Axios.post('pushWordData', {word: val, chat_id: chat_id})\n                .then((res) => {\n                    if (res.data) {\n                        this.getWordData();\n                        document.forms[1].blacklist.value = '';\n                    }\n                })\n            } else {\n                alert('There is any valid key of chatting information')\n                return false\n            }\n        \n        }\n    }\n\n    submit_whitelisturl() {\n        let val = document.forms[1].whitelisturl.value;\n\n        if (val.length !== 0) {\n            const chat_id = window.localStorage.getItem('chat_id')\n            const isPattern = this.checkIfPattern(val);\n\n            if (isPattern === false) {\n                alert('It isn\\'t a valid URL.');\n                return false;\n            }\n\n            if (chat_id.length !== 0) {\n                Axios.post('/pushWhitelist', {pattern: val, chat_id: chat_id})\n                .then((res) => {\n                    if (res.data) {\n                        this.getWhitelistURL();\n                        document.forms[1].whitelisturl.value = ''\n                    }\n                })\n            } else {\n                alert('There is any valid key of chatting information')\n                return false\n            }\n        \n        }\n    }\n\n    /**\n     * \n     * @param {string} val\n     * @returns {boolean} True = pattern, False = common\n     * \n     */\n    checkIfPattern (val) {\n        if (typeof val === 'string') {\n            const regx_test = /^\\/[\\s\\S]*\\/$/\n            const regx = /(https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|www\\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9]+\\.[^\\s]{2,}|www\\.[a-zA-Z0-9]+\\.[^\\s]{2,}|[a-zA-Z0-9]+\\.[^\\s]{2,})/\n            if (!regx_test.test(val) && regx.test(val)) {\n                return 'common';\n            } else if (regx_test.test(val) && regx.test(val)) {\n                return 'pattern';\n            } else {\n                return false;\n            }\n        }    \n    }\n\n    getWordData() {\n        Axios.post('getWordData', {chat_id: window.localStorage.getItem('chat_id')})\n        .then((res) => {\n            if (res.data) {\n                this.setState({blacklist: res.data.map((blacklist, index) => {\n                    return (\n                        <div className=\"blacklist_item\" key={index}>\n                            <p>\n                                {blacklist.word_name.length > 5 ? blacklist.word_name.substr(0,3) + '...' : blacklist.word_name}\n                            </p>\n                            <span className=\"del_icon\" onClick={() => this.deleteBlacklist(blacklist.idx)}>&times;</span>\n                        </div>\n                    )\n                })})\n            } else {\n                this.setState({blacklist: []})\n            }\n        })\n    }\n\n    getWhitelistURL() {\n        Axios.post('/getWhitelist', {\n            chat_id: window.localStorage.getItem('chat_id')\n        }).then(res => {\n            if (res.data) {\n                this.setState({whitelistURL: res.data.map((whitelisturl, index) => {\n                    return (\n                        <div className=\"whitelisturl_item\" key={index}>\n                            <p>\n                                {whitelisturl.url_pattern.length > 11 ? whitelisturl.url_pattern.substr(0, 8) + '...' : whitelisturl.url_pattern}\n                            </p>\n                            <span className=\"del_icon\" onClick={() => this.deleteWhitelistURL(whitelisturl.id)}>&times;</span>\n                        </div>\n                    )\n                })})\n            } else {\n                this.setState({whitelistURL: []})\n            }\n        })\n    }\n\n    deleteBlacklist(id) {\n        Axios.post('/delWordData', {\n            chat_id: window.localStorage.getItem('chat_id'),\n            id: id\n        }).then(res => {\n            if (res.data) {\n                this.getWordData();\n            }\n        })\n    }\n\n    deleteWhitelistURL(id) {\n        Axios.post('/delWhitelist', {\n            chat_id: window.localStorage.getItem('chat_id'),\n            id: id\n        }).then(res => {\n            if (res.data) {\n                this.getWhitelistURL();\n            }\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"antispam_section\">\n                <h2 className=\"seg_title\">\n                Anti-Spam\n                </h2>\n                <form className=\"anti_options\">\n                    <h5>Filters</h5>\n                    <p>By using filters, the bot will automatically delete unwanted messages like photos, images, and documents.</p>\n                    <div className=\"filters\">\n                        <FieldRow name=\"anti_image\" isActive={this.state.anti_options.anti_image}></FieldRow>\n                        <FieldRow name=\"anti_url\" isActive={this.state.anti_options.anti_url}></FieldRow>\n                        <FieldRow name=\"anti_forward\" isActive={this.state.anti_options.anti_forward}></FieldRow>\n                        <FieldRow name=\"anti_voice\" isActive={this.state.anti_options.anti_voice}></FieldRow>\n                        <FieldRow name=\"anti_gif\" isActive={this.state.anti_options.anti_gif}></FieldRow>\n                        <FieldRow name=\"anti_sticker\" isActive={this.state.anti_options.anti_sticker}></FieldRow>\n                        <FieldRow name=\"anti_join_message\" isActive={this.state.anti_options.anti_join_message}></FieldRow>\n                        <FieldRow name=\"anti_left_message\" isActive={this.state.anti_options.anti_left_message}></FieldRow>\n                        <FieldRow name=\"anti_longname\" isActive={this.state.anti_options.anti_longname}></FieldRow>\n                        <FieldRow name=\"anti_flood\" isActive={this.state.anti_options.anti_flood}></FieldRow>\n                    </div>\n                </form>\n\n                <form className=\"restriction_messages\">\n                    <h5>Restrictions</h5>\n                    <p>You can restrict words, urls, and even in your chat group. These messages are automatically deleted.</p>\n                    <div className=\"restriction_module\">\n                        <h6>Blacklisted Words</h6>\n                        <p>These words will be automatically deleted by the bot and is case insensitive.</p>\n                        <div className=\"restriction_content\">\n                            <div className=\"blacklist_words\">\n                                {this.state.blacklist}\n                            </div>\n                            <input type=\"text\" name=\"blacklist\"></input>\n                            <a className=\"add_btn\" onClick={() => this.submit_blacklist()}>Add</a>\n                        </div>\n                    </div>\n                    <div className=\"restriction_module\">\n                        <h6>Whitelisted URL</h6>\n                        <p>These are the ONLY URLs that are allowed in your group. Other links will be automatically deleted.</p>\n                        <div className=\"restriction_content\">\n                            <div className=\"blacklist_words\">\n                                {this.state.whitelistURL}\n                            </div>\n                            <input type=\"text\" name=\"whitelisturl\"></input>\n                            <a className=\"add_btn\" onClick={() => this.submit_whitelisturl()}>Add</a>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default AntiSpam;","\nvar timezone = [\n    {\n      \"value\": \"Dateline Standard Time\",\n      \"abbr\": \"DST\",\n      \"offset\": -12,\n      \"isdst\": false,\n      \"text\": \"(UTC-12:00) International Date Line West\",\n      \"utc\": [\n        \"Etc/GMT+12\"\n      ]\n    },\n    {\n      \"value\": \"UTC-11\",\n      \"abbr\": \"U\",\n      \"offset\": -11,\n      \"isdst\": false,\n      \"text\": \"(UTC-11:00) Coordinated Universal Time-11\",\n      \"utc\": [\n        \"Etc/GMT+11\",\n        \"Pacific/Midway\",\n        \"Pacific/Niue\",\n        \"Pacific/Pago_Pago\"\n      ]\n    },\n    {\n      \"value\": \"Hawaiian Standard Time\",\n      \"abbr\": \"HST\",\n      \"offset\": -10,\n      \"isdst\": false,\n      \"text\": \"(UTC-10:00) Hawaii\",\n      \"utc\": [\n        \"Etc/GMT+10\",\n        \"Pacific/Honolulu\",\n        \"Pacific/Johnston\",\n        \"Pacific/Rarotonga\",\n        \"Pacific/Tahiti\"\n      ]\n    },\n    {\n      \"value\": \"Alaskan Standard Time\",\n      \"abbr\": \"AKDT\",\n      \"offset\": -8,\n      \"isdst\": true,\n      \"text\": \"(UTC-09:00) Alaska\",\n      \"utc\": [\n        \"America/Anchorage\",\n        \"America/Juneau\",\n        \"America/Nome\",\n        \"America/Sitka\",\n        \"America/Yakutat\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Standard Time (Mexico)\",\n      \"abbr\": \"PDT\",\n      \"offset\": -7,\n      \"isdst\": true,\n      \"text\": \"(UTC-08:00) Baja California\",\n      \"utc\": [\n        \"America/Santa_Isabel\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Daylight Time\",\n      \"abbr\": \"PDT\",\n      \"offset\": -7,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Pacific Time (US & Canada)\",\n      \"utc\": [\n        \"America/Dawson\",\n        \"America/Los_Angeles\",\n        \"America/Tijuana\",\n        \"America/Vancouver\",\n        \"America/Whitehorse\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Standard Time\",\n      \"abbr\": \"PST\",\n      \"offset\": -8,\n      \"isdst\": false,\n      \"text\": \"(UTC-08:00) Pacific Time (US & Canada)\",\n      \"utc\": [\n        \"America/Dawson\",\n        \"America/Los_Angeles\",\n        \"America/Tijuana\",\n        \"America/Vancouver\",\n        \"America/Whitehorse\",\n        \"PST8PDT\"\n      ]\n    },\n    {\n      \"value\": \"US Mountain Standard Time\",\n      \"abbr\": \"UMST\",\n      \"offset\": -7,\n      \"isdst\": false,\n      \"text\": \"(UTC-07:00) Arizona\",\n      \"utc\": [\n        \"America/Creston\",\n        \"America/Dawson_Creek\",\n        \"America/Hermosillo\",\n        \"America/Phoenix\",\n        \"Etc/GMT+7\"\n      ]\n    },\n    {\n      \"value\": \"Mountain Standard Time (Mexico)\",\n      \"abbr\": \"MDT\",\n      \"offset\": -6,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Chihuahua, La Paz, Mazatlan\",\n      \"utc\": [\n        \"America/Chihuahua\",\n        \"America/Mazatlan\"\n      ]\n    },\n    {\n      \"value\": \"Mountain Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": -6,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Mountain Time (US & Canada)\",\n      \"utc\": [\n        \"America/Boise\",\n        \"America/Cambridge_Bay\",\n        \"America/Denver\",\n        \"America/Edmonton\",\n        \"America/Inuvik\",\n        \"America/Ojinaga\",\n        \"America/Yellowknife\",\n        \"MST7MDT\"\n      ]\n    },\n    {\n      \"value\": \"Central America Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": -6,\n      \"isdst\": false,\n      \"text\": \"(UTC-06:00) Central America\",\n      \"utc\": [\n        \"America/Belize\",\n        \"America/Costa_Rica\",\n        \"America/El_Salvador\",\n        \"America/Guatemala\",\n        \"America/Managua\",\n        \"America/Tegucigalpa\",\n        \"Etc/GMT+6\",\n        \"Pacific/Galapagos\"\n      ]\n    },\n    {\n      \"value\": \"Central Standard Time\",\n      \"abbr\": \"CDT\",\n      \"offset\": -5,\n      \"isdst\": true,\n      \"text\": \"(UTC-06:00) Central Time (US & Canada)\",\n      \"utc\": [\n        \"America/Chicago\",\n        \"America/Indiana/Knox\",\n        \"America/Indiana/Tell_City\",\n        \"America/Matamoros\",\n        \"America/Menominee\",\n        \"America/North_Dakota/Beulah\",\n        \"America/North_Dakota/Center\",\n        \"America/North_Dakota/New_Salem\",\n        \"America/Rainy_River\",\n        \"America/Rankin_Inlet\",\n        \"America/Resolute\",\n        \"America/Winnipeg\",\n        \"CST6CDT\"\n      ]\n    },\n    {\n      \"value\": \"Central Standard Time (Mexico)\",\n      \"abbr\": \"CDT\",\n      \"offset\": -5,\n      \"isdst\": true,\n      \"text\": \"(UTC-06:00) Guadalajara, Mexico City, Monterrey\",\n      \"utc\": [\n        \"America/Bahia_Banderas\",\n        \"America/Cancun\",\n        \"America/Merida\",\n        \"America/Mexico_City\",\n        \"America/Monterrey\"\n      ]\n    },\n    {\n      \"value\": \"Canada Central Standard Time\",\n      \"abbr\": \"CCST\",\n      \"offset\": -6,\n      \"isdst\": false,\n      \"text\": \"(UTC-06:00) Saskatchewan\",\n      \"utc\": [\n        \"America/Regina\",\n        \"America/Swift_Current\"\n      ]\n    },\n    {\n      \"value\": \"SA Pacific Standard Time\",\n      \"abbr\": \"SPST\",\n      \"offset\": -5,\n      \"isdst\": false,\n      \"text\": \"(UTC-05:00) Bogota, Lima, Quito\",\n      \"utc\": [\n        \"America/Bogota\",\n        \"America/Cayman\",\n        \"America/Coral_Harbour\",\n        \"America/Eirunepe\",\n        \"America/Guayaquil\",\n        \"America/Jamaica\",\n        \"America/Lima\",\n        \"America/Panama\",\n        \"America/Rio_Branco\",\n        \"Etc/GMT+5\"\n      ]\n    },\n    {\n      \"value\": \"Eastern Standard Time\",\n      \"abbr\": \"EDT\",\n      \"offset\": -4,\n      \"isdst\": true,\n      \"text\": \"(UTC-05:00) Eastern Time (US & Canada)\",\n      \"utc\": [\n        \"America/Detroit\",\n        \"America/Havana\",\n        \"America/Indiana/Petersburg\",\n        \"America/Indiana/Vincennes\",\n        \"America/Indiana/Winamac\",\n        \"America/Iqaluit\",\n        \"America/Kentucky/Monticello\",\n        \"America/Louisville\",\n        \"America/Montreal\",\n        \"America/Nassau\",\n        \"America/New_York\",\n        \"America/Nipigon\",\n        \"America/Pangnirtung\",\n        \"America/Port-au-Prince\",\n        \"America/Thunder_Bay\",\n        \"America/Toronto\",\n        \"EST5EDT\"\n      ]\n    },\n    {\n      \"value\": \"US Eastern Standard Time\",\n      \"abbr\": \"UEDT\",\n      \"offset\": -4,\n      \"isdst\": true,\n      \"text\": \"(UTC-05:00) Indiana (East)\",\n      \"utc\": [\n        \"America/Indiana/Marengo\",\n        \"America/Indiana/Vevay\",\n        \"America/Indianapolis\"\n      ]\n    },\n    {\n      \"value\": \"Venezuela Standard Time\",\n      \"abbr\": \"VST\",\n      \"offset\": -4.5,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:30) Caracas\",\n      \"utc\": [\n        \"America/Caracas\"\n      ]\n    },\n    {\n      \"value\": \"Paraguay Standard Time\",\n      \"abbr\": \"PYT\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Asuncion\",\n      \"utc\": [\n        \"America/Asuncion\"\n      ]\n    },\n    {\n      \"value\": \"Atlantic Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": -3,\n      \"isdst\": true,\n      \"text\": \"(UTC-04:00) Atlantic Time (Canada)\",\n      \"utc\": [\n        \"America/Glace_Bay\",\n        \"America/Goose_Bay\",\n        \"America/Halifax\",\n        \"America/Moncton\",\n        \"America/Thule\",\n        \"Atlantic/Bermuda\"\n      ]\n    },\n    {\n      \"value\": \"Central Brazilian Standard Time\",\n      \"abbr\": \"CBST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Cuiaba\",\n      \"utc\": [\n        \"America/Campo_Grande\",\n        \"America/Cuiaba\"\n      ]\n    },\n    {\n      \"value\": \"SA Western Standard Time\",\n      \"abbr\": \"SWST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Georgetown, La Paz, Manaus, San Juan\",\n      \"utc\": [\n        \"America/Anguilla\",\n        \"America/Antigua\",\n        \"America/Aruba\",\n        \"America/Barbados\",\n        \"America/Blanc-Sablon\",\n        \"America/Boa_Vista\",\n        \"America/Curacao\",\n        \"America/Dominica\",\n        \"America/Grand_Turk\",\n        \"America/Grenada\",\n        \"America/Guadeloupe\",\n        \"America/Guyana\",\n        \"America/Kralendijk\",\n        \"America/La_Paz\",\n        \"America/Lower_Princes\",\n        \"America/Manaus\",\n        \"America/Marigot\",\n        \"America/Martinique\",\n        \"America/Montserrat\",\n        \"America/Port_of_Spain\",\n        \"America/Porto_Velho\",\n        \"America/Puerto_Rico\",\n        \"America/Santo_Domingo\",\n        \"America/St_Barthelemy\",\n        \"America/St_Kitts\",\n        \"America/St_Lucia\",\n        \"America/St_Thomas\",\n        \"America/St_Vincent\",\n        \"America/Tortola\",\n        \"Etc/GMT+4\"\n      ]\n    },\n    {\n      \"value\": \"Pacific SA Standard Time\",\n      \"abbr\": \"PSST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Santiago\",\n      \"utc\": [\n        \"America/Santiago\",\n        \"Antarctica/Palmer\"\n      ]\n    },\n    {\n      \"value\": \"Newfoundland Standard Time\",\n      \"abbr\": \"NDT\",\n      \"offset\": -2.5,\n      \"isdst\": true,\n      \"text\": \"(UTC-03:30) Newfoundland\",\n      \"utc\": [\n        \"America/St_Johns\"\n      ]\n    },\n    {\n      \"value\": \"E. South America Standard Time\",\n      \"abbr\": \"ESAST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Brasilia\",\n      \"utc\": [\n        \"America/Sao_Paulo\"\n      ]\n    },\n    {\n      \"value\": \"Argentina Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Buenos Aires\",\n      \"utc\": [\n        \"America/Argentina/La_Rioja\",\n        \"America/Argentina/Rio_Gallegos\",\n        \"America/Argentina/Salta\",\n        \"America/Argentina/San_Juan\",\n        \"America/Argentina/San_Luis\",\n        \"America/Argentina/Tucuman\",\n        \"America/Argentina/Ushuaia\",\n        \"America/Buenos_Aires\",\n        \"America/Catamarca\",\n        \"America/Cordoba\",\n        \"America/Jujuy\",\n        \"America/Mendoza\"\n      ]\n    },\n    {\n      \"value\": \"SA Eastern Standard Time\",\n      \"abbr\": \"SEST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Cayenne, Fortaleza\",\n      \"utc\": [\n        \"America/Araguaina\",\n        \"America/Belem\",\n        \"America/Cayenne\",\n        \"America/Fortaleza\",\n        \"America/Maceio\",\n        \"America/Paramaribo\",\n        \"America/Recife\",\n        \"America/Santarem\",\n        \"Antarctica/Rothera\",\n        \"Atlantic/Stanley\",\n        \"Etc/GMT+3\"\n      ]\n    },\n    {\n      \"value\": \"Greenland Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": -3,\n      \"isdst\": true,\n      \"text\": \"(UTC-03:00) Greenland\",\n      \"utc\": [\n        \"America/Godthab\"\n      ]\n    },\n    {\n      \"value\": \"Montevideo Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Montevideo\",\n      \"utc\": [\n        \"America/Montevideo\"\n      ]\n    },\n    {\n      \"value\": \"Bahia Standard Time\",\n      \"abbr\": \"BST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Salvador\",\n      \"utc\": [\n        \"America/Bahia\"\n      ]\n    },\n    {\n      \"value\": \"UTC-02\",\n      \"abbr\": \"U\",\n      \"offset\": -2,\n      \"isdst\": false,\n      \"text\": \"(UTC-02:00) Coordinated Universal Time-02\",\n      \"utc\": [\n        \"America/Noronha\",\n        \"Atlantic/South_Georgia\",\n        \"Etc/GMT+2\"\n      ]\n    },\n    {\n      \"value\": \"Mid-Atlantic Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": -1,\n      \"isdst\": true,\n      \"text\": \"(UTC-02:00) Mid-Atlantic - Old\",\n      \"utc\": []\n    },\n    {\n      \"value\": \"Azores Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": 0,\n      \"isdst\": true,\n      \"text\": \"(UTC-01:00) Azores\",\n      \"utc\": [\n        \"America/Scoresbysund\",\n        \"Atlantic/Azores\"\n      ]\n    },\n    {\n      \"value\": \"Cape Verde Standard Time\",\n      \"abbr\": \"CVST\",\n      \"offset\": -1,\n      \"isdst\": false,\n      \"text\": \"(UTC-01:00) Cape Verde Is.\",\n      \"utc\": [\n        \"Atlantic/Cape_Verde\",\n        \"Etc/GMT+1\"\n      ]\n    },\n    {\n      \"value\": \"Morocco Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC) Casablanca\",\n      \"utc\": [\n        \"Africa/Casablanca\",\n        \"Africa/El_Aaiun\"\n      ]\n    },\n    {\n      \"value\": \"UTC\",\n      \"abbr\": \"UTC\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Coordinated Universal Time\",\n      \"utc\": [\n        \"America/Danmarkshavn\",\n        \"Etc/GMT\"\n      ]\n    },\n    {\n      \"value\": \"GMT Standard Time\",\n      \"abbr\": \"GMT\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Edinburgh, London\",\n      \"utc\": [\n        \"Europe/Isle_of_Man\",\n        \"Europe/Guernsey\",\n        \"Europe/Jersey\",\n        \"Europe/London\"\n      ]\n    },\n    {\n      \"value\": \"British Summer Time\",\n      \"abbr\": \"BST\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Edinburgh, London\",\n      \"utc\": [\n        \"Europe/Isle_of_Man\",\n        \"Europe/Guernsey\",\n        \"Europe/Jersey\",\n        \"Europe/London\"\n      ]\n    },\n    {\n      \"value\": \"GMT Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC) Dublin, Lisbon\",\n      \"utc\": [\n        \"Atlantic/Canary\",\n        \"Atlantic/Faeroe\",\n        \"Atlantic/Madeira\",\n        \"Europe/Dublin\",\n        \"Europe/Lisbon\"\n      ]\n    },\n    {\n      \"value\": \"Greenwich Standard Time\",\n      \"abbr\": \"GST\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Monrovia, Reykjavik\",\n      \"utc\": [\n        \"Africa/Abidjan\",\n        \"Africa/Accra\",\n        \"Africa/Bamako\",\n        \"Africa/Banjul\",\n        \"Africa/Bissau\",\n        \"Africa/Conakry\",\n        \"Africa/Dakar\",\n        \"Africa/Freetown\",\n        \"Africa/Lome\",\n        \"Africa/Monrovia\",\n        \"Africa/Nouakchott\",\n        \"Africa/Ouagadougou\",\n        \"Africa/Sao_Tome\",\n        \"Atlantic/Reykjavik\",\n        \"Atlantic/St_Helena\"\n      ]\n    },\n    {\n      \"value\": \"W. Europe Standard Time\",\n      \"abbr\": \"WEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna\",\n      \"utc\": [\n        \"Arctic/Longyearbyen\",\n        \"Europe/Amsterdam\",\n        \"Europe/Andorra\",\n        \"Europe/Berlin\",\n        \"Europe/Busingen\",\n        \"Europe/Gibraltar\",\n        \"Europe/Luxembourg\",\n        \"Europe/Malta\",\n        \"Europe/Monaco\",\n        \"Europe/Oslo\",\n        \"Europe/Rome\",\n        \"Europe/San_Marino\",\n        \"Europe/Stockholm\",\n        \"Europe/Vaduz\",\n        \"Europe/Vatican\",\n        \"Europe/Vienna\",\n        \"Europe/Zurich\"\n      ]\n    },\n    {\n      \"value\": \"Central Europe Standard Time\",\n      \"abbr\": \"CEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague\",\n      \"utc\": [\n        \"Europe/Belgrade\",\n        \"Europe/Bratislava\",\n        \"Europe/Budapest\",\n        \"Europe/Ljubljana\",\n        \"Europe/Podgorica\",\n        \"Europe/Prague\",\n        \"Europe/Tirane\"\n      ]\n    },\n    {\n      \"value\": \"Romance Standard Time\",\n      \"abbr\": \"RDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Brussels, Copenhagen, Madrid, Paris\",\n      \"utc\": [\n        \"Africa/Ceuta\",\n        \"Europe/Brussels\",\n        \"Europe/Copenhagen\",\n        \"Europe/Madrid\",\n        \"Europe/Paris\"\n      ]\n    },\n    {\n      \"value\": \"Central European Standard Time\",\n      \"abbr\": \"CEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb\",\n      \"utc\": [\n        \"Europe/Sarajevo\",\n        \"Europe/Skopje\",\n        \"Europe/Warsaw\",\n        \"Europe/Zagreb\"\n      ]\n    },\n    {\n      \"value\": \"W. Central Africa Standard Time\",\n      \"abbr\": \"WCAST\",\n      \"offset\": 1,\n      \"isdst\": false,\n      \"text\": \"(UTC+01:00) West Central Africa\",\n      \"utc\": [\n        \"Africa/Algiers\",\n        \"Africa/Bangui\",\n        \"Africa/Brazzaville\",\n        \"Africa/Douala\",\n        \"Africa/Kinshasa\",\n        \"Africa/Lagos\",\n        \"Africa/Libreville\",\n        \"Africa/Luanda\",\n        \"Africa/Malabo\",\n        \"Africa/Ndjamena\",\n        \"Africa/Niamey\",\n        \"Africa/Porto-Novo\",\n        \"Africa/Tunis\",\n        \"Etc/GMT-1\"\n      ]\n    },\n    {\n      \"value\": \"Namibia Standard Time\",\n      \"abbr\": \"NST\",\n      \"offset\": 1,\n      \"isdst\": false,\n      \"text\": \"(UTC+01:00) Windhoek\",\n      \"utc\": [\n        \"Africa/Windhoek\"\n      ]\n    },\n    {\n      \"value\": \"GTB Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Athens, Bucharest\",\n      \"utc\": [\n        \"Asia/Nicosia\",\n        \"Europe/Athens\",\n        \"Europe/Bucharest\",\n        \"Europe/Chisinau\"\n      ]\n    },\n    {\n      \"value\": \"Middle East Standard Time\",\n      \"abbr\": \"MEDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Beirut\",\n      \"utc\": [\n        \"Asia/Beirut\"\n      ]\n    },\n    {\n      \"value\": \"Egypt Standard Time\",\n      \"abbr\": \"EST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Cairo\",\n      \"utc\": [\n        \"Africa/Cairo\"\n      ]\n    },\n    {\n      \"value\": \"Syria Standard Time\",\n      \"abbr\": \"SDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Damascus\",\n      \"utc\": [\n        \"Asia/Damascus\"\n      ]\n    },\n    {\n      \"value\": \"E. Europe Standard Time\",\n      \"abbr\": \"EEDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) E. Europe\",\n      \"utc\": [\n        \"Asia/Nicosia\",\n        \"Europe/Athens\",\n        \"Europe/Bucharest\",\n        \"Europe/Chisinau\",\n        \"Europe/Helsinki\",\n        \"Europe/Kiev\",\n        \"Europe/Mariehamn\",\n        \"Europe/Nicosia\",\n        \"Europe/Riga\",\n        \"Europe/Sofia\",\n        \"Europe/Tallinn\",\n        \"Europe/Uzhgorod\",\n        \"Europe/Vilnius\",\n        \"Europe/Zaporozhye\"\n  \n      ]\n    },\n    {\n      \"value\": \"South Africa Standard Time\",\n      \"abbr\": \"SAST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Harare, Pretoria\",\n      \"utc\": [\n        \"Africa/Blantyre\",\n        \"Africa/Bujumbura\",\n        \"Africa/Gaborone\",\n        \"Africa/Harare\",\n        \"Africa/Johannesburg\",\n        \"Africa/Kigali\",\n        \"Africa/Lubumbashi\",\n        \"Africa/Lusaka\",\n        \"Africa/Maputo\",\n        \"Africa/Maseru\",\n        \"Africa/Mbabane\",\n        \"Etc/GMT-2\"\n      ]\n    },\n    {\n      \"value\": \"FLE Standard Time\",\n      \"abbr\": \"FDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius\",\n      \"utc\": [\n        \"Europe/Helsinki\",\n        \"Europe/Kiev\",\n        \"Europe/Mariehamn\",\n        \"Europe/Riga\",\n        \"Europe/Sofia\",\n        \"Europe/Tallinn\",\n        \"Europe/Uzhgorod\",\n        \"Europe/Vilnius\",\n        \"Europe/Zaporozhye\"\n      ]\n    },\n    {\n      \"value\": \"Turkey Standard Time\",\n      \"abbr\": \"TDT\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Istanbul\",\n      \"utc\": [\n        \"Europe/Istanbul\"\n      ]\n    },\n    {\n      \"value\": \"Israel Standard Time\",\n      \"abbr\": \"JDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Jerusalem\",\n      \"utc\": [\n        \"Asia/Jerusalem\"\n      ]\n    },\n    {\n      \"value\": \"Libya Standard Time\",\n      \"abbr\": \"LST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Tripoli\",\n      \"utc\": [\n        \"Africa/Tripoli\"\n      ]\n    },\n    {\n      \"value\": \"Jordan Standard Time\",\n      \"abbr\": \"JST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Amman\",\n      \"utc\": [\n        \"Asia/Amman\"\n      ]\n    },\n    {\n      \"value\": \"Arabic Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Baghdad\",\n      \"utc\": [\n        \"Asia/Baghdad\"\n      ]\n    },\n    {\n      \"value\": \"Kaliningrad Standard Time\",\n      \"abbr\": \"KST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Kaliningrad\",\n      \"utc\": [\n        \"Europe/Kaliningrad\"\n      ]\n    },\n    {\n      \"value\": \"Arab Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Kuwait, Riyadh\",\n      \"utc\": [\n        \"Asia/Aden\",\n        \"Asia/Bahrain\",\n        \"Asia/Kuwait\",\n        \"Asia/Qatar\",\n        \"Asia/Riyadh\"\n      ]\n    },\n    {\n      \"value\": \"E. Africa Standard Time\",\n      \"abbr\": \"EAST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Nairobi\",\n      \"utc\": [\n        \"Africa/Addis_Ababa\",\n        \"Africa/Asmera\",\n        \"Africa/Dar_es_Salaam\",\n        \"Africa/Djibouti\",\n        \"Africa/Juba\",\n        \"Africa/Kampala\",\n        \"Africa/Khartoum\",\n        \"Africa/Mogadishu\",\n        \"Africa/Nairobi\",\n        \"Antarctica/Syowa\",\n        \"Etc/GMT-3\",\n        \"Indian/Antananarivo\",\n        \"Indian/Comoro\",\n        \"Indian/Mayotte\"\n      ]\n    },\n    {\n      \"value\": \"Moscow Standard Time\",\n      \"abbr\": \"MSK\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Moscow, St. Petersburg, Volgograd, Minsk\",\n      \"utc\": [\n          \"Europe/Kirov\",\n        \"Europe/Moscow\",\n        \"Europe/Simferopol\",\n        \"Europe/Volgograd\",\n        \"Europe/Minsk\"\n      ]\n    },\n    {\n      \"value\": \"Samara Time\",\n      \"abbr\": \"SAMT\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Samara, Ulyanovsk, Saratov\",\n      \"utc\": [\n          \"Europe/Astrakhan\",\n        \"Europe/Samara\",\n          \"Europe/Ulyanovsk\"\n      ]\n    },\n    {\n      \"value\": \"Iran Standard Time\",\n      \"abbr\": \"IDT\",\n      \"offset\": 4.5,\n      \"isdst\": true,\n      \"text\": \"(UTC+03:30) Tehran\",\n      \"utc\": [\n        \"Asia/Tehran\"\n      ]\n    },\n    {\n      \"value\": \"Arabian Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Abu Dhabi, Muscat\",\n      \"utc\": [\n        \"Asia/Dubai\",\n        \"Asia/Muscat\",\n        \"Etc/GMT-4\"\n      ]\n    },\n    {\n      \"value\": \"Azerbaijan Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": 5,\n      \"isdst\": true,\n      \"text\": \"(UTC+04:00) Baku\",\n      \"utc\": [\n        \"Asia/Baku\"\n      ]\n    },\n    {\n      \"value\": \"Mauritius Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Port Louis\",\n      \"utc\": [\n        \"Indian/Mahe\",\n        \"Indian/Mauritius\",\n        \"Indian/Reunion\"\n      ]\n    },\n    {\n      \"value\": \"Georgian Standard Time\",\n      \"abbr\": \"GET\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Tbilisi\",\n      \"utc\": [\n        \"Asia/Tbilisi\"\n      ]\n    },\n    {\n      \"value\": \"Caucasus Standard Time\",\n      \"abbr\": \"CST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Yerevan\",\n      \"utc\": [\n        \"Asia/Yerevan\"\n      ]\n    },\n    {\n      \"value\": \"Afghanistan Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 4.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:30) Kabul\",\n      \"utc\": [\n        \"Asia/Kabul\"\n      ]\n    },\n    {\n      \"value\": \"West Asia Standard Time\",\n      \"abbr\": \"WAST\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Ashgabat, Tashkent\",\n      \"utc\": [\n        \"Antarctica/Mawson\",\n        \"Asia/Aqtau\",\n        \"Asia/Aqtobe\",\n        \"Asia/Ashgabat\",\n        \"Asia/Dushanbe\",\n        \"Asia/Oral\",\n        \"Asia/Samarkand\",\n        \"Asia/Tashkent\",\n        \"Etc/GMT-5\",\n        \"Indian/Kerguelen\",\n        \"Indian/Maldives\"\n      ]\n    },\n    {\n      \"value\": \"Yekaterinburg Time\",\n      \"abbr\": \"YEKT\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Yekaterinburg\",\n      \"utc\": [\n        \"Asia/Yekaterinburg\"\n      ]\n    },\n    {\n      \"value\": \"Pakistan Standard Time\",\n      \"abbr\": \"PKT\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Islamabad, Karachi\",\n      \"utc\": [\n        \"Asia/Karachi\"\n      ]\n    },\n    {\n      \"value\": \"India Standard Time\",\n      \"abbr\": \"IST\",\n      \"offset\": 5.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi\",\n      \"utc\": [\n        \"Asia/Kolkata\"\n      ]\n    },\n    {\n      \"value\": \"Sri Lanka Standard Time\",\n      \"abbr\": \"SLST\",\n      \"offset\": 5.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:30) Sri Jayawardenepura\",\n      \"utc\": [\n        \"Asia/Colombo\"\n      ]\n    },\n    {\n      \"value\": \"Nepal Standard Time\",\n      \"abbr\": \"NST\",\n      \"offset\": 5.75,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:45) Kathmandu\",\n      \"utc\": [\n        \"Asia/Kathmandu\"\n      ]\n    },\n    {\n      \"value\": \"Central Asia Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": 6,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:00) Nur-Sultan (Astana)\",\n      \"utc\": [\n        \"Antarctica/Vostok\",\n        \"Asia/Almaty\",\n        \"Asia/Bishkek\",\n        \"Asia/Qyzylorda\",\n        \"Asia/Urumqi\",\n        \"Etc/GMT-6\",\n        \"Indian/Chagos\"\n      ]\n    },\n    {\n      \"value\": \"Bangladesh Standard Time\",\n      \"abbr\": \"BST\",\n      \"offset\": 6,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:00) Dhaka\",\n      \"utc\": [\n        \"Asia/Dhaka\",\n        \"Asia/Thimphu\"\n      ]\n    },\n    {\n      \"value\": \"Myanmar Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 6.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:30) Yangon (Rangoon)\",\n      \"utc\": [\n        \"Asia/Rangoon\",\n        \"Indian/Cocos\"\n      ]\n    },\n    {\n      \"value\": \"SE Asia Standard Time\",\n      \"abbr\": \"SAST\",\n      \"offset\": 7,\n      \"isdst\": false,\n      \"text\": \"(UTC+07:00) Bangkok, Hanoi, Jakarta\",\n      \"utc\": [\n        \"Antarctica/Davis\",\n        \"Asia/Bangkok\",\n        \"Asia/Hovd\",\n        \"Asia/Jakarta\",\n        \"Asia/Phnom_Penh\",\n        \"Asia/Pontianak\",\n        \"Asia/Saigon\",\n        \"Asia/Vientiane\",\n        \"Etc/GMT-7\",\n        \"Indian/Christmas\"\n      ]\n    },\n    {\n      \"value\": \"N. Central Asia Standard Time\",\n      \"abbr\": \"NCAST\",\n      \"offset\": 7,\n      \"isdst\": false,\n      \"text\": \"(UTC+07:00) Novosibirsk\",\n      \"utc\": [\n        \"Asia/Novokuznetsk\",\n        \"Asia/Novosibirsk\",\n        \"Asia/Omsk\"\n      ]\n    },\n    {\n      \"value\": \"China Standard Time\",\n      \"abbr\": \"CST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi\",\n      \"utc\": [\n        \"Asia/Hong_Kong\",\n        \"Asia/Macau\",\n        \"Asia/Shanghai\"\n      ]\n    },\n    {\n      \"value\": \"North Asia Standard Time\",\n      \"abbr\": \"NAST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Krasnoyarsk\",\n      \"utc\": [\n        \"Asia/Krasnoyarsk\"\n      ]\n    },\n    {\n      \"value\": \"Singapore Standard Time\",\n      \"abbr\": \"MPST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Kuala Lumpur, Singapore\",\n      \"utc\": [\n        \"Asia/Brunei\",\n        \"Asia/Kuala_Lumpur\",\n        \"Asia/Kuching\",\n        \"Asia/Makassar\",\n        \"Asia/Manila\",\n        \"Asia/Singapore\",\n        \"Etc/GMT-8\"\n      ]\n    },\n    {\n      \"value\": \"W. Australia Standard Time\",\n      \"abbr\": \"WAST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Perth\",\n      \"utc\": [\n        \"Antarctica/Casey\",\n        \"Australia/Perth\"\n      ]\n    },\n    {\n      \"value\": \"Taipei Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Taipei\",\n      \"utc\": [\n        \"Asia/Taipei\"\n      ]\n    },\n    {\n      \"value\": \"Ulaanbaatar Standard Time\",\n      \"abbr\": \"UST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Ulaanbaatar\",\n      \"utc\": [\n        \"Asia/Choibalsan\",\n        \"Asia/Ulaanbaatar\"\n      ]\n    },\n    {\n      \"value\": \"North Asia East Standard Time\",\n      \"abbr\": \"NAEST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Irkutsk\",\n      \"utc\": [\n        \"Asia/Irkutsk\"\n      ]\n    },\n    {\n      \"value\": \"Japan Standard Time\",\n      \"abbr\": \"JST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Osaka, Sapporo, Tokyo\",\n      \"utc\": [\n        \"Asia/Dili\",\n        \"Asia/Jayapura\",\n        \"Asia/Tokyo\",\n        \"Etc/GMT-9\",\n        \"Pacific/Palau\"\n      ]\n    },\n    {\n      \"value\": \"Korea Standard Time\",\n      \"abbr\": \"KST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Seoul\",\n      \"utc\": [\n        \"Asia/Seoul\"\n      ]\n    },\n    {\n      \"value\": \"Cen. Australia Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": 9.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:30) Adelaide\",\n      \"utc\": [\n        \"Australia/Adelaide\",\n        \"Australia/Broken_Hill\"\n      ]\n    },\n    {\n      \"value\": \"AUS Central Standard Time\",\n      \"abbr\": \"ACST\",\n      \"offset\": 9.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:30) Darwin\",\n      \"utc\": [\n        \"Australia/Darwin\"\n      ]\n    },\n    {\n      \"value\": \"E. Australia Standard Time\",\n      \"abbr\": \"EAST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Brisbane\",\n      \"utc\": [\n        \"Australia/Brisbane\",\n        \"Australia/Lindeman\"\n      ]\n    },\n    {\n      \"value\": \"AUS Eastern Standard Time\",\n      \"abbr\": \"AEST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Canberra, Melbourne, Sydney\",\n      \"utc\": [\n        \"Australia/Melbourne\",\n        \"Australia/Sydney\"\n      ]\n    },\n    {\n      \"value\": \"West Pacific Standard Time\",\n      \"abbr\": \"WPST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Guam, Port Moresby\",\n      \"utc\": [\n        \"Antarctica/DumontDUrville\",\n        \"Etc/GMT-10\",\n        \"Pacific/Guam\",\n        \"Pacific/Port_Moresby\",\n        \"Pacific/Saipan\",\n        \"Pacific/Truk\"\n      ]\n    },\n    {\n      \"value\": \"Tasmania Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Hobart\",\n      \"utc\": [\n        \"Australia/Currie\",\n        \"Australia/Hobart\"\n      ]\n    },\n    {\n      \"value\": \"Yakutsk Standard Time\",\n      \"abbr\": \"YST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Yakutsk\",\n      \"utc\": [\n        \"Asia/Chita\",\n        \"Asia/Khandyga\",\n        \"Asia/Yakutsk\"\n      ]\n    },\n    {\n      \"value\": \"Central Pacific Standard Time\",\n      \"abbr\": \"CPST\",\n      \"offset\": 11,\n      \"isdst\": false,\n      \"text\": \"(UTC+11:00) Solomon Is., New Caledonia\",\n      \"utc\": [\n        \"Antarctica/Macquarie\",\n        \"Etc/GMT-11\",\n        \"Pacific/Efate\",\n        \"Pacific/Guadalcanal\",\n        \"Pacific/Kosrae\",\n        \"Pacific/Noumea\",\n        \"Pacific/Ponape\"\n      ]\n    },\n    {\n      \"value\": \"Vladivostok Standard Time\",\n      \"abbr\": \"VST\",\n      \"offset\": 11,\n      \"isdst\": false,\n      \"text\": \"(UTC+11:00) Vladivostok\",\n      \"utc\": [\n        \"Asia/Sakhalin\",\n        \"Asia/Ust-Nera\",\n        \"Asia/Vladivostok\"\n      ]\n    },\n    {\n      \"value\": \"New Zealand Standard Time\",\n      \"abbr\": \"NZST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Auckland, Wellington\",\n      \"utc\": [\n        \"Antarctica/McMurdo\",\n        \"Pacific/Auckland\"\n      ]\n    },\n    {\n      \"value\": \"UTC+12\",\n      \"abbr\": \"U\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Coordinated Universal Time+12\",\n      \"utc\": [\n        \"Etc/GMT-12\",\n        \"Pacific/Funafuti\",\n        \"Pacific/Kwajalein\",\n        \"Pacific/Majuro\",\n        \"Pacific/Nauru\",\n        \"Pacific/Tarawa\",\n        \"Pacific/Wake\",\n        \"Pacific/Wallis\"\n      ]\n    },\n    {\n      \"value\": \"Fiji Standard Time\",\n      \"abbr\": \"FST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Fiji\",\n      \"utc\": [\n        \"Pacific/Fiji\"\n      ]\n    },\n    {\n      \"value\": \"Magadan Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Magadan\",\n      \"utc\": [\n        \"Asia/Anadyr\",\n        \"Asia/Kamchatka\",\n        \"Asia/Magadan\",\n        \"Asia/Srednekolymsk\"\n      ]\n    },\n    {\n      \"value\": \"Kamchatka Standard Time\",\n      \"abbr\": \"KDT\",\n      \"offset\": 13,\n      \"isdst\": true,\n      \"text\": \"(UTC+12:00) Petropavlovsk-Kamchatsky - Old\",\n      \"utc\": [\n        \"Asia/Kamchatka\"\n      ]\n    },\n    {\n      \"value\": \"Tonga Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 13,\n      \"isdst\": false,\n      \"text\": \"(UTC+13:00) Nuku'alofa\",\n      \"utc\": [\n        \"Etc/GMT-13\",\n        \"Pacific/Enderbury\",\n        \"Pacific/Fakaofo\",\n        \"Pacific/Tongatapu\"\n      ]\n    },\n    {\n      \"value\": \"Samoa Standard Time\",\n      \"abbr\": \"SST\",\n      \"offset\": 13,\n      \"isdst\": false,\n      \"text\": \"(UTC+13:00) Samoa\",\n      \"utc\": [\n        \"Pacific/Apia\"\n      ]\n    }\n  ]\n\n  export default timezone;","import React from 'react';\nimport Axios from 'axios';\nimport timezone from '../../timezone';\nimport '../../style/css/Settings.min.css';\n\nclass Settings extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tz_cur: timezone[0],\n            isOpenModal: false,\n            tz_lists: [],\n            cur_pos: 0,\n            isSuccess: false\n        }\n    }\n    \n    handle_tz(index) {\n        this.setState({tz_cur: timezone[index], isOpenModal: false, cur_pos: index})\n    }\n\n    toggleTZPicker() {\n        this.setState({isOpenModal: !this.state.isOpenModal})\n    }\n\n    releaseSuccessMsg() {\n        this.setState({isSuccess: false})\n    }\n\n    componentDidMount() {\n        this.setState({\n            tz_lists: timezone.map((tz, index) => {\n                return (\n                    <p className=\"tz_item\" data-tzid={index} onClick={() => this.handle_tz(index)}>\n                        {tz.text}\n                    </p>\n                )\n            })\n        })   \n        Axios.post('/getTimezone', {\n            chat_id: window.localStorage.getItem('chat_id')\n        }).then(res => {\n            if (res.data) {\n                this.setState({tz_cur: timezone[res.data[0].tz_pos]});\n            }\n        }) \n    }\n\n    setTimezone() {\n        Axios.post('/setTimezone', {\n            chat_id: window.localStorage.getItem('chat_id'),\n            offset: this.state.tz_cur.offset,\n            timezone: JSON.stringify(this.state.tz_cur.utc),\n            position: this.state.cur_pos\n        }).then(res => {\n            if (res.data) {\n                window.localStorage.setItem('tz_set', res.data);\n                this.setState({isSuccess: true})\n\n                setTimeout(() => {\n                    this.setState({isSuccess: false})\n                }, 2000);\n            }\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"setting_section\">\n                <div className={this.state.isSuccess ? 'msg_success is_success' : 'msg_success'}>\n                    <p>\n                    Settings have been saved\n                    </p>\n                </div>\n                <h2 className=\"seg_title\">\n                    Settings\n                </h2>\n                <div className=\"tz_setting\">\n                    <h4>\n                    Time Zone\n                    </h4>\n                    <div className=\"tz_selection\">\n                        <span>\n                        Select Timezone:\n                        </span>\n                        <div className=\"tz_picker\">\n                            <a onClick={() => this.toggleTZPicker()}>\n                                {this.state.tz_cur.text}\n                            </a>\n                            <div className={this.state.isOpenModal ? 'tz_lists open' : 'tz_lists'}>\n                                {this.state.tz_lists}\n                            </div>\n                        </div>\n                        <a className=\"tz_set_btn\" onClick={() => this.setTimezone()}>\n                            Set\n                        </a>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Settings;","import React from 'react';\nimport Axios from 'axios';\nimport Title from './Section_title';\nimport '../style/css/WordManager.min.css';\n\nclass WordManager extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          wordlist: [],\n          value: ''\n        };\n    }\n\n    componentDidMount() {\n        this.getWordData();\n    }\n\n    changeValues (event) {\n        this.setState({value: event.target.value})\n    }\n\n    submit_blacklist (ev) {\n        if (this.state.value.length !== 0) {\n            const val = this.state.value\n            \n            const chat_id = window.localStorage.getItem('chat_id')\n            if (chat_id.length !== 0) {\n                Axios.post('pushWordData', {word: val, chat_id: chat_id})\n                .then((res) => {\n                    if (res.data) {\n                        this.getWordData()\n                        this.setState({value: ''})\n                    }\n                })\n            } else {\n                alert('There is any valid key of chatting information')\n                return false\n            }\n        \n        }\n    }\n    \n    changeStateWordlist(is_active, id) {\n        if (is_active) {\n            Axios.post('editWordData', {\n                chat_id: window.localStorage.getItem('chat_id'),\n                content: 0,\n                type: 'status',\n                id: id\n            })\n        } else {\n            Axios.post('editWordData', {\n                chat_id: window.localStorage.getItem('chat_id'),\n                content: 1,\n                type: 'status',\n                id: id\n            })\n        }\n\n        return false;\n    }\n\n    getWordData() {\n        Axios.post('getWordData', {chat_id: window.localStorage.getItem('chat_id')})\n        .then((res) => {\n            if (res.data && res.status === 200) {\n                let dataset = res.data;\n                \n                this.setState({wordlist: dataset.map((data, index) => \n                    <tr key={index}>\n                        <td>\n                            {data.word_name}\n                        </td>\n                        <td>\n                            {data.created_time}\n                        </td>\n                        <td>\n                            <span className=\"delete_icon icon\" onClick={(e) => this.deleteWord(data.word_name)}></span>\n                            <span> Delete</span>\n                        </td>\n                        <td>\n                        <div className=\"disable_btn_wrap\">\n                                <label className=\"filter_group\" htmlFor={index + '_whitelist'}>\n                                    <input\n                                    type=\"checkbox\"\n                                    className=\"option_item\"\n                                    id={index + '_whitelist'}\n                                    onChange={(ev) => this.changeStateWordlist(data.is_active, data.idx)}\n                                    defaultChecked={data.is_active ? true : false}\n                                    ></input>\n                                    <span className=\"filter_label\"></span>\n                                    <span className=\"filter_circle\"></span>\n                                </label>\n                            </div>\n                        </td>\n                    </tr> \n                )})\n            }\n        })\n    }\n\n    deleteWord(word) {\n        var check = window.confirm('Are you sure to Delete this Item?')\n        if (check) {\n            Axios.post('delWordData', {\n                word: word,\n                chat_id: window.localStorage.getItem('chat_id')\n            }).then((res) => {\n                if (res.status === 200 && res.data === true) {\n                    alert(`delete '${word}' successfully `)\n                    this.getWordData()\n                }\n            })\n        }\n        \n    }\n\n    render() {\n        return (\n            <div className=\"section_wordmanager\">\n                <div className=\"module_path\">\n                    <p><span>Modules  /  </span>Blacklist</p>\n                </div>\n                <Title title={'Manage Blacklist'}></Title>\n                <div className=\"blacklist_input_wrap\">\n                    <label htmlFor=\"blacklist_input\" className=\"blacklist_label\">Enter words you want to ban</label>\n                    <div className=\"input_wrap\">\n                        <input id=\"blacklist_input\" className=\"blacklist_input\" onChange={(ev) => this.changeValues(ev)} onKeyUp={(ev)=> {if(ev.which === 13) {this.submit_blacklist(ev)}}} value={this.state.value}></input>\n                        <button type=\"button\" className=\"blacklist_register\" onClick={(ev) => this.submit_blacklist(ev)}>ADD</button>\n                    </div>\n                </div>\n                \n                <p className=\"table_title\">\n                    Blacklist\n                </p>\n                <table className=\"blacklist_tb\">\n                    <thead>\n                        <tr>\n                            <th width=\"35%\">Words</th>\n                            <th width=\"45%\">Date Added</th>\n                            <th width=\"10%\">Action</th>\n                            <th width=\"10%\">Status</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.wordlist.length === 0 \n                        ?\n                            <tr><td colSpan=\"3\" className=\"empty_item\">No Items</td></tr>\n                        :\n                            this.state.wordlist\n                        }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\n\nexport default WordManager;","import React from 'react';\nimport Axios from 'axios';\nimport Title from './Section_title';\nimport '../style/css/Whitelist_URL.min.css';\n\nclass Whitelist_URL extends React.Component{\n    constructor (props) {\n        super(props)\n        this.state = {\n            whitelist: [],\n            value: ''\n        }\n    }\n\n    submit_whitelist (ev) {\n        if (this.state.value.length !== 0) {\n            const val = this.state.value\n            const validation = this.checkValidation(val)\n            if (validation) {\n                const chat_id = window.localStorage.getItem('chat_id')\n                if (chat_id.length !== 0) {\n                    Axios.post('pushWhitelist', {pattern: val, chat_id: chat_id})\n                    .then((res) => {\n                        if (res.data) {\n                            this.getWhitelist()\n                            this.setState({value: ''})\n                        }\n                    })\n                } else {\n                    alert('There is any valid key of chatting information')\n                    return false\n                }\n            } else {\n                alert('Invalid URL address, please check it again')\n            }\n        }\n    }\n    \n    checkValidation (val) {\n        if (typeof val === 'string') {\n            const regx_test = /^\\/[\\s\\S]*\\/$/\n            const regx = /(https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|www\\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9]+\\.[^\\s]{2,}|www\\.[a-zA-Z0-9]+\\.[^\\s]{2,}|[a-zA-Z0-9]+\\.[^\\s]{2,})/\n            if (regx.test(val) || regx_test.test(val)) {\n                return true\n            } else {\n                return false\n            }\n        }    \n    }\n\n    changeValues (event) {\n        this.setState({value: event.target.value})\n    }\n\n    deleteWhitelist(url) {\n        var check = window.confirm('Are you sure to Delete this Item?')\n        if (check) {\n            Axios.post('delWhitelist', {\n                url: url,\n                chat_id: window.localStorage.getItem('chat_id')\n            }).then((res) => {\n                if (res.status === 200 && res.data === true) {\n                    alert(`delete '${url}' successfully `)\n                    this.getWhitelist()\n                }\n            })\n        }\n        \n    }\n\n    changeStateWhitelist(is_active, id) {\n        if (is_active) {\n            Axios.post('updateWhitelist', {\n                chat_id: window.localStorage.getItem('chat_id'),\n                content: 0,\n                type: 'status',\n                id: id\n            })\n        } else {\n            Axios.post('updateWhitelist', {\n                chat_id: window.localStorage.getItem('chat_id'),\n                content: 1,\n                type: 'status',\n                id: id\n            })\n        }\n\n        return false;\n    }\n\n    getWhitelist () {\n        const chat_id = window.localStorage.getItem('chat_id')\n\n        if (chat_id.length !== 0) {\n            Axios.post('getWhitelist', {chat_id: chat_id})\n            .then((res) => {\n                const listup = res.data;\n                let result = [];\n                \n                for (var item of listup) {\n                    result.push(item)\n                }\n                \n                this.setState({whitelist: result.map((data, index) => \n                    <tr key={index}>\n                        <td>\n                            {data.url_pattern}\n                        </td>\n                        <td>\n                            {new Date(data.created_date).toUTCString()}\n                        </td>\n                        <td>\n                            <span className=\"delete_icon icon\" onClick={(e) => this.deleteWhitelist(data.url_pattern)}></span>\n                            <span> Delete</span>\n                        </td>\n                        <td>\n                            <div className=\"disable_btn_wrap\">\n                                <label className=\"filter_group\" htmlFor={index + '_whitelist'}>\n                                    <input\n                                    type=\"checkbox\"\n                                    className=\"option_item\"\n                                    id={index + '_whitelist'}\n                                    onChange={(ev) => this.changeStateWhitelist(data.is_active, data.id)}\n                                    defaultChecked={data.is_active ? true : false}\n                                    ></input>\n                                    <span className=\"filter_label\"></span>\n                                    <span className=\"filter_circle\"></span>\n                                </label>\n                            </div>\n                        </td>\n                    </tr> \n                )})\n\n                return\n            })\n        }\n    }\n\n    componentDidMount () {\n        this.getWhitelist();\n    }\n\n    render () {\n        return (\n            <div className=\"section_whitelist\">\n                <div className=\"module_path\">\n                    <p><span>Modules  /  </span>Whitelist</p>\n                </div>\n                <Title title={'Manage Whitelist'}></Title>\n                <div className=\"whitelist_input_wrap\">\n                    <label htmlFor=\"whitelist_input\" className=\"whitelist_label\">Enter URL you want to ban</label>\n                    <div className=\"input_wrap\">\n                        <input id=\"whitelist_input\" className=\"whitelist_input\" onChange={(ev) => this.changeValues(ev)} onKeyUp={(ev)=> {if(ev.which === 13) {this.submit_whitelist(ev)}}} value={this.state.value}></input>\n                        <button type=\"button\" className=\"whitelist_register\" onClick={(ev) => this.submit_whitelist(ev)}>ADD</button>\n                    </div>\n                </div>\n                \n                <p className=\"table_title\">\n                    Whitelist\n                </p>\n                <table className=\"whitelist_tb\">\n                    <thead>\n                        <tr>\n                            <th width=\"35%\">URL</th>\n                            <th width=\"45%\">Date Added</th>\n                            <th width=\"10%\">Action</th>\n                            <th width=\"10%\">Status</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.whitelist.length === 0 \n                        ?\n                            <tr><td colSpan=\"3\" className=\"empty_item\">No Items</td></tr>\n                        :\n                            this.state.whitelist\n                        }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nexport default Whitelist_URL;","import React from 'react';\nimport Title from './Section_title';\nimport '../style/css/Log.min.css';\nimport Axios from 'axios';\n\nclass Log extends React.Component{\n    constructor (props) {\n        super(props)\n        this.state = {\n            loglist: []\n        }\n    }\n\n    componentDidMount() {\n        Axios.post('getLogs', {'chat_id' : window.localStorage.getItem('chat_id')})\n            .then((res) => {\n                const listup = res.data;\n                let result = [];\n                \n                for (var item of listup) {\n                    result.push(item)\n                }\n                \n                this.setState({loglist: result.map((data, index) => \n                    <tr key={index}>\n                        <td>\n                            {index}\n                        </td>\n                        <td>\n                            {this.getContent(data)}\n                        </td>\n                        <td>\n                            {data.type}\n                        </td>\n                        <td>\n                            {new Date(data.del_date).toUTCString()}\n                        </td>\n                        <td>\n                            {this.render_resend_icon(data)}\n                        </td>\n                    </tr>\n                )})\n\n                return\n            })\n    }\n\n    getContent(data) {\n        if (data.type !== 'photo') {\n            return data.msg;\n        } else {\n            if (data.photo_base64) {\n                const img_sr = \"data:image/jpg;base64,\" + data.photo_base64;\n            \n                return (\n                    <img src={img_sr} alt=\"result of log\" ></img>\n                )\n            }\n        }\n    }\n\n    restoreMsg(data) {\n        const dataset = {\n            chat_id: window.localStorage.getItem('chat_id'),\n            text: `<i> -> ${data.msg_from}</i>\n            \n            origin msg : <b>${data.msg}</b>`,\n            parse_mode: 'html'\n        }\n        Axios.post(`https://api.telegram.org/bot${this.props.botId}/sendMessage`, dataset)\n    }\n\n    render_resend_icon(data) {\n        if (data.type === 'text') {\n            return (\n                <span className=\"icon resend_icon\" onClick={(ev) => this.restoreMsg(data)}></span>\n            )\n        } else {\n            return ''\n        }\n    }\n\n    render () {\n        return (\n            <div className=\"section_log\">\n                 <div className=\"module_path\">\n                <p>\n                    <span>Modules / </span>Logs\n                </p>\n                </div>\n                <Title title={'Logs about blocked words or pictures'}></Title>\n                <table className=\"log_tb\">\n                    <thead>\n                        <tr>\n                            <th>\n                                #\n                            </th>\n                            <th>\n                                content\n                            </th>\n                            <th width=\"5%\">\n                                type\n                            </th>\n                            <th width=\"20%\">\n                                date\n                            </th>\n                            <th width=\"8%\">\n                                re-send\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.loglist}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nexport default Log;","import React from \"react\";\nimport Axios from \"axios\";\n\nclass QnA_List_Component extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEditable: false,\n      isImage: false,\n      question: this.props.data.faq_content,\n      response: this.props.data.faq_response,\n      uploadImage: \"\",\n      imageType: \"\"\n    };\n  }\n  deleteFaqList(content) {\n    var check = window.confirm(\"Are you sure to Delete this Item?\");\n    if (check) {\n      const data = {\n        content: content,\n        chat_id: window.localStorage.getItem(\"chat_id\")\n      };\n\n      Axios.post(\"delFaqlist\", data).then(res => {\n        if (res.data) {\n            this.props.getFaqList();\n        }\n      });\n    }\n  }\n  changeToEdit() {\n    this.setState({ isEditable: true });\n  }\n  changeQuestion(event) {\n    return this.setState({ question: event.target.value });\n  }\n  changeResponse(event) {\n    return this.setState({ response: event.target.value });\n  }\n  toggleRespType(type) {\n    if (type === \"text\") {\n      this.setState({ isImage: false });\n    } else if (type === \"pic\") {\n      this.setState({ isImage: true });\n    }\n  }\n  confirmEdit() {\n    var form_data = new FormData();\n\n    form_data.append(\"chat_id\", window.localStorage.getItem(\"chat_id\"));\n    form_data.append(\"question\", this.state.question);\n    form_data.append(\"response\", this.state.response);\n    form_data.append(\"response_img\", this.state.uploadImage);\n    form_data.append(\"response_type\", this.state.isImage ? \"img\" : \"txt\");\n    form_data.append(\"img_type\", this.state.imageType);\n    form_data.append(\"id\", this.props.data.id);\n\n    if (form_data.get(\"chat_id\") && form_data.get(\"question\") !== \"\") {\n      Axios.post(\"updateFaqlist\", form_data).then(res => {\n        if (res.data) {\n          this.props.getFaqList();\n          this.setState({isEditable: false})\n        }\n      });\n    }\n  }\n  uploadedImage(event) {\n    const file = event.target.files[0];\n    if (file.size > 2 * 1024 * 1024) {\n      alert(\"File size should be less than 2MB\");\n      return false;\n    }\n    this.makePreview(file);\n    this.setState({ imageType: file.type.split(\"/\")[1], uploadImage: file });\n  }\n\n  makePreview(file) {\n    const fr = new FileReader();\n    const index = this.props.index;\n\n    fr.onload = function(e) {\n      const img_el = document.createElement(\"img\");\n      img_el.setAttribute(\"src\", e.target.result);\n\n      const target_el = document.querySelector(\"#input_file_preview_\" + index);\n      while (target_el.firstChild) {\n        target_el.removeChild(target_el.firstChild);\n      }\n\n      target_el.appendChild(img_el);\n    };\n\n    fr.readAsDataURL(file);\n  }\n  render() {\n    return (\n      <tr>\n        <td>\n          {this.state.isEditable ? (\n            <textarea\n              className=\"list_content\"\n              value={this.state.question}\n              onChange={ev => this.changeQuestion(ev)}\n            ></textarea>\n          ) : (\n            <div className=\"list_content\">{this.props.data.faq_content}</div>\n          )}\n        </td>\n        <td>\n          {this.state.isEditable ? (\n            <div className=\"faq_content_wrap\">\n              {this.state.isImage ? (\n                <div id={'input_file_preview_' + this.props.index}></div>\n              ) : (\n                <textarea\n                  value={this.state.response}\n                  onChange={ev => this.changeResponse(ev)}\n                ></textarea>\n              )}\n              <div className=\"response_type_btns_wrap\">\n                {this.state.isImage ? (\n                  <span\n                    className=\"icon text-icon-disabled\"\n                    onClick={ev => this.toggleRespType(\"text\")}\n                  ></span>\n                ) : (\n                  <span\n                    className=\"icon text-icon-active\"\n                    onClick={ev => this.toggleRespType(\"text\")}\n                  ></span>\n                )}\n                <span> | </span>\n                <label>\n                  <input\n                    type=\"file\"\n                    name=\"faq_img\"\n                    onChange={ev => this.uploadedImage(ev)}\n                  ></input>\n                  {this.state.isImage ? (\n                    <span\n                      className=\"icon pic-icon-active\"\n                      onClick={() => this.toggleRespType(\"pic\")}\n                    ></span>\n                  ) : (\n                    <span\n                      className=\"icon pic-icon-disabled\"\n                      onClick={() => this.toggleRespType(\"pic\")}\n                    ></span>\n                  )}\n                </label>\n              </div>\n            </div>\n          ) : (\n            <div className=\"list_response\">\n              {this.props.data.response_type === \"txt\" ? (\n                this.props.data.faq_response\n              ) : (\n                <img\n                  id={\"faq_img\" + this.props.index}\n                  src={this.props.data.faq_response_img}\n                  alt=\"registerd for FAQ\"\n                ></img>\n              )}\n            </div>\n          )}\n        </td>\n        <td>\n          {this.state.isEditable ? (\n            <div className=\"edit_btns_wrap\">\n              <span\n                className=\"save_icon icon\"\n                onClick={e => this.confirmEdit()}\n              ></span>\n              <span\n                className=\"cancle_icon icon\"\n                onClick={e => this.setState({ isEditable: false })}\n              ></span>\n            </div>\n          ) : (\n            <div className=\"edit_btns_wrap\">\n              <span\n                className=\"edit_icon icon\"\n                onClick={e => this.changeToEdit(this.props.index)}\n              ></span>\n              <span\n                className=\"delete_icon icon\"\n                onClick={e => this.deleteFaqList(this.props.data.faq_content)}\n              ></span>\n            </div>\n          )}\n        </td>\n      </tr>\n    );\n  }\n}\n\nexport default QnA_List_Component;\n","import React from 'react';\nimport Axios from 'axios';\nimport Title from './Section_title';\nimport QnA_List from './QnA_List_Component';\nimport '../style/css/FAQ_register.min.css'\n\nclass FAQ_register extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            val: '',\n            response: '',\n            faqlist: [],\n            isImage: false,\n            uploadImage: '',\n            imageType : ''\n        }\n    }\n    \n    changeValues(event) {\n        return this.setState({val: event.target.value})\n    }\n\n    changeResponse(event) {\n        return this.setState({response: event.target.value})\n    }\n\n    toggleRespType(type) {\n        if (type === 'text') {\n            this.setState({isImage: false})\n        } else if (type === 'pic') {\n            this.setState({isImage: true})\n        }\n    }\n\n    uploadedImage(event) {\n        const file = event.target.files[0];\n        if (file.size > 5 * 1024 * 1024) {\n            alert('File size should be less than 5MB')\n            return false\n        }\n        this.makePreview(file);\n        this.setState({imageType: file.type.split('/')[1], uploadImage: file})\n    }\n\n    makePreview(file) {\n        const fr = new FileReader();\n        \n        fr.onload = function(e) {\n            const img_el = document.createElement('img');\n            img_el.setAttribute('src', e.target.result);\n            \n            const target_el = document.querySelector('.input_file_preview');\n            while (target_el.firstChild) {\n                target_el.removeChild(target_el.firstChild);\n            }\n\n            document.querySelector('.input_file_preview').appendChild(img_el)\n        }\n\n        fr.readAsDataURL(file)\n    }\n\n    removeImagePreview() {\n        const target_el = document.querySelector('.input_file_preview');\n        while (target_el.firstChild) {\n            target_el.removeChild(target_el.firstChild);\n        }\n    }\n\n    clearTexts() {\n        document.querySelector('textarea.faq_input').value = '';\n        if (!this.state.isImage) {\n            document.querySelector('textarea#faq_response_input').value = '';\n        } else {\n            this.removeImagePreview()\n        }\n\n        return true;\n    }\n\n    submit_faqlist(event) {\n        var form_data = new FormData();\n        \n        form_data.append('chat_id', window.localStorage.getItem('chat_id'))\n        form_data.append('content', this.state.val)\n        form_data.append('response', this.state.response)\n        form_data.append('response_img', this.state.uploadImage)\n        form_data.append('response_type', this.state.isImage ? 'img' : 'txt')\n        form_data.append('img_type', this.state.imageType)\n\n        if (form_data.get('chat_id') && form_data.get('content') !== '') {\n            Axios.post('pushFaqlist', form_data)\n                .then((res) => {\n                    if (res.data) {\n                        this.getFaqList();\n                        this.clearTexts();\n                    }\n                })\n        } \n    }\n\n    convertToBase64 ( img, type, targetid ) {\n        if (img !== null) {\n            var blob = new Blob( [ img ], { type: \"image/\" + type } );\n            var reader = new FileReader()\n            \n            reader.onload = function (file) {\n                var img_tag = document.querySelector('#' + targetid)\n                img_tag.src = file.target.result;\n            }\n            reader.readAsDataURL(blob);\n        }\n    }\n\n    getFaqList () {\n        const chat_id = window.localStorage.getItem('chat_id')\n\n        if (chat_id.length !== 0) {\n            Axios.post('getFaqlist', {chat_id: chat_id})\n            .then((res) => {\n                const listup = res.data;\n                let result = [];\n                \n                for (var item of listup) {\n                    result.push(item)\n                }\n                \n                this.setState({faqlist: result.map((data, index) => \n                    <QnA_List data={data} index={index} getFaqList={() => this.getFaqList()} key={index}></QnA_List>\n                )})\n\n                return\n            })\n        }\n    }\n\n    componentDidMount () {\n        this.getFaqList();\n    }\n\n    render () {\n        return (\n            <div className=\"faq_section\">\n                <div className=\"module_path\">\n                    <p><span>Modules  /  </span>FAQ Responder</p>\n                </div>\n                <Title title={'Manage automatic response for FAQ'}></Title>\n                <div className=\"faq_input_wrap\">\n                    <div className=\"faq_content_wrap\">\n                        <label htmlFor=\"faq_input\">If the user says something similar to</label>\n                        <textarea id=\"faq_input\" className=\"faq_input\" onChange={(ev) => this.changeValues(ev)}></textarea>\n                    </div>\n                    <div className=\"faq_content_wrap\">\n                        <label htmlFor=\"faq_response_input\">The bot will reply</label>\n                        {this.state.isImage ? <div className=\"input_file_preview\"></div> : <textarea id=\"faq_response_input\" onChange={(ev) => this.changeResponse(ev)}></textarea>}\n                        <div className=\"response_type_btns_wrap\">\n                            {this.state.isImage ? <span className=\"icon text-icon-disabled\" onClick={(ev) => this.toggleRespType('text')}></span> : <span className=\"icon text-icon-active\" onClick={(ev) => this.toggleRespType('text')}></span>}\n                            <span> | </span>\n                            <label>\n                                <input type=\"file\" name=\"faq_img\" onChange={(ev) => this.uploadedImage(ev)}></input>\n                                {this.state.isImage ? <span className=\"icon pic-icon-active\" onClick={() => this.toggleRespType('pic')}></span> : <span className=\"icon pic-icon-disabled\" onClick={() => this.toggleRespType('pic')}></span>}\n                            </label>\n                            \n                        </div>\n                    </div>\n                </div>\n                <button type=\"button\" className=\"faq_register\" onClick={(ev) => this.submit_faqlist(ev)}>ADD</button>\n                \n                <p className=\"table_title\">\n                    Responds\n                </p>\n                <table className=\"faq_tb\">\n                    <tbody>\n                        {this.state.faqlist.length === 0 \n                        ? \n                            <tr><td colSpan=\"3\" className=\"empty_item\">No Items</td></tr>\n                        :\n                            this.state.faqlist\n                        }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nexport default FAQ_register;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport Axios from 'axios';\n\nclass Module_item extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    \n    changeModules(event) {\n        if (event.currentTarget.checked) {\n            Axios.post('/setStateModule', {chat_id: window.localStorage.getItem('chat_id'), target_id: this.props.list_id, status: 1})\n        } else {\n            Axios.post('/setStateModule', {chat_id: window.localStorage.getItem('chat_id'), target_id: this.props.list_id, status: 0})\n        }\n        \n        return false\n    }\n\n    render() {\n        return (\n            <div className=\"module_item\">\n                <div className=\"module_title\">\n                    <p>{this.props.title}</p>\n                </div>\n                <div className=\"module_content\">\n                    <p>{this.props.content}</p>\n                </div>\n                <Link to={this.props.link}>SETTING</Link>\n                {this.props.isEditable ? \n                    <div className=\"disable_btn_wrap\">\n                        <label className=\"filter_group\" htmlFor={this.props.list_id + '_module'}>\n                            <input\n                            type=\"checkbox\"\n                            className=\"option_item\"\n                            id={this.props.list_id + '_module'}\n                            onChange={(ev) => this.changeModules(ev)}\n                            defaultChecked={this.props.is_active ? true : false}\n                            ></input>\n                            <span className=\"filter_label\"></span>\n                            <span className=\"filter_circle\"></span>\n                        </label>\n                    </div> : ''}\n            </div>\n        )\n    }\n}\n\nexport default Module_item;","import React from 'react';\nimport Module_item from './module_item';\nimport Title from './Section_title';\nimport Axios from 'axios';\nimport '../style/css/Dashboard.min.css';\n\nclass Dashboard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            itemlist: []\n        }\n    }\n    \n    getEntireModules(status) {\n        let list = []\n        const all_modules = [{\n            id: 1,\n            title: 'Whitelist',\n            content: 'Auto-delete unauthorized URLS',\n            link: '/whitelist'\n        },{\n            id: 2,\n            title: 'Blacklist',\n            content: 'Auto-delete banned words',\n            link: '/blacklist'\n        },{\n            id: 3,\n            title: 'FAQ',\n            content: 'Set auto-reply messages to frequently asked Questions',\n            link: '/faq'\n        },{\n            id: 4,\n            title: '/start auto-response',\n            content: 'Set an auto-response when user types /start',\n            link: '/startmenu'\n        },{\n            id: 6,\n            title: 'Users',\n            content: 'Manage participated users',\n            link: '/users'\n        },{\n            id: 5,\n            title: 'Logs',\n            content: 'show logs',\n            link: '/logs'\n        }]\n\n        for (const [key, val] of Object.entries(status)) {\n            const target_pos = key.split('_')[1];\n            if (val) {\n                list.push(all_modules[target_pos - 1])\n            }\n        }\n        return list;\n    }\n\n    componentDidMount() {\n        Axios.post('/getStateModule', {chat_id: window.localStorage.getItem('chat_id')})\n            .then((res) => {\n                const status = res.data[0];\n                let modules = this.getEntireModules(status);\n\n                const list = modules.map((item, index) => \n                    <Module_item title={item.title} content={item.content} link={item.link} key={index} isEditable={false}></Module_item>\n                )\n                \n                this.setState({itemlist: list})    \n            })\n        \n    }\n\n    render() {\n        return (\n            <div className=\"section_dashboard\">\n                <Title title=\"Active Modules\"></Title>\n                <div className=\"dashboard_list_wrap\">\n                    {this.state.itemlist}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Dashboard;","import React from 'react';\nimport Module_item from './module_item';\nimport Title from './Section_title';\nimport Axios from 'axios';\nimport '../style/css/Modules.min.css';\n\nclass Modules extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            itemlist: []\n        }\n    }\n    \n    getEntireModules(status) {\n        const all_modules = [{\n            id: 1,\n            title: 'Whitelist',\n            content: 'Auto-delete unauthorized URLS',\n            link: '/whitelist',\n            is_editable: true\n        },{\n            id: 2,\n            title: 'Blacklist',\n            content: 'Auto-delete banned words',\n            link: '/blacklist',\n            is_editable: true\n        },{\n            id: 3,\n            title: 'FAQ',\n            content: 'Set auto-reply messages to frequently asked Questions',\n            link: '/faq',\n            is_editable: true\n        },{\n            id: 4,\n            title: '/start auto-response',\n            content: 'Set an auto-response when user types /start',\n            link: '/startmenu',\n            is_editable: true\n        },{\n            id: 5,\n            title: 'Users',\n            content: 'Manage participated users',\n            link: '/users',\n            is_editable: false\n        },{\n            id: 6,\n            title: 'Logs',\n            content: 'show logs',\n            link: '/logs',\n            is_editable: false\n        },{\n            id: 7,\n            title: 'Collect Questions',\n            content: 'Observe all questions risen up in chat-room',\n            link: '/questions',\n            is_editable: false\n        },{\n            id: 8,\n            title: 'Interested Users',\n            content: 'Focus on user who you are interested in',\n            link: '/interest',\n            is_editable: false\n        },{\n            id: 9,\n            title: 'Interested Words',\n            content: 'Focus on words which you want to watch',\n            link: '/keypoint',\n            is_editable: false\n        },{\n            id: 10,\n            title: 'FAQ Stats',\n            content: 'Figure a stat of your answers out more clear',\n            link: '/faqstats',\n            is_editable: false\n        }]\n\n        for (const [key, val] of Object.entries(status)) {\n            const target_pos = key.split('_')[1];\n            if (val) {\n                all_modules[target_pos - 1]['is_active'] = 1\n            } else {\n                all_modules[target_pos - 1]['is_active'] = 0\n            }\n        }\n        return all_modules;\n    }\n\n    componentDidMount() {\n        Axios.post('/getStateModule', {chat_id: window.localStorage.getItem('chat_id')})\n            .then((res) => {\n                const status = res.data[0];\n                let modules = this.getEntireModules(status);\n\n                const list = modules.map((item, index) => \n                    <Module_item title={item.title} content={item.content} link={item.link} isEditable={item.is_editable} key={index} list_id={item.id} is_active={item.is_active}></Module_item>\n                )\n                \n                this.setState({itemlist: list})    \n            })\n    }\n\n    render() {\n        return (\n            <div className=\"section_modules\">\n                <Title title=\"Modules\"></Title>\n                <div className=\"modules_list_wrap\">\n                    {this.state.itemlist}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Modules;","import React from 'react';\nimport Axios from 'axios';\n\nclass Question_reply extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            modal: false,\n            modal_content: ''\n        }\n    }\n    \n    send_reply_message(event) {\n        const dataset = {\n            chat_id: window.localStorage.getItem('chat_id'),\n            reply_to_message_id: event.currentTarget.dataset.mid,\n            text: this.state.modal_content\n        }\n\n        Axios.post(`https://api.telegram.org/bot${this.props.botId}/sendMessage`, dataset).then(() => {\n            alert('the reply sent to chat successfully')\n            this.close_modal();\n            Axios.post('/setStateReplied', dataset)\n        })\n    }\n\n    updateContent(event) {\n        this.setState({\n            modal_content: event.target.value\n        })\n    }\n\n    open_modal() {\n        this.setState({modal: true});\n    }\n\n    close_modal() {\n        this.setState({modal: false});\n    }\n\n    getModalClass() {\n        const id = this.props.data.id;\n        let result_str = '';\n\n        if (this.state.modal) {\n            result_str = `reply_modal_${id} active_modal`\n        } else {\n            result_str = `reply_modal_${id}`\n        }\n\n        return result_str;\n    }\n\n    render() {\n        return (\n            <div className=\"questions_state\">\n                {this.props.data.replied_date === null ? \n                (\n                <div className=\"reply_partion\">\n                    <a className=\"reply_btn\" data-mid={this.props.data.id} onClick={(ev) => this.open_modal()}>\n                        REPLY\n                    </a>\n                    <div className={this.getModalClass()}>\n                        <div className=\"modal_title\">\n                            <p>Write a reply</p>\n                        </div>\n                        <textarea className=\"reply_content\" onChange={(ev) => this.updateContent(ev)} placeholder=\"reply to..\"></textarea>\n                        <div className=\"modal_btn_wrap\">\n                            <a className=\"cancle_btn\" onClick={() => this.close_modal()}>\n                                CANCLE\n                            </a>\n                            <a className=\"submit_btn\" data-mid={this.props.data.id} onClick={(ev) => this.send_reply_message(ev)}>\n                                SUBMIT\n                            </a>\n                        </div>\n                    </div>\n                </div>\n                ) : \n                (<div className=\"replied_date\">\n                    <p>replied time</p>\n                    <p>\n                        {this.props.convertDateFormat(this.props.data.replied_date)}\n                    </p>\n                </div>)}\n            </div>\n        )\n    }\n}\n\nexport default Question_reply;","import React from 'react';\nimport Axios from 'axios';\nimport Title from './Section_title';\nimport Question_reply from './Question_reply';\nimport '../style/css/Questions.min.css'\n\nclass Questions extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            messages: []\n        }\n    }\n\n    componentDidMount() {\n        Axios.post('getQuestions', {chat_id: window.localStorage.getItem('chat_id')})\n            .then((res) => {\n                let dataset = [];\n\n                for (var data of res.data) {\n                    if (!data.is_bot) {\n                        dataset.push(data);\n                    }\n                }\n                \n                this.setState({messages: dataset.map((data, index) => \n                    <div className=\"questions_content_wrap\" key={index}>\n                        <div className=\"questions_content\">\n                            <p>{data.text}</p>\n                        </div>\n                        <div className=\"questions_username\">\n                            {`${data.first_name} ${data.last_name}`}\n                        </div>\n                        <div className=\"questions_info\">\n                            <div className=\"questions_received_time\">\n                                <p>{this.convertDateFormat(data.date)}</p>\n                            </div>\n                            <Question_reply data={data} botId={this.props.botId} convertDateFormat={this.convertDateFormat}></Question_reply>\n                            \n                        </div>\n                    </div>\n                )})\n            }).catch(function(err) {\n                console.log(err);\n            })\n    }\n\n    convertDateFormat(date) {\n        const day = new Date(date);\n        return day.toDateString() + ' ' + day.toTimeString().split(' ')[0];\n    }\n\n    render() {\n        return (\n            <div className=\"section_questions\">\n                <div className=\"module_path\">\n                    <p><span>Modules  /  </span>Collect Questions</p>\n                </div>\n                <Title title={\"Manage all of questions\"}></Title>\n                {this.state.messages.length === 0 ? \n                            <div className=\"empty_item\">There's any questions yet</div>\n                            : this.state.messages}\n            </div>\n        )\n    }\n}\n\nexport default Questions;","import React from 'react';\nimport Axios from 'axios';\nimport Title from './Section_title';\nimport '../style/css/Interests.min.css';\n\nclass Interests extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            interests: [],\n            interest_member: [],\n            serve_interests: [],\n            active_popup: false\n        }\n    }\n\n    componentDidMount() {\n        Axios.post('/getInterest', {chat_id: window.localStorage.getItem('chat_id')})\n            .then((res) => {\n                const dataset = [];\n                \n                for (var data of res.data) {\n                    dataset.push(data);\n                }\n\n                this.setState({interests: dataset})\n            })\n        Axios.post('/getInterestMembers', {chat_id: window.localStorage.getItem('chat_id')})\n            .then((res) => {\n                const dataset = res.data;\n\n                this.setState({interest_member: dataset.map((data, index) => \n                    <tr className=\"interest_member\" key={index}>\n                        <td>\n                            {data.first_name + ' ' + data.last_name}\n                        </td>\n                        <td onClick={() => this.changeContentbox(data.user_id)}>\n                            <p>VIEW</p>\n                        </td>\n                        <td>\n                            <i className=\"icon icon-download\"></i>\n                        </td>            \n                    </tr>\n                )})\n            })\n    }\n\n    changeContentbox(user_id) {\n        this.setState({serve_interests: this.state.interests.map((data, index) => {\n            const entities = JSON.parse(data.entities);\n\n            if (data.user_id === user_id && data.text) {\n                if (entities) {\n                    if (entities[0]['type'] === 'bot_command') {\n                        return;\n                    }\n                }\n                return (\n                    <div className=\"interest_contents\" key={index}>\n                        <p>\n                            {data.text}\n                        </p>\n                        <p>\n                            {this.convertDateFormat(data.registered_time)}\n                        </p>\n                    </div>\n                )\n            }\n        }), active_popup: true})\n\n        document.querySelector('body').onclick = (ev) => {\n            this.closeContentbox();\n        }\n    }\n\n    closeContentbox() {\n        this.setState({active_popup: false})\n        document.querySelector('body').removeEventListener('click', this);\n    }\n\n    convertDateFormat(date) {\n        const day = new Date(date);\n        return day.toDateString() + ' ' + day.toTimeString().split(' ')[0];\n    }\n\n    render() {\n        return (\n            <div className=\"section_interests\">\n                <div className=\"module_path\">\n                    <p><span>Modules  /  </span>Users Followed</p>\n                </div>\n                <Title title={\"Focus on user who you are interested in\"}></Title>\n                <table className=\"interests_wrap\">\n                    <thead>\n                        <tr>\n                            <th>username</th>\n                            <th>view</th>\n                            <th>export</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.interest_member}\n                    </tbody>\n                </table>\n                <div className={this.state.active_popup ? 'interests_contents active' : 'interests_contents'}>\n                    <Title title={\"User Conversation Logs\"}></Title>\n                    {this.state.serve_interests}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Interests;","import React from 'react';\nimport Axios from 'axios';\nimport Title from './Section_title';\nimport '../style/css/Interest_words.min.css';\n\nclass Interest_words extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          wordlist: [],\n          value: ''\n        };\n    }\n\n    componentDidMount() {\n        this.getWordData();\n    }\n\n    changeValues (event) {\n        this.setState({value: event.target.value})\n    }\n\n    submit_blacklist (ev) {\n        if (this.state.value.length !== 0) {\n            const val = this.state.value\n            \n            const chat_id = window.localStorage.getItem('chat_id')\n            if (chat_id.length !== 0) {\n                Axios.post('pushExpectWord', {word: val, chat_id: chat_id})\n                .then((res) => {\n                    if (res.data) {\n                        this.getWordData()\n                        this.setState({value: ''})\n                    }\n                })\n            } else {\n                alert('There is any valid key of chatting information')\n                return false\n            }\n        \n        }\n    }\n    \n    changeStateWordlist(is_active, id) {\n        if (is_active) {\n            Axios.post('editExpectedWord', {\n                chat_id: window.localStorage.getItem('chat_id'),\n                content: 0,\n                type: 'status',\n                id: id\n            })\n        } else {\n            Axios.post('editExpectedWord', {\n                chat_id: window.localStorage.getItem('chat_id'),\n                content: 1,\n                type: 'status',\n                id: id\n            })\n        }\n\n        return false;\n    }\n\n    getWordData() {\n        Axios.post('getExpectedWords', {chat_id: window.localStorage.getItem('chat_id')})\n        .then((res) => {\n            if (res.data && res.status === 200) {\n                let dataset = res.data;\n                \n                this.setState({wordlist: dataset.map((data, index) => \n                    <tr key={index}>\n                        <td>\n                            {data.word_name}\n                        </td>\n                        <td>\n                            {data.created_time}\n                        </td>\n                        <td>\n                            <span className=\"delete_icon icon\" onClick={(e) => this.deleteWord(data.idx)}></span>\n                            <span> Delete</span>\n                        </td>\n                        <td>\n                        <div className=\"disable_btn_wrap\">\n                                <label className=\"filter_group\" htmlFor={index + '_whitelist'}>\n                                    <input\n                                    type=\"checkbox\"\n                                    className=\"option_item\"\n                                    id={index + '_whitelist'}\n                                    onChange={(ev) => this.changeStateWordlist(data.is_active, data.idx)}\n                                    defaultChecked={data.is_active ? true : false}\n                                    ></input>\n                                    <span className=\"filter_label\"></span>\n                                    <span className=\"filter_circle\"></span>\n                                </label>\n                            </div>\n                        </td>\n                    </tr> \n                )})\n            }\n        })\n    }\n\n    deleteWord(word_id) {\n        var check = window.confirm('Are you sure to Delete this Item?')\n        if (check) {\n            Axios.post('delExpectedWord', {\n                word_id: word_id,\n                chat_id: window.localStorage.getItem('chat_id')\n            }).then((res) => {\n                if (res.status === 200 && res.data === true) {\n                    this.getWordData()\n                }\n            })\n        }\n        \n    }\n\n    render() {\n        return (\n            <div className=\"section_interestword\">\n                <div className=\"module_path\">\n                    <p><span>Modules  /  </span>Interest Words</p>\n                </div>\n                <Title title={'put a word what you want to look down.'}></Title>\n                <div className=\"interestword_input_wrap\">\n                    <label htmlFor=\"interestword_input\" className=\"interestword_label\">Enter words you want to watch</label>\n                    <div className=\"input_wrap\">\n                        <input id=\"interestword_input\" className=\"interestword_input\" onChange={(ev) => this.changeValues(ev)} onKeyUp={(ev)=> {if(ev.which === 13) {this.submit_blacklist(ev)}}} value={this.state.value}></input>\n                        <button type=\"button\" className=\"interestword_register\" onClick={(ev) => this.submit_blacklist(ev)}>ADD</button>\n                    </div>\n                </div>\n                \n                <p className=\"table_title\">\n                    interest words\n                </p>\n                <table className=\"interestword_tb\">\n                    <thead>\n                        <tr>\n                            <th width=\"35%\">Words</th>\n                            <th width=\"45%\">Date Added</th>\n                            <th width=\"10%\">Action</th>\n                            <th width=\"10%\">Status</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.wordlist.length === 0 \n                        ?\n                            <tr><td colSpan=\"3\" className=\"empty_item\">No Items</td></tr>\n                        :\n                            this.state.wordlist\n                        }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\n\nexport default Interest_words;","import React from 'react';\nimport Axios from 'axios';\nimport Title from './Section_title';\nimport '../style/css/FAQ_stats.min.css';\n\nclass FAQ_stats extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            faq_stats: []\n        }\n    }\n\n    componentDidMount() {\n        Axios.post('/getFaqlist', {chat_id: window.localStorage.getItem('chat_id')})\n            .then((res) => {\n                const dataset = res.data;\n\n                this.setState({faq_stats: dataset.map((data, index) => \n                    <tr className=\"faqstats_member\" key={index}>\n                        <td>\n                            {data.faq_response}\n                        </td>\n                        <td>\n                            {data.helpful + ' votes'}\n                        </td>\n                        <td>\n                            {data.notenough + ' votes'}\n                        </td>            \n                        <td>\n                            {data.wrong_answer + ' votes'}\n                        </td>            \n                    </tr>\n                )})\n            })\n    }\n\n    convertDateFormat(date) {\n        const day = new Date(date);\n        return day.toDateString() + ' ' + day.toTimeString().split(' ')[0];\n    }\n\n    render() {\n        return (\n            <div className=\"section_faqstats\">\n                <div className=\"module_path\">\n                    <p><span>Modules  /  </span>FAQ Stats</p>\n                </div>\n                <Title title={\"Figure a stat of your answers out more clear\"}></Title>\n                <table className=\"faqstats_wrap\">\n                    <thead>\n                        <tr>\n                            <th>FAQ</th>\n                            <th width=\"15%\">Useful</th>\n                            <th width=\"15%\">Not Enough Info</th>\n                            <th width=\"15%\">Wrong Info</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.faq_stats}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nexport default FAQ_stats;","import React, { useState } from \"react\";\nimport { Route, Switch, HashRouter as Router } from \"react-router-dom\";\nimport \"./App.css\";\n\nimport RegisterChat from \"./components/Register_chat\";\nimport Signin from './components/Signin';\nimport Features from './components/Features';\nimport LeftNav from \"./components/LeftNav\";\nimport Header from './components/Header_main';\nimport LandingFooter from './components/LandingFooter';\nimport LandingHeader from './components/LandingHeader';\n\nimport Messages from './components/Pages/Messages';\nimport MessageLog from './components/Pages/MessageLog';\nimport Users from \"./components/Pages/UserManager\";\nimport User from './components/Pages/User';\nimport Intereactions from './components/Pages/Interactions';\nimport Start from \"./components/Modules/StartMenu\";\nimport AntiSpam from './components/Pages/AntiSpam';\nimport Settings from './components/Pages/Settings';\n\nimport WordManager from \"./components/WordManager\";\nimport Whitelist from \"./components/Whitelist_URL\";\nimport Log from \"./components/Log\";\nimport Faq from \"./components/FAQ_register\";\nimport Dashboard from \"./components/Dashboard\";\nimport Modules from './components/Modules';\n\nimport Questions from './components/Questions';\nimport Interests from './components/Interests';\nimport Keypoint from './components/Interest_words';\nimport FAQStats from './components/FAQ_stats';\n\nimport Axios from \"axios\";\n// Axios.defaults.baseURL = \"https://chatbot-258301.appspot.com/api/\";\n// Axios.defaults.baseURL = \"http://localhost:4000/api/\";\nAxios.defaults.baseURL = \"https://hysoop.com/api/\"\n\nfunction App() {\n  const [isValid, setIsValid] = useState(false);\n  const [statusNav, setStatusNav] = useState(\"word\");\n  const [chatInfo, setChatInfo] = useState([]);\n  const [botId, setBotId] = useState('847825836:AAFv02ESsTVjnrzIomgdiVjBGWVw7CpN_Cg');\n  const [botName, setBotName] = useState('aqoom_bot')\n  // const [botId, setBotId] = useState('822428347:AAGXao7qTxCL5MoqQyeSqPc7opK607fA51I');\n  // const [botName, setBotName] = useState('aqoom_test_bot')\n  \n  const isLiving = getCookie(\"living\") == 'true';\n  const inConsole = getCookie('STAY_C') == 'true';\n\n  function getCookie(id) {\n    const cookies = document.cookie.split(\";\");\n    \n    for (var cookie of cookies) {\n      var parse = cookie.split(\"=\");\n      if (parse[0].trim() === id) {\n        return parse[1];\n      }\n    }\n  }\n  \n  if (isValid || inConsole) {\n    return (\n      <Router basename=\"/chatmanager\">\n        <Header botId={botId}></Header>\n        <div className=\"main_container\">\n          <LeftNav setStatus={setStatusNav} statusNav={statusNav} setChatInfo={setChatInfo} botId={botId}></LeftNav>\n          <section className=\"section_content\">\n            <Switch>\n              <Route path=\"/\" exact render={() => <Users botId={botId}></Users>}></Route>\n\n              <Route path=\"/members\" render={() => <Users botId={botId}></Users>}></Route>\n              <Route path=\"/messages\" render={() => <Messages botId={botId}></Messages>}></Route>\n              <Route path=\"/user\" render={() => <User botId={botId}></User>}></Route>\n              <Route path=\"/logs\" render={() => <MessageLog botId={botId}></MessageLog>}></Route>\n              <Route path=\"/interactions\" render={() => <Intereactions botId={botId}></Intereactions>}></Route>\n              <Route path=\"/antispam\" render={() => <AntiSpam botId={botId}></AntiSpam>}></Route>\n              <Route path=\"/settings\" render={() => <Settings botId={botId}></Settings>}></Route>\n\n              <Route path=\"/dashboard\" render={() => <Dashboard botId={botId}></Dashboard>}></Route>\n              <Route path=\"/modules\" render={() => <Modules botId={botId}></Modules>}></Route>\n              <Route path=\"/whitelist\" render={() => <Whitelist botId={botId}></Whitelist>}></Route>\n              <Route path=\"/blacklist\" render={() => <WordManager botId={botId}></WordManager>}></Route>\n              <Route path=\"/faq\" render={() => <Faq botId={botId}></Faq>}></Route>\n              <Route path=\"/startmenu\" render={() => <Start botId={botId}></Start>}></Route>\n              <Route path=\"/logs\" render={() => <Log botId={botId}></Log>}></Route>\n              <Route path=\"/users\" render={() => <Users botId={botId}></Users>}></Route>\n              \n              <Route path=\"/questions\" render={() => <Questions botId={botId}></Questions>}></Route>\n              <Route path=\"/interest\" render={() => <Interests botId={botId}></Interests>}></Route>\n              <Route path=\"/keypoint\" render={() => <Keypoint botId={botId}></Keypoint>}></Route>\n              <Route path=\"/faqstats\" render={() => <FAQStats botId={botId}></FAQStats>}></Route>\n            </Switch>\n          </section>\n          <div className=\"dim\"></div>\n        </div>\n      </Router>\n    );\n  } else {\n    return (\n      <Router>\n        <div className=\"App\">\n          <LandingHeader onLogin={isLiving} setValid={setIsValid}></LandingHeader>\n          <Switch>\n            <Route path=\"/\" exact render={() => <RegisterChat></RegisterChat>}></Route>\n            <Route path=\"/features\" render={() => <Features></Features>}></Route>\n            <Route path=\"/signin\" render={() => <Signin botName={botName}></Signin>}></Route>\n          </Switch>\n          <LandingFooter></LandingFooter>\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'babel-polyfill';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/grayline.beaba093.svg\";","module.exports = __webpack_public_path__ + \"static/media/AQOOM_logo.2ada93ac.png\";"],"sourceRoot":""}